{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 40, "name": "FUN_0000029c", "ea": 668}, "decompilation": "\r\nvoid FUN_0000029c(undefined4 param_1,uint param_2)\r\n\r\n{\r\n  if ((param_2 & 1) != 0) {\r\n    func_0x00022fdc();\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 900, "name": "FUN_000002f4", "ea": 756}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000002f4(void)\r\n\r\n{\r\n  undefined4 *puVar1;\r\n  \r\n  _DAT_8004d704 = 1;\r\n  _DAT_8004d70c = 0;\r\n  func_0x0003d754(0);\r\n  func_0x0003d754(1);\r\n  func_0x0003c6fc(0x44);\r\n  func_0x0001bc08(0);\r\n  func_0x000205ac(0);\r\n  DAT_80048e8c = 0;\r\n  func_0x0003ce14(1);\r\n  func_0x0001bc08(0);\r\n  func_0x000205ac(0);\r\n  DAT_80048e8c = 0;\r\n  func_0x0003a6cc();\r\n  func_0x0001bc08(0);\r\n  func_0x000205ac(0);\r\n  DAT_80048e8c = 0;\r\n  func_0x0003af1c();\r\n  _DAT_80043c60 = 1;\r\n  func_0x000409e0();\r\n  _DAT_800c03f4 = 0;\r\n  func_0x0003d8e8(0x800c03f8,0,0x122);\r\n  func_0x0003d8e8(0x800c0880,0,9);\r\n  DAT_80048d84 = 0;\r\n  func_0x0003d940();\r\n  func_0x0003b19c(0x19);\r\n  _DAT_8004d6f0 = 0;\r\n  func_0x00074690(12000);\r\n  func_0x0003d868(0);\r\n  func_0x00083ffc();\r\n  func_0x000840d8(0);\r\n  func_0x000ad860();\r\n  func_0x000c92c4(8);\r\n  func_0x000ca25c(0x12);\r\n  func_0x0003d89c(0);\r\n  func_0x000746f4();\r\n  func_0x0003b19c(0x1e);\r\n  func_0x000c857c();\r\n  func_0x0003b19c(0x1e);\r\n  func_0x000c7fa0();\r\n  func_0x0003b19c(0x19);\r\n  func_0x000c4ce4();\r\n  func_0x0003b19c(0x1e);\r\n  func_0x000c4b60();\r\n  func_0x0003b19c(0x19);\r\n  func_0x000c7fc0();\r\n  func_0x0003b19c(0x1e);\r\n  func_0x00084034();\r\n  func_0x000c92bc(8);\r\n  func_0x000ca254(0x12);\r\n  func_0x0009add0(0);\r\n  func_0x0003b19c(0x19);\r\n  func_0x0003d7b4(1);\r\n  func_0x0003b070();\r\n  func_0x0003ce14(0);\r\n  func_0x0003c6fc(4);\r\n  func_0x000acae4();\r\n  func_0x000a1a68();\r\n  _DAT_800ce75c = func_0x000acb18(0x24);\r\n  func_0x000acfa0(_DAT_800ce75c,0,0);\r\n  *(undefined4 *)(_DAT_800ce75c + 0x1c) = 0;\r\n  *(undefined4 *)(_DAT_800ce75c + 0x20) = 0;\r\n  *(undefined4 *)(_DAT_800ce75c + 0x14) = 0x2b6;\r\n  puVar1 = (undefined4 *)func_0x000a1ac8(0x78);\r\n  _DAT_800ce760 = puVar1;\r\n  *puVar1 = _DAT_800ceb74;\r\n  puVar1[1] = _DAT_800ceb78;\r\n  puVar1 = _DAT_800ce760;\r\n  _DAT_800ce760[2] = _DAT_800ceb7c;\r\n  puVar1[3] = _DAT_800ceb80;\r\n  func_0x000a1dbc(_DAT_800ce760,3);\r\n  _DAT_800be5de = 0x834;\r\n  _DAT_800be5e0 = 0x834;\r\n  _DAT_800be5e2 = 0x834;\r\n  func_0x000b18d4();\r\n  func_0x0003e838(6,1);\r\n  func_0x000cd2e8();\r\n  func_0x0003d868(0);\r\n  func_0x0003d868(1);\r\n  func_0x0001bc08(0);\r\n  func_0x000205ac(0);\r\n  DAT_80048e8c = 0;\r\n  DAT_80048e94 = 2;\r\n  DAT_80048fb0 = 0;\r\n  _DAT_800cf8c4 = 0;\r\n  func_0x00020a0c(0xb1c4f);\r\n  _DAT_80048e7c = _DAT_8004cd1c;\r\n  _DAT_80048e7e = _DAT_8004cd1e;\r\n  func_0x00041614();\r\n  func_0x000c88bc();\r\n  if (-1 < _DAT_8004d764) {\r\n    func_0x0003d89c(1);\r\n    func_0x000cd638(_DAT_8004d764 + 0x2f);\r\n    func_0x0003d868(1);\r\n    DAT_80048e94 = 2;\r\n    _DAT_8004d764 = -1;\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 100, "name": "FUN_00000678", "ea": 1656}, "decompilation": "\r\nvoid FUN_00000678(void)\r\n\r\n{\r\n  func_0x0003eb7c(0x3c);\r\n  func_0x0003e9cc();\r\n  func_0x0001bc08(0);\r\n  func_0x000205ac(0);\r\n  DAT_80048e8c = 0;\r\n  func_0x0003d89c(1);\r\n  func_0x0003d89c(0);\r\n  func_0x0003d7b4(1);\r\n  func_0x0003d7b4(0);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 476, "name": "FUN_000006dc", "ea": 1756}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000006dc(void)\r\n\r\n{\r\n  undefined4 *puVar1;\r\n  int iVar2;\r\n  \r\n  func_0x0003dec4();\r\n  iVar2 = func_0x00041614();\r\n  puVar1 = _DAT_800ce760;\r\n  if (((iVar2 != 0) && (_DAT_800cf8c4 != 4)) && (_DAT_800cf8c4 != 0)) {\r\n    _DAT_800cf8c4 = 3;\r\n  }\r\n  *_DAT_800ce760 = _DAT_800ceb74;\r\n  puVar1[1] = _DAT_800ceb78;\r\n  puVar1 = _DAT_800ce760;\r\n  _DAT_800ce760[2] = _DAT_800ceb7c;\r\n  puVar1[3] = _DAT_800ceb80;\r\n  func_0x000a1eb8(_DAT_800ce760,0);\r\n  func_0x000acc7c(_DAT_800ce75c);\r\n  setCopControlWord(2,0x4000,_DAT_800be5cc);\r\n  setCopControlWord(2,0x4800,_DAT_800be5d0);\r\n  setCopControlWord(2,0x5000,_DAT_800be5d4);\r\n  setCopControlWord(2,0x5800,_DAT_800be5d8);\r\n  setCopControlWord(2,0x6000,_DAT_800be5dc);\r\n  setCopControlWord(2,0x8000,_DAT_800be5e4);\r\n  setCopControlWord(2,0x8800,_DAT_800be5e8);\r\n  setCopControlWord(2,0x9000,_DAT_800be5ec);\r\n  setCopControlWord(2,0x9800,_DAT_800be5f0);\r\n  setCopControlWord(2,0xa000,_DAT_800be5f4);\r\n  setCopControlWord(2,0x6800,_DAT_800be5dc >> 0x10);\r\n  setCopControlWord(2,0x7000,(int)(short)_DAT_800be5e0);\r\n  setCopControlWord(2,0x7800,_DAT_800be5e0 >> 0x10);\r\n  setCopControlWord(2,0xa800,_DAT_800be5f4 >> 0x10);\r\n  setCopControlWord(2,0xb000,(int)(short)_DAT_800be5f8);\r\n  setCopControlWord(2,0xb800,_DAT_800be5f8 >> 0x10);\r\n  setCopControlWord(2,0x4000,_DAT_800be5cc);\r\n  setCopControlWord(2,0x4800,_DAT_800be5d0);\r\n  setCopControlWord(2,0x5000,_DAT_800be5d4);\r\n  setCopControlWord(2,0x5800,_DAT_800be5d8);\r\n  setCopControlWord(2,0x6000,_DAT_800be5dc);\r\n  func_0x00043b60();\r\n  if (5 < _DAT_800cf8c4) {\r\n    func_0x000ace74(_DAT_800ce75c);\r\n    func_0x00043b90(*(int *)(_DAT_80043cfc + 0x78) + 4);\r\n    func_0x000ad154();\r\n    func_0x0003cc50(7);\r\n    return;\r\n  }\r\n                    /* WARNING: Could not emulate address calculation at 0x00000860 */\r\n                    /* WARNING: Treating indirect jump as call */\r\n  (**(code **)(_DAT_800cf8c4 * 4 + -0x7ff3bf9c))();\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 96, "name": "FUN_00000900", "ea": 2304}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nundefined4 FUN_00000900(void)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  \r\n  if (_DAT_800cfa50 < 7) {\r\n                    /* WARNING: Could not emulate address calculation at 0x00000938 */\r\n                    /* WARNING: Treating indirect jump as call */\r\n    uVar1 = (**(code **)(_DAT_800cfa50 * 4 + -0x7ff3bf84))();\r\n    return uVar1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 52, "name": "FUN_00000a30", "ea": 2608}, "decompilation": "\r\nuint FUN_00000a30(int param_1)\r\n\r\n{\r\n  int iVar1;\r\n  \r\n  iVar1 = func_0x000431e4();\r\n  return (int)(uint)*(ushort *)(iVar1 + 0x26) >> (*(ushort *)(param_1 + 0x14) & 0x1f) & 1;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 156, "name": "FUN_00000a64", "ea": 2660}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00000a64(int param_1)\r\n\r\n{\r\n  short sVar1;\r\n  int iVar2;\r\n  \r\n  iVar2 = func_0x000c4a90();\r\n  if (iVar2 == 0) {\r\n    _DAT_8004d764 = *(undefined2 *)(param_1 + 0x14);\r\n  }\r\n  iVar2 = func_0x000431e4();\r\n  sVar1 = *(short *)(param_1 + 0x14);\r\n  *(short *)(iVar2 + 0x28) = sVar1;\r\n  if (-1 < sVar1) {\r\n    *(ushort *)(iVar2 + 0x26) = *(ushort *)(iVar2 + 0x26) | (ushort)(1 << ((int)sVar1 & 0x1fU));\r\n  }\r\n  _DAT_8004d6ee =\r\n       *(undefined2 *)(*(int *)(param_1 + (uint)*(ushort *)(param_1 + 0x42) * 4 + 0x28) + 0x10);\r\n  _DAT_800cfa50 = 6;\r\n  _DAT_8004d75c = (uint)*(ushort *)(param_1 + 0x14);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 388, "name": "FUN_00000b00", "ea": 2816}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00000b00(void)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  uint uVar3;\r\n  \r\n  func_0x000ad6d8(0,1);\r\n  func_0x000ad6d8(1,10);\r\n  func_0x000ad6d8(3,10);\r\n  func_0x000ad6d8(2,0xc);\r\n  func_0x000ad6d8(4,7);\r\n  _DAT_800bd790 = 1;\r\n  iVar1 = func_0x000ad244(0x4c0,0);\r\n  uVar3 = 0;\r\n  func_0x000ad754(0,0,*(undefined4 *)(iVar1 * 4 + -0x7ff3fc08));\r\n  iVar2 = func_0x000ad244(0x4c1,0);\r\n  if (0 < iVar2) {\r\n    do {\r\n      func_0x000ad754(1,(int)(short)uVar3,\r\n                      *(undefined4 *)(((int)((uVar3 + iVar1 + 1) * 0x10000) >> 0xe) + -0x7ff3fc08));\r\n      uVar3 = uVar3 + 1 & 0xffff;\r\n    } while ((int)uVar3 < iVar2);\r\n  }\r\n  _DAT_800cf0a8 = iVar2;\r\n  iVar1 = func_0x000ad244(0x4c2,0);\r\n  _DAT_800cfb2c = (ushort)(iVar1 - iVar2);\r\n  uVar3 = 0;\r\n  if ((iVar1 - iVar2 & 0xffffU) != 0) {\r\n    do {\r\n      func_0x000ad754(4,(int)(short)uVar3,\r\n                      *(undefined4 *)(((int)((uVar3 + iVar2 + 1) * 0x10000) >> 0xe) + -0x7ff3fc08));\r\n      uVar3 = uVar3 + 1 & 0xffff;\r\n    } while (uVar3 < _DAT_800cfb2c);\r\n  }\r\n  func_0x000c9cfc();\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 384, "name": "FUN_00000c84", "ea": 3204}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00000c84(void)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  uint uVar4;\r\n  \r\n  func_0x0003d754(1);\r\n  func_0x000413e4(0x4be,2,0);\r\n  func_0x0003d7b4(1);\r\n  func_0x000c525c(0,0x800cfa38);\r\n  func_0x000c525c(1,0x800cfad0);\r\n  func_0x000c525c(2,0x800cfa2c);\r\n  func_0x000c525c(3,&DAT_800cfa44);\r\n  func_0x000c525c(7,0x800cfaf0);\r\n  uVar4 = 0;\r\n  iVar3 = -0x7ff30810;\r\n  iVar2 = 0x2a0000;\r\n  do {\r\n    func_0x000c525c(iVar2 >> 0x10,iVar3);\r\n    iVar3 = iVar3 + 0xc;\r\n    uVar4 = uVar4 + 1;\r\n    iVar2 = iVar2 + 0x10000;\r\n  } while (uVar4 < 7);\r\n  uVar1 = func_0x000413a4(0x8004bd48);\r\n  func_0x0009f30c(0x800cfb38,0x8004bd48,uVar1);\r\n  _DAT_800cfadc = func_0x00041fdc(8);\r\n  func_0x00042008(_DAT_800cfadc,0x2fc,0x2fd);\r\n  _DAT_800cfa68 = func_0x00041fdc(8);\r\n  func_0x00042008(_DAT_800cfa68,9,10);\r\n  _DAT_800cfa64 = func_0x00041fdc(8);\r\n  func_0x00042008(_DAT_800cfa64,0xb,0xc);\r\n  _DAT_800cfae0 = func_0x00041fdc(8);\r\n  func_0x00042008(_DAT_800cfae0,0x2fe,0x2ff);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 1016, "name": "FUN_00000e04", "ea": 3588}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00000e04(void)\r\n\r\n{\r\n  short sVar1;\r\n  ushort uVar2;\r\n  int iVar3;\r\n  undefined4 *puVar4;\r\n  int iVar5;\r\n  uint uVar6;\r\n  uint uVar7;\r\n  int iVar8;\r\n  uint uVar9;\r\n  \r\n  uVar9 = 0;\r\n  iVar8 = 0;\r\n  uVar7 = 0;\r\n  do {\r\n    iVar3 = uVar7 * 0x44;\r\n    *(short *)(iVar3 + -0x7ff31468) = (short)uVar7;\r\n    iVar5 = *(int *)((uVar9 & 0xfff) * 4 + -0x7ffeb164);\r\n    if (uVar7 < 7) {\r\n      *(undefined2 *)(iVar3 + -0x7ff3147c) = (short)((short)iVar5 * 0x11 >> 4);\r\n      *(undefined2 *)(iVar3 + -0x7ff3147a) = 0;\r\n      *(short *)(iVar3 + -0x7ff31478) = (short)((iVar5 >> 0x10) * 0x11 >> 4);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    *(undefined2 *)(iVar3 + -0x7ff3147c) = 0;\r\n    *(undefined2 *)(iVar3 + -0x7ff3147a) = 0xde00;\r\n    *(undefined2 *)(iVar3 + -0x7ff31478) = 0;\r\n    iVar5 = uVar7 * 0x44;\r\n    *(undefined4 *)(iVar5 + -0x7ff31474) = *(undefined4 *)(iVar5 + -0x7ff3147c);\r\n    *(undefined4 *)(iVar5 + -0x7ff31470) = *(undefined4 *)(iVar5 + -0x7ff31478);\r\n    puVar4 = (undefined4 *)func_0x000ad888();\r\n    *puVar4 = 0;\r\n    puVar4[1] = 0;\r\n    func_0x000ad8f8(puVar4,0,0);\r\n    uVar6 = 0;\r\n    uVar9 = uVar9 + 0x249;\r\n    *(undefined4 **)(iVar5 + -0x7ff3145c) = puVar4;\r\n    *(undefined2 *)(iVar5 + -0x7ff3143c) = 6;\r\n    iVar3 = iVar8 * 0x20 + -0x20 + _DAT_800cfb30;\r\n    do {\r\n      iVar3 = iVar3 + 0x20;\r\n      *(int *)(uVar6 * 4 + iVar5 + -0x7ff31454) = iVar3;\r\n      uVar6 = uVar6 + 1 & 0xffff;\r\n      iVar8 = iVar8 + 1;\r\n    } while (uVar6 < 6);\r\n    iVar3 = uVar7 * 0x44;\r\n    *(short *)(iVar3 + -0x7ff31466) = (short)uVar7;\r\n    uVar7 = uVar7 + 1 & 0xffff;\r\n    *(int *)(iVar3 + -0x7ff31464) = _DAT_800cfafc + iVar3;\r\n    *(undefined4 *)(iVar3 + -0x7ff31460) = 0;\r\n  } while (uVar7 < 8);\r\n  iVar8 = func_0x000c7418(_DAT_8004d6ee);\r\n  _DAT_800cedb0 = iVar8;\r\n  *(undefined4 *)(iVar8 + 0x10) = 3;\r\n  func_0x000c753c(iVar8);\r\n  sVar1 = func_0x00022e5c((int)*(short *)(_DAT_800cedb0 + 8),(int)*(short *)(_DAT_800cedb0 + 0xc));\r\n  iVar8 = _DAT_800cedb0;\r\n  iVar3 = (uint)(*(short *)(_DAT_800cedb0 + 0x14) == 7) * 8;\r\n  _DAT_800ceb74 = *(undefined4 *)(iVar3 + -0x7ff31244);\r\n  _DAT_800ceb7c = *(undefined4 *)(iVar3 + -0x7ff31234);\r\n  _DAT_800ceb78 = *(undefined4 *)(iVar3 + -0x7ff31240);\r\n  _DAT_800ceb80 = *(undefined4 *)(iVar3 + -0x7ff31230);\r\n  iVar3 = _DAT_800cedb0 + 0x28;\r\n  _DAT_800ceda6 = -sVar1 + 0x1000;\r\n  _DAT_800ceda4 = -sVar1 + 0x1001;\r\n  if (*(short *)(*(int *)(iVar3 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4) + 0x10) !=\r\n      _DAT_8004d6ee) {\r\n    do {\r\n      sVar1 = *(short *)(iVar8 + 0x42);\r\n      uVar2 = sVar1 - 1;\r\n      if (sVar1 == 0) {\r\n        uVar2 = 5;\r\n      }\r\n      *(ushort *)(iVar8 + 0x42) = uVar2;\r\n    } while (*(short *)(*(int *)(iVar3 + (uint)uVar2 * 4) + 0x10) != _DAT_8004d6ee);\r\n  }\r\n  func_0x000c7be4(_DAT_800cedb0);\r\n  *(undefined2 *)(_DAT_800cedb0 + 0x24) = *(undefined2 *)(_DAT_800cedb0 + 0x26);\r\n  _DAT_1f800380 = 0x2222;\r\n  func_0x00096eb0(0);\r\n  _DAT_1f8003fc = 0xffffffff;\r\n  _DAT_1f8003f8 = 0xffffffff;\r\n  func_0x000cbff0(0x800ce764);\r\n  func_0x000cc884(0x800ce96c);\r\n  iVar8 = func_0x00043b44();\r\n  if (iVar8 == 0) {\r\n    _DAT_800cf8c4 = 1;\r\n    return;\r\n  }\r\n  func_0x000cb314(0x800ce764,1);\r\n  _DAT_800cf8c4 = 2;\r\n  func_0x00043b54(0);\r\n  uVar9 = _DAT_800ce964 - 1;\r\n  if ((int)(uint)(ushort)(_DAT_800ce966 + 1) < (int)(_DAT_800ce964 - 1)) {\r\n    uVar9 = (uint)(ushort)(_DAT_800ce966 + 1);\r\n  }\r\n  _DAT_800ce966 = (short)uVar9;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 140, "name": "FUN_000011fc", "ea": 4604}, "decompilation": "\r\nvoid FUN_000011fc(uint param_1,undefined2 *param_2)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  undefined2 local_18;\r\n  undefined2 local_16;\r\n  undefined4 local_14;\r\n  \r\n  iVar2 = (param_1 & 0xffff) * 0x18;\r\n  iVar3 = iVar2 + -0x7ffb4348;\r\n  uVar1 = func_0x000413a4(iVar3);\r\n  func_0x0009f30c(&local_18,iVar3,uVar1);\r\n  *param_2 = local_18;\r\n  param_2[1] = local_16;\r\n  *(undefined4 *)(param_2 + 2) = local_14;\r\n  *(undefined4 *)(param_2 + 4) = *(undefined4 *)(iVar2 + -0x7ffb433c);\r\n  param_2[4] = param_2[4] << 2;\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 560, "name": "FUN_00001288", "ea": 4744}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00001288(undefined2 *param_1,uint param_2,uint param_3,short param_4,short param_5,\r\n                 short param_6,short param_7)\r\n\r\n{\r\n  char cVar1;\r\n  char cVar2;\r\n  undefined4 *puVar3;\r\n  uint uVar4;\r\n  short sVar5;\r\n  char cVar6;\r\n  undefined2 uVar7;\r\n  uint *puVar8;\r\n  undefined2 uVar9;\r\n  int iVar10;\r\n  int iVar11;\r\n  int iVar12;\r\n  undefined4 local_10;\r\n  undefined4 local_c;\r\n  undefined4 local_8;\r\n  undefined4 local_4;\r\n  \r\n  puVar3 = _DAT_80043cfc;\r\n  iVar10 = (int)param_5;\r\n  iVar12 = (int)param_6;\r\n  iVar11 = (int)param_7;\r\n  if (iVar12 == 0) {\r\n    iVar12 = (int)(short)param_1[4];\r\n  }\r\n  if (iVar11 == 0) {\r\n    iVar11 = (int)(short)param_1[5];\r\n  }\r\n  if ((param_3 & 1) != 0) {\r\n    param_4 = (short)((uint)(((int)param_4 - iVar12 / 2) * 0x10000) >> 0x10);\r\n  }\r\n  if ((param_3 & 2) != 0) {\r\n    iVar10 = (iVar10 - iVar11 / 2) * 0x10000 >> 0x10;\r\n  }\r\n  if ((param_3 & 4) != 0) {\r\n    iVar10 = (iVar10 - iVar11) * 0x10000 >> 0x10;\r\n  }\r\n  puVar8 = (uint *)*_DAT_80043cfc;\r\n  _DAT_80043cfc[1] = _DAT_80043cfc[1] + 1;\r\n  sVar5 = (short)iVar12 + param_4;\r\n  *puVar3 = puVar8 + 10;\r\n  uVar9 = (undefined2)iVar10;\r\n  local_10 = CONCAT22(uVar9,param_4);\r\n  local_c = CONCAT22(uVar9,sVar5);\r\n  uVar4 = local_c;\r\n  uVar7 = (undefined2)(iVar11 + iVar10);\r\n  local_8 = CONCAT22(uVar7,param_4);\r\n  local_4 = CONCAT22(uVar7,sVar5);\r\n  if (((param_3 & 0x10) != 0) || ((param_3 & 8) != 0)) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  if ((param_3 & 0x20) != 0) {\r\n    local_c = CONCAT22((short)((uint)((iVar11 + iVar10) * 0x10000) >> 0x10),param_4);\r\n    local_10 = local_4;\r\n    local_8 = uVar4;\r\n    local_4 = CONCAT22(uVar9,param_4);\r\n  }\r\n  puVar8[1] = 0x2c808080;\r\n  puVar8[2] = local_10;\r\n  puVar8[4] = local_c;\r\n  puVar8[6] = local_8;\r\n  puVar8[8] = local_4;\r\n  *(ushort *)((int)puVar8 + 0x16) = param_1[1] | 0x200;\r\n  *(undefined2 *)((int)puVar8 + 0xe) = *param_1;\r\n  uVar7 = param_1[5];\r\n  cVar2 = (char)param_1[2];\r\n  cVar1 = cVar2 + (char)param_1[4] + -1;\r\n  cVar6 = (char)param_1[3];\r\n  *(char *)((int)puVar8 + 0xd) = cVar6;\r\n  *(char *)((int)puVar8 + 0x15) = cVar6;\r\n  cVar6 = cVar6 + (char)uVar7 + -1;\r\n  *(char *)(puVar8 + 3) = cVar2;\r\n  *(char *)(puVar8 + 7) = cVar2;\r\n  iVar10 = (param_2 & 0xffff) * 8;\r\n  *(char *)(puVar8 + 5) = cVar1;\r\n  *(char *)(puVar8 + 9) = cVar1;\r\n  *(char *)((int)puVar8 + 0x1d) = cVar6;\r\n  *(char *)((int)puVar8 + 0x25) = cVar6;\r\n  if (*(uint *)(&DAT_8004d778 + iVar10) != 0) {\r\n    *puVar8 = *(uint *)(&DAT_8004d778 + iVar10) | 0x9000000;\r\n    *(uint **)(&DAT_8004d778 + iVar10) = puVar8;\r\n    return;\r\n  }\r\n  *(uint **)(&DAT_8004d774 + iVar10) = puVar8;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 408, "name": "FUN_000014b8", "ea": 5304}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nundefined4 FUN_000014b8(void)\r\n\r\n{\r\n  if ((_DAT_8004cc58 & 0x10000000) == 0) {\r\n    if ((_DAT_8004cc58 & 0x40080000) == 0) {\r\n      if (((((_DAT_8004cc58 & 0x800000) == 0) && ((_DAT_8004cc58 & 0x200000) == 0)) &&\r\n          ((_DAT_8004cc58 & 0x4000000) == 0)) && ((_DAT_8004cc58 & 0x8000000) == 0)) {\r\n        if ((((_DAT_8004cc58 & 0x20000000) == 0) || (_DAT_800ce786 != 0)) || (_DAT_800ce98e != 0)) {\r\n          if ((((int)_DAT_8004cc58 < 0) && (_DAT_800ce786 == 0)) &&\r\n             ((_DAT_800ce98e == 0 && (*(int *)(_DAT_800cedb0 + 0x10) != 0)))) {\r\n            func_0x000c4ac4();\r\n          }\r\n        }\r\n        else if (*(int *)(*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 +\r\n                                  0x28) + 0xc) != 2) {\r\n          halt_baddata();\r\n        }\r\n        return 0;\r\n      }\r\n    }\r\n    else if (_DAT_800ce786 != 0) {\r\n      return 0;\r\n    }\r\n  }\r\n  else if (_DAT_800ce786 != 1) {\r\n    return 6;\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 1156, "name": "FUN_00001650", "ea": 5712}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Removing unreachable block (ram,0x00001a64) */\r\n/* WARNING: Removing unreachable block (ram,0x00001a6c) */\r\n/* WARNING: Removing unreachable block (ram,0x00001a80) */\r\n/* WARNING: Removing unreachable block (ram,0x00001994) */\r\n/* WARNING: Removing unreachable block (ram,0x000019a8) */\r\n/* WARNING: Removing unreachable block (ram,0x000019c4) */\r\n/* WARNING: Removing unreachable block (ram,0x000019d8) */\r\n/* WARNING: Removing unreachable block (ram,0x00001a8c) */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00001650(void)\r\n\r\n{\r\n  ushort uVar1;\r\n  bool bVar2;\r\n  int iVar3;\r\n  uint uVar4;\r\n  int iVar5;\r\n  uint uVar6;\r\n  undefined4 uVar7;\r\n  \r\n  uVar7 = 0;\r\n  _DAT_800cfa54 = _DAT_800cfa54 + 1;\r\n  _DAT_800cfa58 = _DAT_800cfa58 + 0x28;\r\n  if ((uint)_DAT_800ceda4 != (uint)_DAT_800ceda6) {\r\n    uVar4 = (uint)_DAT_800ceda6 - (uint)_DAT_800ceda4 & 0xfff;\r\n    uVar7 = 1;\r\n    if (0x800 < uVar4) {\r\n      uVar4 = uVar4 - 0x1000;\r\n    }\r\n    uVar6 = uVar4;\r\n    if ((int)uVar4 < 0) {\r\n      uVar6 = -uVar4;\r\n    }\r\n    iVar3 = _DAT_800ceda8;\r\n    if (_DAT_800ceda8 < 0) {\r\n      iVar3 = _DAT_800ceda8 + 3;\r\n    }\r\n    if ((int)uVar6 < iVar3 >> 2) {\r\n      _DAT_800ceda4 = _DAT_800ceda6;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    iVar3 = _DAT_800ceda8;\r\n    if ((int)uVar4 < 1) {\r\n      iVar3 = -_DAT_800ceda8;\r\n    }\r\n    if (iVar3 < 0) {\r\n      iVar3 = iVar3 + 3;\r\n    }\r\n    _DAT_800ceda4 = _DAT_800ceda4 + (short)(iVar3 >> 2) & 0xfff;\r\n    if ((_DAT_800ceda4 - _DAT_800ceda6 & 0xfff) == 0) {\r\n      _DAT_800ceda4 = _DAT_800ceda6;\r\n    }\r\n  }\r\n  iVar3 = func_0x000c5518();\r\n  if (*(int *)(_DAT_800cedb0 + 0x10) == 0) {\r\n    iVar3 = 0;\r\n  }\r\n  if (((*(int *)(*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28) + 0xc)\r\n        == 2) && (_DAT_800ce98e == 0)) && ((iVar3 == 5 || (iVar3 == 8)))) {\r\n    func_0x000ccb6c(0x800ce96c,8);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  iVar5 = 0;\r\n  if (iVar3 != 8) {\r\n    iVar5 = iVar3;\r\n  }\r\n  func_0x000ccb6c(0x800ce96c,iVar5);\r\n  if (_DAT_800ce98e != 0) {\r\n    iVar3 = 0;\r\n  }\r\n  func_0x000cb4bc(0x800ce764,iVar3);\r\n  if ((_DAT_800ce786 != 0) && (iVar3 = 0, _DAT_800ce786 != 1)) {\r\n    func_0x000cc608(0x800ce764);\r\n  }\r\n  if (iVar3 == 8) {\r\n    if (_DAT_800cf8c4 != 2) {\r\n      _DAT_800cf8c4 = 2;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    _DAT_800cf8c4 = 1;\r\n    iVar3 = 0;\r\n  }\r\n  uVar4 = 0;\r\n  do {\r\n    bVar2 = _DAT_800cedb0 == uVar4 * 0x44 + -0x7ff3147c;\r\n    func_0x000c5b34(uVar4 * 0x44 + -0x7ff3147c,iVar3,uVar7);\r\n    if (iVar3 == 1 && bVar2) {\r\n      iVar3 = 0;\r\n    }\r\n    uVar4 = uVar4 + 1 & 0xffff;\r\n  } while (uVar4 < 8);\r\n  func_0x000ca284(iVar3);\r\n  func_0x000c92ec(iVar3);\r\n  func_0x000c7c48();\r\n  func_0x000842d8();\r\n  if (_DAT_800cedb4 != 0) {\r\n    _DAT_800cedb4 = _DAT_800cedb4 + -1;\r\n  }\r\n  if ((_DAT_800ce786 != 0) && (_DAT_800ce786 != 1)) {\r\n    iVar3 = *(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28);\r\n    func_0x000431e4();\r\n    if (*(ushort *)(iVar3 + 0x10) < 0x20) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    func_0x000cd3c4(0x800ce8b0,0x17);\r\n    iVar5 = -1;\r\n    iVar3 = (int)_DAT_8004d742;\r\n    uVar1 = *(ushort *)\r\n             (*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28) + 0x10);\r\n    if ((iVar3 == -1) || (iVar5 = iVar3 + -0x20, _DAT_8004d740 != uVar1)) {\r\n      func_0x000431e4(iVar3,iVar5);\r\n      if (uVar1 < 0x20) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n      iVar5 = 0;\r\n    }\r\n    func_0x000cd26c(0x800ce8b0,iVar5);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 460, "name": "FUN_00001ad4", "ea": 6868}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00001ad4(undefined2 *param_1,uint param_2,int param_3)\r\n\r\n{\r\n  ushort uVar1;\r\n  ushort uVar2;\r\n  uint uVar3;\r\n  int iVar4;\r\n  int iVar5;\r\n  uint uVar6;\r\n  \r\n  if (_DAT_800cedb0 != param_1) {\r\n    param_2 = 0;\r\n  }\r\n  if (*(uint *)(param_1 + 8) < 0xb) {\r\n                    /* WARNING: Could not emulate address calculation at 0x00001b30 */\r\n                    /* WARNING: Treating indirect jump as call */\r\n    (**(code **)(*(uint *)(param_1 + 8) * 4 + -0x7ff3bf64))();\r\n    return;\r\n  }\r\n  if (param_3 != 0) {\r\n    iVar4 = *(int *)((_DAT_800ceda4 & 0xfff) * 4 + -0x7ffeb164);\r\n    iVar5 = iVar4 >> 0x10;\r\n    iVar4 = (int)(short)iVar4;\r\n    *param_1 = (short)(iVar5 * (short)param_1[4] + iVar4 * (short)param_1[6] >> 0xc);\r\n    param_1[2] = (short)(-iVar4 * (int)(short)param_1[4] + iVar5 * (short)param_1[6] >> 0xc);\r\n  }\r\n  uVar1 = param_1[0x13];\r\n  uVar2 = param_1[0x12];\r\n  if ((uint)uVar1 != (uint)uVar2) {\r\n    uVar6 = (uint)uVar1 - (uint)uVar2 & 0xfff;\r\n    if (0x800 < uVar6) {\r\n      uVar6 = uVar6 - 0x1000;\r\n    }\r\n    uVar3 = uVar6;\r\n    if ((int)uVar6 < 0) {\r\n      uVar3 = -uVar6;\r\n    }\r\n    if ((int)uVar3 < _DAT_800ceda8) {\r\n      param_1[0x12] = uVar1;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    iVar4 = _DAT_800ceda8;\r\n    if ((int)uVar6 < 1) {\r\n      iVar4 = -_DAT_800ceda8;\r\n    }\r\n    param_1[0x12] = uVar2 + (short)iVar4;\r\n    uVar1 = param_1[0x12];\r\n    param_1[0x12] = uVar1 & 0xfff;\r\n    if (((uVar1 & 0xfff) - param_1[0x13] & 0xfff) == 0) {\r\n      param_1[0x12] = param_1[0x13];\r\n    }\r\n  }\r\n  if (param_2 < 7) {\r\n                    /* WARNING: Could not emulate address calculation at 0x00001d74 */\r\n                    /* WARNING: Treating indirect jump as call */\r\n    (**(code **)(param_2 * 4 + -0x7ff3bf34))();\r\n    return;\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 876, "name": "FUN_00001ff4", "ea": 8180}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00001ff4(void)\r\n\r\n{\r\n  ushort uVar1;\r\n  undefined1 *puVar2;\r\n  int iVar3;\r\n  uint uVar4;\r\n  int iVar5;\r\n  int iVar6;\r\n  undefined1 auStack_48 [32];\r\n  \r\n  puVar2 = auStack_48;\r\n  if (DAT_80043d08 == '\\0') {\r\n    DAT_80043d08 = '\\x01';\r\n    puVar2 = (undefined1 *)0x1f800364;\r\n    _DAT_80043d04 = auStack_48;\r\n  }\r\n  uVar4 = 0;\r\n  func_0x000ca344();\r\n  iVar3 = 0;\r\n  do {\r\n    func_0x000c664c((iVar3 + uVar4) * 4 + -0x7ff3147c);\r\n    uVar4 = uVar4 + 1 & 0xffff;\r\n    iVar3 = uVar4 << 4;\r\n  } while (uVar4 < 8);\r\n  func_0x000c93ac();\r\n  func_0x0008452c();\r\n  func_0x000cb6ac(0x800ce764);\r\n  func_0x000ccca4(0x800ce96c);\r\n  iVar3 = _DAT_800cfa64;\r\n  if (DAT_80043d08 == '\\x01') {\r\n    DAT_80043d08 = '\\0';\r\n    puVar2 = _DAT_80043d04;\r\n  }\r\n  if (((_DAT_800cedb0 != 0) && (*(int *)(_DAT_800cedb0 + 0x1c) != 0)) &&\r\n     (iVar5 = *(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28),\r\n     *(ushort *)(iVar5 + 0x10) < 0x2d)) {\r\n    if (_DAT_800ce98e == 0) {\r\n      iVar6 = 0;\r\n      if (_DAT_800ce786 == 1) {\r\n        iVar6 = 0x1d;\r\n      }\r\n      *(short *)(_DAT_800cfa64 + 6) =\r\n           *(short *)(_DAT_800cfa64 + 6) + *(short *)(_DAT_800cedb0 + 0x14) * 0x40;\r\n      func_0x000423ac(iVar3,*(undefined4 *)((uint)*(ushort *)(iVar5 + 0x10) * 4 + -0x7ff30738),500);\r\n      uVar1 = *(ushort *)(iVar5 + 0x10);\r\n      *(undefined4 *)(puVar2 + 0x10) = 0;\r\n      *(undefined4 *)(puVar2 + 0x14) = 300;\r\n      *(undefined4 *)(puVar2 + 0x18) = 0;\r\n      *(undefined4 *)(puVar2 + 0x1c) = 0x808080;\r\n      func_0x00042490(_DAT_800cfa64,200,iVar6 + 0xb4,*(undefined4 *)((uint)uVar1 * 4 + -0x7ff30738))\r\n      ;\r\n      uVar1 = **(ushort **)(_DAT_800cedb0 + 0x18);\r\n      *(undefined4 *)(puVar2 + 0x10) = 0;\r\n      *(undefined4 *)(puVar2 + 0x14) = 300;\r\n      *(undefined4 *)(puVar2 + 0x18) = 0;\r\n      *(undefined4 *)(puVar2 + 0x1c) = 0x808080;\r\n      func_0x00042490(_DAT_800cfa64,0,8,*(undefined4 *)((uVar1 + 0x24) * 4 + -0x7ff30738));\r\n      *(short *)(_DAT_800cfa64 + 6) =\r\n           *(short *)(_DAT_800cfa64 + 6) +\r\n           (short)((int)((uint)*(ushort *)(_DAT_800cedb0 + 0x14) * -0x10000) >> 10);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    uVar1 = *(ushort *)(iVar5 + 0x10);\r\n    *(undefined4 *)(puVar2 + 0x14) = 300;\r\n    *(undefined4 *)(puVar2 + 0x10) = 0;\r\n    *(undefined4 *)(puVar2 + 0x18) = 0;\r\n    *(undefined4 *)(puVar2 + 0x1c) = 0x808080;\r\n    func_0x00042490(_DAT_800cfa64,0,8,*(undefined4 *)((uint)uVar1 * 4 + -0x7ff30738));\r\n  }\r\n  if (((_DAT_800ce98e == 0) && (_DAT_800ce786 == 0)) && (*(int *)(_DAT_800cedb0 + 0x10) != 0)) {\r\n    func_0x000c63c0(2);\r\n    func_0x000c63c0(1);\r\n    if ((_DAT_800ce786 == 0) && (_DAT_800ce98e == 0)) {\r\n      func_0x000c63c0(8);\r\n    }\r\n    if (*(int *)(*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28) + 0xc)\r\n        != 2) {\r\n      func_0x000c63c0(3);\r\n    }\r\n  }\r\n  func_0x000c6784();\r\n  func_0x000c7d38();\r\n  func_0x00097278();\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 652, "name": "FUN_00002360", "ea": 9056}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00002360(int param_1)\r\n\r\n{\r\n  int *piVar1;\r\n  char cVar2;\r\n  undefined4 *puVar3;\r\n  uint *puVar4;\r\n  \r\n  puVar3 = _DAT_80043cfc;\r\n  if (param_1 == 2) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  if (param_1 < 3) {\r\n    if (param_1 == 1) {\r\n      halt_baddata();\r\n    }\r\n  }\r\n  else {\r\n    if (param_1 == 3) {\r\n      cVar2 = *(char *)(_DAT_8004cd18 * 4 + -0x7ff31221);\r\n      puVar4 = (uint *)*_DAT_80043cfc;\r\n      piVar1 = _DAT_80043cfc + 1;\r\n      *_DAT_80043cfc = puVar4 + 6;\r\n      puVar3[1] = *piVar1 + 1;\r\n      puVar4[2] = 0x64808080;\r\n      *(undefined2 *)(puVar4 + 3) = 0xf0;\r\n      *(short *)((int)puVar4 + 0xe) = 0xf6 - _DAT_800cfa4e;\r\n      puVar4[1] = _DAT_800cfa46 | 0xe1000200;\r\n      *(undefined2 *)((int)puVar4 + 0x12) = _DAT_800cfa44;\r\n      *(undefined1 *)(puVar4 + 4) = DAT_800cfa48;\r\n      *(undefined1 *)((int)puVar4 + 0x11) = DAT_800cfa4a;\r\n      *(undefined2 *)(puVar4 + 5) = _DAT_800cfa4c;\r\n      *(short *)((int)puVar4 + 0x16) = _DAT_800cfa4e;\r\n      if (_DAT_8004d778 == (uint *)0x0) {\r\n        _DAT_8004d774 = puVar4;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n      *puVar4 = (uint)_DAT_8004d778 | 0x5000000;\r\n      _DAT_8004d778 = puVar4;\r\n      func_0x00042490(_DAT_800cfadc,(int)(short)(cVar2 + 0xf0),0xf6,\r\n                      *(undefined4 *)(_DAT_80048e68 + 0xc),0,300,0,0x808080);\r\n      return;\r\n    }\r\n    if (param_1 == 8) {\r\n      halt_baddata();\r\n    }\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 312, "name": "FUN_000025ec", "ea": 9708}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000025ec(int param_1)\r\n\r\n{\r\n  int iVar1;\r\n  undefined4 uVar2;\r\n  undefined1 auStack_18 [8];\r\n  \r\n  iVar1 = func_0x000c79c4();\r\n  if (iVar1 != 0) {\r\n    func_0x00023000(auStack_18,0,8);\r\n    setCopControlWord(2,0,_DAT_1f800384);\r\n    setCopControlWord(2,0x800,_DAT_1f800388);\r\n    setCopControlWord(2,0x1000,_DAT_1f80038c);\r\n    setCopControlWord(2,0x1800,_DAT_1f800390);\r\n    setCopControlWord(2,0x2000,_DAT_1f800394);\r\n    setCopControlWord(2,0x2800,_DAT_1f800398);\r\n    setCopControlWord(2,0x3000,_DAT_1f80039c);\r\n    setCopControlWord(2,0x3800,_DAT_1f8003a0);\r\n    setCopControlWord(2,0x4000,_DAT_800be5cc);\r\n    setCopControlWord(2,0x4800,_DAT_800be5d0);\r\n    setCopControlWord(2,0x5000,_DAT_800be5d4);\r\n    setCopControlWord(2,0x5800,_DAT_800be5d8);\r\n    setCopControlWord(2,0x6000,_DAT_800be5dc);\r\n    if (*(int **)(param_1 + 0x20) != (int *)0x0) {\r\n      uVar2 = *(undefined4 *)\r\n               (**(int **)(param_1 + 0x20) + 0x24 + (uint)(_DAT_800cedb0 != param_1) * 4);\r\n      func_0x0009f3a4(uVar2,(int)**(short **)(param_1 + 0x18));\r\n      func_0x00098c4c(uVar2,auStack_18,param_1,2);\r\n      func_0x0009f3a4(uVar2,(int)-**(short **)(param_1 + 0x18));\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 3220, "name": "FUN_00002724", "ea": 10020}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Removing unreachable block (ram,0x000027dc) */\r\n/* WARNING: Removing unreachable block (ram,0x00002840) */\r\n/* WARNING: Removing unreachable block (ram,0x0000288c) */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00002724(void)\r\n\r\n{\r\n  uint *puVar1;\r\n  uint *puVar2;\r\n  char cVar3;\r\n  char cVar4;\r\n  undefined4 in_zero;\r\n  undefined4 in_at;\r\n  char cVar5;\r\n  undefined4 *puVar6;\r\n  char cVar7;\r\n  ushort *puVar8;\r\n  int iVar9;\r\n  undefined4 uVar10;\r\n  ushort *puVar11;\r\n  short *psVar12;\r\n  undefined4 *puVar13;\r\n  short *psVar14;\r\n  short *psVar15;\r\n  uint *puVar16;\r\n  uint *puVar17;\r\n  uint uVar18;\r\n  int iVar19;\r\n  undefined4 uVar20;\r\n  undefined4 uVar21;\r\n  undefined4 local_c0 [7];\r\n  undefined4 local_a4;\r\n  undefined4 local_a0;\r\n  undefined4 local_9c;\r\n  undefined4 local_98;\r\n  undefined4 local_94;\r\n  undefined4 local_90;\r\n  undefined4 local_8c;\r\n  undefined4 local_88;\r\n  undefined4 local_84;\r\n  undefined4 local_80;\r\n  undefined4 local_7c;\r\n  undefined4 local_78;\r\n  undefined4 local_74;\r\n  undefined4 local_70;\r\n  undefined4 local_6c;\r\n  undefined4 local_68;\r\n  undefined4 local_64;\r\n  undefined4 local_60;\r\n  undefined4 local_58;\r\n  short local_50;\r\n  short local_4e;\r\n  short local_4c;\r\n  ushort local_4a;\r\n  undefined4 *local_38;\r\n  undefined4 *local_34;\r\n  undefined4 *local_30;\r\n  \r\n  cVar4 = DAT_800cf83e;\r\n  cVar3 = DAT_800cf83c;\r\n  puVar2 = _DAT_80043cfc;\r\n  puVar13 = local_c0;\r\n  iVar9 = *(int *)(*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28) +\r\n                  0x1c);\r\n  if ((((iVar9 == 0) || (*(int *)(iVar9 + 0x48) != 3)) || (*(int *)(iVar9 + 0x50) != 0)) ||\r\n     ((_DAT_800ce786 == 1 || (_DAT_800ce98e == 1)))) {\r\n    return;\r\n  }\r\n  puVar6 = (undefined4 *)&DAT_800c40e8;\r\n  local_38 = local_c0 + 2;\r\n  local_34 = local_c0 + 4;\r\n  local_30 = &local_7c;\r\n  do {\r\n    uVar20 = puVar6[1];\r\n    uVar21 = puVar6[2];\r\n    uVar10 = puVar6[3];\r\n    *puVar13 = *puVar6;\r\n    puVar13[1] = uVar20;\r\n    puVar13[2] = uVar21;\r\n    puVar13[3] = uVar10;\r\n    puVar6 = puVar6 + 4;\r\n    puVar13 = puVar13 + 4;\r\n  } while (puVar6 != (undefined4 *)&DAT_800c4128);\r\n  local_60 = _DAT_800c4128;\r\n  local_58 = _DAT_800c412c;\r\n  setCopControlWord(2,0,*(undefined4 *)(iVar9 + 0x14));\r\n  setCopControlWord(2,0x800,*(undefined4 *)(iVar9 + 0x18));\r\n  setCopControlWord(2,0x1000,*(undefined4 *)(iVar9 + 0x1c));\r\n  setCopControlWord(2,0x1800,*(undefined4 *)(iVar9 + 0x20));\r\n  setCopControlWord(2,0x2000,*(undefined4 *)(iVar9 + 0x24));\r\n  setCopControlWord(2,0x2800,(int)*(short *)(iVar9 + 4));\r\n  setCopControlWord(2,0x3000,(int)*(short *)(iVar9 + 6));\r\n  setCopControlWord(2,0x3800,(int)*(short *)(iVar9 + 8));\r\n  iVar9 = 7;\r\n  puVar8 = (ushort *)&local_88;\r\n  puVar11 = puVar8;\r\n  do {\r\n    setCopReg(2,0x4800,(uint)*puVar8);\r\n    setCopReg(2,0x5000,(uint)puVar8[1]);\r\n    setCopReg(2,0x5800,(uint)puVar8[2]);\r\n    copFunction(2,0x498012);\r\n    uVar10 = getCopReg(2,0x4800);\r\n    uVar20 = getCopReg(2,0x5000);\r\n    uVar21 = getCopReg(2,0x5800);\r\n    *puVar11 = (ushort)uVar10;\r\n    puVar11[1] = (ushort)uVar20;\r\n    puVar11[2] = (ushort)uVar21;\r\n    puVar11 = puVar11 + -4;\r\n    iVar9 = iVar9 + -1;\r\n    puVar8 = puVar8 + -4;\r\n  } while (iVar9 != -1);\r\n  setCopControlWord(2,0,_DAT_1f800384);\r\n  setCopControlWord(2,0x800,_DAT_1f800388);\r\n  setCopControlWord(2,0x1000,_DAT_1f80038c);\r\n  setCopControlWord(2,0x1800,_DAT_1f800390);\r\n  setCopControlWord(2,0x2000,_DAT_1f800394);\r\n  setCopControlWord(2,0x2800,_DAT_1f800398);\r\n  setCopControlWord(2,0x3000,_DAT_1f80039c);\r\n  setCopControlWord(2,0x3800,_DAT_1f8003a0);\r\n  setCopReg(2,in_zero,local_c0[0]);\r\n  setCopReg(2,in_at,local_c0[1]);\r\n  setCopReg(2,0x1f800384,*local_38);\r\n  setCopReg(2,puVar8,local_38[1]);\r\n  setCopReg(2,puVar11,*local_34);\r\n  setCopReg(2,0xffffffff,local_34[1]);\r\n  copFunction(2,0x280030);\r\n  local_80 = getCopReg(2,0xc);\r\n  uVar10 = getCopReg(2,0xd);\r\n  *local_30 = uVar10;\r\n  local_78 = getCopReg(2,0xe);\r\n  setCopReg(2,in_zero,local_c0[6]);\r\n  setCopReg(2,in_at,local_a4);\r\n  setCopReg(2,0x1f800384,local_a0);\r\n  setCopReg(2,puVar8,local_9c);\r\n  setCopReg(2,puVar11,local_98);\r\n  setCopReg(2,0xffffffff,local_94);\r\n  copFunction(2,0x280030);\r\n  local_74 = getCopReg(2,0xc);\r\n  local_70 = getCopReg(2,0xd);\r\n  local_6c = getCopReg(2,0xe);\r\n  setCopReg(2,in_zero,local_90);\r\n  setCopReg(2,in_at,local_8c);\r\n  setCopReg(2,0x1f800384,local_88);\r\n  setCopReg(2,puVar8,local_84);\r\n  setCopReg(2,puVar11,local_88);\r\n  setCopReg(2,0xffffffff,local_84);\r\n  copFunction(2,0x280030);\r\n  local_68 = getCopReg(2,0xc);\r\n  getCopReg(2,0xd);\r\n  local_64 = getCopReg(2,0xe);\r\n  iVar9 = 7;\r\n  do {\r\n    uVar18 = 0;\r\n    iVar19 = iVar9 + -1;\r\n    psVar12 = (short *)(&local_80 + iVar9);\r\n    psVar14 = (short *)&local_60;\r\n    psVar15 = (short *)&local_58;\r\n    do {\r\n      if (*psVar12 < *psVar14) {\r\n        *psVar14 = *psVar12;\r\n      }\r\n      if (*psVar15 < *psVar12) {\r\n        *psVar15 = *psVar12;\r\n      }\r\n      psVar15 = psVar15 + 1;\r\n      psVar14 = psVar14 + 1;\r\n      uVar18 = uVar18 + 1;\r\n      psVar12 = psVar12 + 1;\r\n    } while (uVar18 < 2);\r\n    iVar9 = iVar19;\r\n  } while (iVar19 != -1);\r\n  iVar19 = (local_60 & 0xffff) - 0x18;\r\n  local_4e = local_60._2_2_ + -0xc;\r\n  iVar9 = ((local_58 & 0xffff) - (local_60 & 0xffff)) + 0x20;\r\n  local_50 = (short)iVar19;\r\n  local_4c = (short)iVar9;\r\n  local_4a = (local_58._2_2_ - local_60._2_2_) + 0x10;\r\n  if (iVar19 * 0x10000 < 0) {\r\n    iVar9 = iVar9 + iVar19;\r\n    local_4c = (short)iVar9;\r\n    if (iVar9 * 0x10000 < 0) {\r\n      local_4c = 0;\r\n    }\r\n    local_50 = 0;\r\n  }\r\n  if (local_4e < 0) {\r\n    local_4a = local_4a + local_4e;\r\n    if ((int)((uint)local_4a << 0x10) < 0) {\r\n      local_4a = 0;\r\n    }\r\n    local_4e = 0;\r\n  }\r\n  cVar5 = DAT_800cf83c + DAT_800cf840 + -1;\r\n  cVar7 = DAT_800cf83e + DAT_800cf842 + -1;\r\n  puVar16 = (uint *)*_DAT_80043cfc;\r\n  puVar1 = _DAT_80043cfc + 1;\r\n  *_DAT_80043cfc = (uint)(puVar16 + 10);\r\n  puVar2[1] = *puVar1 + 1;\r\n  puVar16[1] = 0x2cffffff;\r\n  *(undefined2 *)((int)puVar16 + 0x16) = _DAT_800cf83a;\r\n  *(undefined2 *)((int)puVar16 + 0xe) = _DAT_800cf838;\r\n  *(char *)(puVar16 + 3) = cVar3;\r\n  *(char *)((int)puVar16 + 0xd) = cVar4;\r\n  *(char *)(puVar16 + 5) = cVar5;\r\n  *(char *)((int)puVar16 + 0x15) = cVar4;\r\n  *(char *)(puVar16 + 7) = cVar3;\r\n  *(char *)((int)puVar16 + 0x1d) = cVar7;\r\n  *(char *)(puVar16 + 9) = cVar5;\r\n  *(char *)((int)puVar16 + 0x25) = cVar7;\r\n  puVar16[2] = (int)local_50 | (local_4e + 8) * 0x10000;\r\n  puVar16[4] = (int)local_50 + 0x10U | (local_4e + 8) * 0x10000;\r\n  puVar16[6] = (int)local_50 | ((int)local_4e + (int)(short)local_4a) * 0x10000;\r\n  puVar16[8] = (int)local_50 + 0x10U | ((int)local_4e + (int)(short)local_4a) * 0x10000;\r\n  if (_DAT_8004d790 != (uint *)0x0) {\r\n    *puVar16 = (uint)_DAT_8004d790 | 0x9000000;\r\n    puVar1 = _DAT_80043cfc;\r\n    puVar17 = (uint *)*_DAT_80043cfc;\r\n    puVar2 = _DAT_80043cfc + 1;\r\n    _DAT_8004d790 = puVar16;\r\n    *_DAT_80043cfc = (uint)(puVar17 + 10);\r\n    puVar1[1] = *puVar2 + 1;\r\n    puVar17[1] = 0x2cffffff;\r\n    *(undefined2 *)((int)puVar17 + 0x16) = _DAT_800cf83a;\r\n    *(undefined2 *)((int)puVar17 + 0xe) = _DAT_800cf838;\r\n    *(char *)(puVar17 + 3) = cVar3;\r\n    *(char *)((int)puVar17 + 0xd) = cVar4;\r\n    *(char *)(puVar17 + 5) = cVar5;\r\n    *(char *)((int)puVar17 + 0x15) = cVar4;\r\n    *(char *)(puVar17 + 7) = cVar3;\r\n    *(char *)((int)puVar17 + 0x1d) = cVar7;\r\n    *(char *)(puVar17 + 9) = cVar5;\r\n    *(char *)((int)puVar17 + 0x25) = cVar7;\r\n    puVar17[2] = (int)local_50 + (int)local_4c | (local_4e + 8) * 0x10000;\r\n    puVar17[4] = (int)local_50 + (int)local_4c + 0x10U | (local_4e + 8) * 0x10000;\r\n    puVar17[6] = (int)local_50 + (int)local_4c | ((int)local_4e + (int)(short)local_4a) * 0x10000;\r\n    puVar17[8] = (int)local_50 + (int)local_4c + 0x10U |\r\n                 ((int)local_4e + (int)(short)local_4a) * 0x10000;\r\n    if (_DAT_8004d790 == (uint *)0x0) {\r\n      _DAT_8004d78c = puVar17;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    *puVar17 = (uint)_DAT_8004d790 | 0x9000000;\r\n    uVar18 = 3;\r\n    _DAT_8004d790 = puVar17;\r\n    while( true ) {\r\n      puVar1 = _DAT_80043cfc;\r\n      puVar16 = (uint *)*_DAT_80043cfc;\r\n      puVar2 = _DAT_80043cfc + 1;\r\n      *_DAT_80043cfc = (uint)(puVar16 + 10);\r\n      puVar1[1] = *puVar2 + 1;\r\n      puVar16[1] = 0x2cffffff;\r\n      if (uVar18 < 2) {\r\n        puVar16[2] = (int)local_50 + 0x10U | (int)local_4e << 0x10;\r\n        puVar16[6] = (int)local_50 + 0x10U | (local_4e + 8) * 0x10000;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n      puVar16[2] = ((int)local_50 + (int)local_4c) - 0x10U | (int)local_4e << 0x10;\r\n      puVar16[6] = ((int)local_50 + (int)local_4c) - 0x10U | (local_4e + 8) * 0x10000;\r\n      *(undefined2 *)((int)puVar16 + 0x16) = _DAT_800cf80a;\r\n      *(undefined2 *)((int)puVar16 + 0xe) = _DAT_800cf808;\r\n      *(char *)(puVar16 + 3) = DAT_800cf80c;\r\n      *(char *)((int)puVar16 + 0xd) = DAT_800cf80e;\r\n      *(char *)(puVar16 + 5) = DAT_800cf80c + DAT_800cf810 + -1;\r\n      *(char *)((int)puVar16 + 0x15) = DAT_800cf80e;\r\n      *(char *)(puVar16 + 7) = DAT_800cf80c;\r\n      *(char *)((int)puVar16 + 0x1d) = DAT_800cf80e + DAT_800cf812 + -1;\r\n      *(char *)(puVar16 + 9) = DAT_800cf80c + DAT_800cf810 + -1;\r\n      cVar4 = DAT_800cf812;\r\n      cVar3 = DAT_800cf80e;\r\n      puVar16[4] = puVar16[2];\r\n      puVar16[8] = puVar16[6];\r\n      *(char *)((int)puVar16 + 0x25) = cVar3 + cVar4 + -1;\r\n      *(short *)(puVar16 + 8) = (short)puVar16[8] + 0x10;\r\n      *(short *)(puVar16 + 4) = (short)puVar16[4] + 0x10;\r\n      if ((uVar18 & 1) != 0) {\r\n        *(ushort *)((int)puVar16 + 10) = *(short *)((int)puVar16 + 10) + local_4a;\r\n        *(ushort *)((int)puVar16 + 0x12) = *(short *)((int)puVar16 + 0x12) + local_4a;\r\n        *(ushort *)((int)puVar16 + 0x1a) = *(short *)((int)puVar16 + 0x1a) + local_4a;\r\n        *(ushort *)((int)puVar16 + 0x22) = *(short *)((int)puVar16 + 0x22) + local_4a;\r\n      }\r\n      if (_DAT_8004d790 == (uint *)0x0) break;\r\n      *puVar16 = (uint)_DAT_8004d790 | 0x9000000;\r\n      uVar18 = uVar18 - 1;\r\n      _DAT_8004d790 = puVar16;\r\n      if (uVar18 == 0xffffffff) {\r\n        uVar18 = 3;\r\n        while( true ) {\r\n          puVar1 = _DAT_80043cfc;\r\n          puVar16 = (uint *)*_DAT_80043cfc;\r\n          puVar2 = _DAT_80043cfc + 1;\r\n          *_DAT_80043cfc = (uint)(puVar16 + 10);\r\n          puVar1[1] = *puVar2 + 1;\r\n          puVar16[1] = 0x2cffffff;\r\n          if (uVar18 < 2) {\r\n            puVar16[2] = (int)local_50 | (int)local_4e << 0x10;\r\n            puVar16[6] = (int)local_50 | (local_4e + 8) * 0x10000;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n            halt_baddata();\r\n          }\r\n          puVar16[2] = (int)local_50 + (int)local_4c | (int)local_4e << 0x10;\r\n          puVar16[6] = (int)local_50 + (int)local_4c | (local_4e + 8) * 0x10000;\r\n          if (((uVar18 == 1) || (uVar18 == 0)) || ((uVar18 == 2 || (uVar18 != 3)))) break;\r\n          *(undefined2 *)((int)puVar16 + 0x16) = _DAT_800cf822;\r\n          *(undefined2 *)((int)puVar16 + 0xe) = _DAT_800cf820;\r\n          *(char *)(puVar16 + 3) = DAT_800cf824;\r\n          *(char *)((int)puVar16 + 0xd) = DAT_800cf826;\r\n          *(char *)(puVar16 + 5) = DAT_800cf824 + DAT_800cf828 + -1;\r\n          *(char *)((int)puVar16 + 0x15) = DAT_800cf826;\r\n          *(char *)(puVar16 + 7) = DAT_800cf824;\r\n          *(char *)((int)puVar16 + 0x1d) = DAT_800cf826 + DAT_800cf82a + -1;\r\n          *(char *)(puVar16 + 9) = DAT_800cf824 + DAT_800cf828 + -1;\r\n          cVar4 = DAT_800cf82a;\r\n          cVar3 = DAT_800cf826;\r\n          puVar16[4] = puVar16[2];\r\n          puVar16[8] = puVar16[6];\r\n          *(char *)((int)puVar16 + 0x25) = cVar3 + cVar4 + -1;\r\n          *(short *)(puVar16 + 8) = (short)puVar16[8] + 0x10;\r\n          *(short *)(puVar16 + 4) = (short)puVar16[4] + 0x10;\r\n          *(ushort *)((int)puVar16 + 10) = *(short *)((int)puVar16 + 10) + local_4a;\r\n          *(ushort *)((int)puVar16 + 0x12) = *(short *)((int)puVar16 + 0x12) + local_4a;\r\n          *(ushort *)((int)puVar16 + 0x1a) = *(short *)((int)puVar16 + 0x1a) + local_4a;\r\n          *(ushort *)((int)puVar16 + 0x22) = *(short *)((int)puVar16 + 0x22) + local_4a;\r\n          if (_DAT_8004d790 == (uint *)0x0) {\r\n            _DAT_8004d78c = puVar16;\r\n            *puVar16 = 0x9000000;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n            halt_baddata();\r\n          }\r\n          *puVar16 = (uint)_DAT_8004d790 | 0x9000000;\r\n          uVar18 = 2;\r\n          _DAT_8004d790 = puVar16;\r\n        }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n    }\r\n    _DAT_8004d78c = puVar16;\r\n    *puVar16 = 0x9000000;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  _DAT_8004d78c = puVar16;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 204, "name": "FUN_000033b8", "ea": 13240}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nundefined4 FUN_000033b8(undefined4 param_1)\r\n\r\n{\r\n  int iVar1;\r\n  uint uVar2;\r\n  \r\n  iVar1 = func_0x000c74e4(_DAT_8004d75c * 0x44 + -0x7ff3147c,param_1);\r\n  if (iVar1 == 0) {\r\n    uVar2 = 0;\r\n    iVar1 = 0;\r\n    while( true ) {\r\n      iVar1 = func_0x000c74e4((iVar1 + uVar2) * 4 + -0x7ff3147c,param_1);\r\n      if (iVar1 != 0) break;\r\n      uVar2 = uVar2 + 1 & 0xffff;\r\n      iVar1 = uVar2 << 4;\r\n      if (7 < uVar2) {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 552, "name": "FUN_000034dc", "ea": 13532}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nvoid FUN_000034dc(int param_1)\r\n\r\n{\r\n  bool bVar1;\r\n  undefined4 uVar2;\r\n  int iVar3;\r\n  int iVar4;\r\n  int iVar5;\r\n  int *piVar6;\r\n  int iVar7;\r\n  uint uVar8;\r\n  \r\n  uVar8 = 0;\r\n  if (*(short *)(param_1 + 0x40) != 0) {\r\n    do {\r\n      piVar6 = (int *)(param_1 + 0x28 + uVar8 * 4);\r\n      if (*(int *)(*piVar6 + 0xc) != 0) {\r\n        uVar2 = func_0x000ca138();\r\n        func_0x000c9ed0(uVar2,param_1,*piVar6);\r\n      }\r\n      uVar8 = uVar8 + 1 & 0xffff;\r\n    } while (uVar8 < *(ushort *)(param_1 + 0x40));\r\n  }\r\n  iVar5 = param_1 + 0x28;\r\n  iVar7 = *(int *)(iVar5 + (uint)*(ushort *)(param_1 + 0x42) * 4);\r\n  bVar1 = false;\r\n  if (*(int *)(iVar7 + 0xc) != 0) {\r\n    if (-1 < *(short *)(iVar7 + 0x12)) {\r\n      iVar3 = func_0x000431e4();\r\n      if (0x1f < (uint)(int)*(short *)(iVar7 + 0x12)) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n      bVar1 = false;\r\n      if ((*(uint *)(iVar3 + 0xc) & 1 << ((int)*(short *)(iVar7 + 0x12) & 0x1fU)) == 0)\r\n      goto LAB_00003608;\r\n    }\r\n    bVar1 = true;\r\n  }\r\nLAB_00003608:\r\n  if ((!bVar1) && (uVar8 = 0, *(short *)(param_1 + 0x40) != 0)) {\r\n    iVar7 = 0;\r\n    do {\r\n      iVar3 = *(int *)(iVar5 + iVar7);\r\n      bVar1 = false;\r\n      if (*(int *)(iVar3 + 0xc) != 0) {\r\n        if (-1 < *(short *)(iVar3 + 0x12)) {\r\n          iVar4 = func_0x000431e4();\r\n          if (0x1f < (uint)(int)*(short *)(iVar3 + 0x12)) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n            halt_baddata();\r\n          }\r\n          bVar1 = false;\r\n          if ((*(uint *)(iVar4 + 0xc) & 1 << ((int)*(short *)(iVar3 + 0x12) & 0x1fU)) == 0)\r\n          goto LAB_0000369c;\r\n        }\r\n        bVar1 = true;\r\n      }\r\nLAB_0000369c:\r\n      if (((bVar1) && (iVar7 = *(int *)(*(int *)(iVar5 + iVar7) + 0xc), iVar7 != 2)) && (iVar7 != 0)\r\n         ) {\r\n        *(short *)(param_1 + 0x42) = (short)uVar8;\r\n        func_0x000c7be4(param_1);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n      uVar8 = uVar8 + 1 & 0xffff;\r\n      iVar7 = uVar8 << 2;\r\n    } while (uVar8 < *(ushort *)(param_1 + 0x40));\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 240, "name": "FUN_00003784", "ea": 14212}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nint FUN_00003784(int param_1,int param_2)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  \r\n  if (_DAT_800ceda6 == _DAT_800ceda4) {\r\n    iVar1 = (int)*(short *)(param_1 + 0x14);\r\n    do {\r\n      iVar2 = (int)(short)((short)iVar1 + -1);\r\n      iVar1 = 7;\r\n      if (-1 < iVar2) {\r\n        iVar1 = iVar2;\r\n      }\r\n      iVar3 = iVar1 * 0x44 + -0x7ff3147c;\r\n      iVar2 = func_0x000c79c4(iVar3);\r\n    } while ((iVar2 == 0) && ((param_2 == 0 || (iVar1 == 7))));\r\n    if ((param_2 != 0) && (iVar1 = func_0x000c79c4(iVar3), iVar1 == 0)) {\r\n      iVar3 = 0;\r\n    }\r\n    iVar1 = 0;\r\n    if (iVar3 != param_1) {\r\n      iVar1 = iVar3;\r\n    }\r\n    return iVar1;\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 240, "name": "FUN_00003874", "ea": 14452}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nint FUN_00003874(int param_1,int param_2)\r\n\r\n{\r\n  uint uVar1;\r\n  int iVar2;\r\n  uint uVar3;\r\n  int iVar4;\r\n  \r\n  if (_DAT_800ceda6 != _DAT_800ceda4) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  uVar1 = *(ushort *)(param_1 + 0x14) + 1;\r\n  do {\r\n    uVar3 = 0;\r\n    if ((uVar1 & 0xffff) < 8) {\r\n      uVar3 = uVar1 & 0xffff;\r\n    }\r\n    iVar4 = uVar3 * 0x44 + -0x7ff3147c;\r\n    iVar2 = func_0x000c79c4(iVar4);\r\n  } while ((iVar2 == 0) && ((uVar1 = uVar3 + 1, param_2 == 0 || (uVar3 == 7))));\r\n  if ((param_2 != 0) && (iVar2 = func_0x000c79c4(iVar4), iVar2 == 0)) {\r\n    iVar4 = 0;\r\n  }\r\n  iVar2 = 0;\r\n  if (iVar4 != param_1) {\r\n    iVar2 = iVar4;\r\n  }\r\n  return iVar2;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 256, "name": "FUN_00003964", "ea": 14692}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nundefined4 FUN_00003964(int param_1)\r\n\r\n{\r\n  bool bVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  int iVar4;\r\n  uint uVar5;\r\n  \r\n  uVar5 = 0;\r\n  iVar2 = 0;\r\n  do {\r\n    iVar4 = *(int *)(param_1 + 0x28 + iVar2);\r\n    bVar1 = false;\r\n    if (*(int *)(iVar4 + 0xc) != 0) {\r\n      if (-1 < *(short *)(iVar4 + 0x12)) {\r\n        iVar3 = func_0x000431e4();\r\n        if (0x1f < (uint)(int)*(short *)(iVar4 + 0x12)) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n          halt_baddata();\r\n        }\r\n        bVar1 = false;\r\n        if ((*(uint *)(iVar3 + 0xc) & 1 << ((int)*(short *)(iVar4 + 0x12) & 0x1fU)) == 0)\r\n        goto LAB_00003a08;\r\n      }\r\n      bVar1 = true;\r\n    }\r\nLAB_00003a08:\r\n    if ((bVar1) && (*(int *)(*(int *)(param_1 + 0x28 + iVar2) + 0xc) != 2)) {\r\n      return 1;\r\n    }\r\n    uVar5 = uVar5 + 1 & 0xffff;\r\n    iVar2 = uVar5 << 2;\r\n    if (5 < uVar5) {\r\n      return 0;\r\n    }\r\n  } while( true );\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 140, "name": "FUN_00003a64", "ea": 14948}, "decompilation": "\r\nvoid FUN_00003a64(int param_1)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  \r\n  if (*(int *)(param_1 + 0x10) != 1) {\r\n    iVar2 = (int)*(short *)(param_1 + 0x42);\r\n    *(undefined4 *)(param_1 + 0x10) = 1;\r\n    do {\r\n      iVar1 = 5;\r\n      if (0 < iVar2) {\r\n        iVar1 = (iVar2 + -1) * 0x10000 >> 0x10;\r\n      }\r\n      iVar2 = iVar1;\r\n    } while (*(int *)(*(int *)(param_1 + 0x28 + iVar2 * 4) + 0xc) == 0);\r\n    *(short *)(param_1 + 0x42) = (short)iVar2;\r\n    func_0x000c7be4(param_1);\r\n    func_0x00040278(3,param_1,0xfff);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 148, "name": "FUN_00003af0", "ea": 15088}, "decompilation": "\r\nvoid FUN_00003af0(int param_1)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  \r\n  if (*(int *)(param_1 + 0x10) != 2) {\r\n    iVar1 = (int)*(short *)(param_1 + 0x42);\r\n    *(undefined4 *)(param_1 + 0x10) = 2;\r\n    do {\r\n      iVar2 = (iVar1 + 1) * 0x10000 >> 0x10;\r\n      iVar1 = 0;\r\n      if (iVar2 < 6) {\r\n        iVar1 = iVar2;\r\n      }\r\n    } while (*(int *)(*(int *)(param_1 + 0x28 + iVar1 * 4) + 0xc) == 0);\r\n    *(short *)(param_1 + 0x42) = (short)iVar1;\r\n    func_0x000c7be4(param_1);\r\n    func_0x00040278(3,param_1,0xfff);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 100, "name": "FUN_00003b84", "ea": 15236}, "decompilation": "\r\nvoid FUN_00003b84(int param_1)\r\n\r\n{\r\n  short sVar1;\r\n  int iVar2;\r\n  \r\n  iVar2 = *(int *)(*(int *)(param_1 + (uint)*(ushort *)(param_1 + 0x42) * 4 + 0x28) + 0x1c);\r\n  if (iVar2 != 0) {\r\n    sVar1 = func_0x00022e5c((int)*(short *)(iVar2 + 0x30),(int)*(short *)(iVar2 + 0x34));\r\n    *(short *)(param_1 + 0x26) = 0x1000 - sVar1;\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 240, "name": "FUN_00003be8", "ea": 15336}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00003be8(void)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  \r\n  _DAT_800ce758 = 0;\r\n  iVar1 = func_0x000c78d4(_DAT_800cedb0,1);\r\n  iVar2 = func_0x000c77e4(_DAT_800cedb0,1);\r\n  if (iVar1 == iVar2) {\r\n    if (iVar2 == 0) {\r\n      return;\r\n    }\r\n    iVar2 = func_0x00022e5c((int)*(short *)(iVar2 + 8),(int)*(short *)(iVar2 + 0xc));\r\n    iVar3 = func_0x00022e5c((int)*(short *)(_DAT_800cedb0 + 8),(int)*(short *)(_DAT_800cedb0 + 0xc))\r\n    ;\r\n    if (0x800 < (iVar2 - iVar3 & 0xfffU)) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    iVar2 = 0;\r\n  }\r\n  if (iVar1 != 0) {\r\n    _DAT_800ce758 = _DAT_800ce758 | 1;\r\n  }\r\n  if (iVar2 != 0) {\r\n    _DAT_800ce758 = _DAT_800ce758 | 2;\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 408, "name": "FUN_00003da8", "ea": 15784}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nshort FUN_00003da8(undefined2 param_1,uint param_2,short param_3,short param_4,short param_5,\r\n                  short param_6)\r\n\r\n{\r\n  undefined1 local_28 [8];\r\n  \r\n  func_0x00023000(local_28,0,4);\r\n  if (param_2 == 0x10) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  if (param_2 < 0x11) {\r\n    if (param_2 == 8) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n  }\r\n  else if (param_2 == 0x20) {\r\n    local_28[0] = 0x72;\r\n    func_0x000c52e8(0x800cfa38,param_1,param_2 | 1,(int)param_3,\r\n                    ((int)param_4 +\r\n                    ((int)param_5 * (int)*(short *)(((int)param_6 & 0xfffU) * 4 + -0x7ffeb164) *\r\n                     0x10 >> 0x10)) * 0x10000 >> 0x10,((int)_DAT_800cfa40 << 0x11) >> 0x10,0);\r\n    func_0x00042c04(_DAT_800cfa68,(int)param_3,(int)param_4,local_28,0x808080);\r\n    return param_3;\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 32, "name": "FUN_00003f40", "ea": 16192}, "decompilation": "\r\nvoid FUN_00003f40(void)\r\n\r\n{\r\n  func_0x0003dc24(0x4c3);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 244, "name": "FUN_00003f60", "ea": 16224}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00003f60(void)\r\n\r\n{\r\n  undefined4 *puVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  undefined4 *puVar4;\r\n  uint uVar5;\r\n  \r\n  func_0x0003d754(1);\r\n  iVar2 = func_0x0003d0cc(0x4bf,1);\r\n  func_0x0003d084();\r\n  uVar5 = 0;\r\n  puVar4 = (undefined4 *)(iVar2 + *(int *)(iVar2 + 0x28) + 4);\r\n  do {\r\n    iVar3 = uVar5 * 8;\r\n    uVar5 = uVar5 + 1 & 0xffff;\r\n    *(undefined4 *)(iVar3 + -0x7ff31244) = *puVar4;\r\n    *(undefined4 *)(iVar3 + -0x7ff31240) = puVar4[1];\r\n    *(undefined4 *)(iVar3 + -0x7ff31234) = puVar4[2];\r\n    puVar1 = puVar4 + 3;\r\n    puVar4 = puVar4 + 4;\r\n    *(undefined4 *)(iVar3 + -0x7ff31230) = *puVar1;\r\n  } while (uVar5 < 2);\r\n  func_0x000c9b8c(iVar2 + *(int *)(iVar2 + 0x50));\r\n  func_0x000cb094(iVar2 + *(int *)(iVar2 + 0x78));\r\n  func_0x0003d7b4(1);\r\n  _DAT_800cf7ec = func_0x0003d234(4,0);\r\n  func_0x0003d084();\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 400, "name": "FUN_00004168", "ea": 16744}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00004168(int param_1)\r\n\r\n{\r\n  uint uVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  int iVar4;\r\n  int iVar5;\r\n  undefined4 in_t3;\r\n  uint uVar6;\r\n  int iVar7;\r\n  int local_28;\r\n  int local_24;\r\n  int local_20;\r\n  int local_18;\r\n  int local_14;\r\n  \r\n  *(undefined4 *)(param_1 + 0x10) = 8;\r\n  uVar6 = (uint)(*(short *)(_DAT_800cedb0 + 0x14) == 7);\r\n  func_0x00023000(&local_28,0,0x10);\r\n  iVar3 = uVar6 * 8;\r\n  iVar2 = (uVar6 ^ 1) * 8;\r\n  iVar5 = (int)*(short *)(iVar3 + -0x7ff31244) - (int)*(short *)(iVar2 + -0x7ff31244);\r\n  iVar4 = (int)*(short *)(iVar3 + -0x7ff31242) - (int)*(short *)(iVar2 + -0x7ff31242);\r\n  iVar2 = (int)*(short *)(iVar3 + -0x7ff31240) - (int)*(short *)(iVar2 + -0x7ff31240);\r\n  setCopReg(2,iVar5,iVar5);\r\n  setCopReg(2,(short *)(iVar3 + -0x7ff31242),iVar4);\r\n  setCopReg(2,in_t3,iVar2);\r\n  copFunction(2,0xa00428);\r\n  iVar7 = getCopReg(2,0xc800);\r\n  iVar3 = getCopReg(2,0xd000);\r\n  _DAT_800cf980 = getCopReg(2,0xd800);\r\n  _DAT_800cf980 = iVar7 + iVar3 + _DAT_800cf980;\r\n  local_28 = iVar5;\r\n  local_24 = iVar4;\r\n  local_20 = iVar2;\r\n  func_0x00022bac(_DAT_800cf980,&local_18,&local_14);\r\n  local_18 = local_18 * 0x40;\r\n  uVar1 = local_14 + 6;\r\n  _DAT_800cedb8 = 0;\r\n  _DAT_800cfa5c = (undefined2)(iVar5 * local_18 >> (uVar1 & 0x1f));\r\n  _DAT_800cfa5e = (undefined2)(iVar4 * local_18 >> (uVar1 & 0x1f));\r\n  _DAT_800cfa60 = (undefined2)(iVar2 * local_18 >> (uVar1 & 0x1f));\r\n  func_0x00040278(uVar6 | 8,_DAT_800cedb0,0xfff);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 540, "name": "FUN_000042f8", "ea": 17144}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000042f8(int param_1)\r\n\r\n{\r\n  short sVar1;\r\n  short sVar2;\r\n  ushort uVar3;\r\n  int iVar4;\r\n  short *psVar5;\r\n  short *psVar6;\r\n  int iVar7;\r\n  short *psVar8;\r\n  short *psVar9;\r\n  uint uVar10;\r\n  uint uVar11;\r\n  \r\n  uVar11 = 0;\r\n  psVar8 = (short *)&DAT_800ceb74;\r\n  psVar5 = (short *)0x800cedbc;\r\n  uVar10 = (uint)(*(short *)(_DAT_800cedb0 + 0x14) == 7);\r\n  psVar6 = (short *)(uVar10 * 8 + -0x7ff31244);\r\n  if (uVar10 == 0) {\r\n    psVar5 = (short *)&DAT_800cedc4;\r\n  }\r\n  psVar9 = (short *)&DAT_800cfa5c;\r\n  if (_DAT_800cedb8 < 100) {\r\n    iVar4 = 0x9c4 - (_DAT_800cedb8 + -0x32) * (_DAT_800cedb8 + -0x32);\r\n    iVar7 = iVar4 >> 6;\r\n    if (iVar4 < 0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n  }\r\n  else {\r\n    iVar7 = 1;\r\n  }\r\n  uVar3 = 0;\r\n  if (iVar7 < 1) {\r\n    iVar7 = 1;\r\n  }\r\n  do {\r\n    if (*psVar8 != *psVar6) {\r\n      _DAT_800cedb8 = _DAT_800cedb8 + iVar7;\r\n      *psVar8 = *psVar8 + (short)(iVar7 * *psVar9 >> 6);\r\n    }\r\n    iVar4 = (int)*psVar6;\r\n    if (((*psVar5 - iVar4 < 0) && (0 < *psVar8 - iVar4)) ||\r\n       ((0 < *psVar5 - iVar4 && (*psVar8 - iVar4 < 0)))) {\r\n      *psVar8 = *psVar6;\r\n    }\r\n    sVar1 = *psVar8;\r\n    sVar2 = *psVar6;\r\n    psVar8 = psVar8 + 1;\r\n    psVar5 = psVar5 + 1;\r\n    psVar6 = psVar6 + 1;\r\n    psVar9 = psVar9 + 1;\r\n    uVar3 = uVar3 + 1;\r\n    uVar11 = uVar11 + ((int)sVar1 - (int)sVar2) * ((int)sVar1 - (int)sVar2);\r\n  } while (uVar3 < 3);\r\n  if (uVar11 < 0x20000) {\r\n    _DAT_800ceb74 = *(undefined4 *)(uVar10 * 8 + -0x7ff31244);\r\n    _DAT_800ceb78 = *(undefined4 *)(uVar10 * 8 + -0x7ff31240);\r\n    *(undefined4 *)(param_1 + 0x10) = 3;\r\n    func_0x000c753c(param_1);\r\n    _DAT_800ceda6 = func_0x00022e5c((int)*(short *)(param_1 + 8),(int)*(short *)(param_1 + 0xc));\r\n    _DAT_800ceda6 = 0x1000 - _DAT_800ceda6;\r\n    func_0x000c7be4(param_1);\r\n    *(undefined2 *)(param_1 + 0x24) = *(undefined2 *)(_DAT_800cedb0 + 0x26);\r\n    func_0x00040278(5,param_1,0xfff);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 600, "name": "FUN_0000451c", "ea": 17692}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_0000451c(void)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  \r\n  func_0x0003d754(1);\r\n  iVar1 = func_0x0003d0cc(0x4c5,1);\r\n  func_0x0003d084();\r\n  iVar2 = iVar1 + _DAT_8004cd18 * 0x28 + 8;\r\n  _DAT_800cf97c = func_0x0003d44c(*(undefined4 *)(iVar2 + 0x24),0,0);\r\n  func_0x0003d920(_DAT_800cf97c,iVar1 + *(int *)(iVar2 + 0x20),*(undefined4 *)(iVar2 + 0x24));\r\n  func_0x000c87d4(_DAT_800cf97c,0x800cf8c8,0xffffffff);\r\n  iVar1 = func_0x0003d0cc(0x4c6,1);\r\n  func_0x0003d084();\r\n  iVar2 = iVar1 + _DAT_8004cd18 * 0x28 + 8;\r\n  _DAT_800cfae8 = func_0x0003d44c(*(undefined4 *)(iVar2 + 0x24),0,0);\r\n  func_0x0003d920(_DAT_800cfae8,iVar1 + *(int *)(iVar2 + 0x20),*(undefined4 *)(iVar2 + 0x24));\r\n  func_0x000c87d4(_DAT_800cfae8,0x800cf844,0xffffffff);\r\n  iVar1 = func_0x0003d0cc(0x4c7,1);\r\n  iVar2 = iVar1 + 8 + _DAT_8004cd18 * 0x28;\r\n  _DAT_800cfae4 = func_0x0003d44c(*(undefined4 *)(iVar2 + 0x24),0,0);\r\n  func_0x0003d920(_DAT_800cfae4,iVar1 + *(int *)(iVar2 + 0x20),*(undefined4 *)(iVar2 + 0x24));\r\n  func_0x000c87d4(_DAT_800cfae4,&DAT_800cfa6c,0xffffffff);\r\n  iVar1 = func_0x0003d0cc(0x4c8,1);\r\n  iVar2 = iVar1 + 8 + _DAT_8004cd18 * 0x28;\r\n  _DAT_800cfaec = func_0x0003d44c(*(undefined4 *)(iVar2 + 0x24),0,0);\r\n  func_0x0003d920(_DAT_800cfaec,iVar1 + *(int *)(iVar2 + 0x20),*(undefined4 *)(iVar2 + 0x24));\r\n  func_0x000c87d4(_DAT_800cfaec,0x800cf984,0xffffffff);\r\n  iVar1 = func_0x0003d0cc(0x4c9,1);\r\n  iVar2 = iVar1 + 8 + _DAT_8004cd18 * 0x28;\r\n  _DAT_800cfc18 = func_0x0003d44c(*(undefined4 *)(iVar2 + 0x24),0,0);\r\n  func_0x0003d920(_DAT_800cfc18,iVar1 + *(int *)(iVar2 + 0x20),*(undefined4 *)(iVar2 + 0x24));\r\n  func_0x000c87d4(_DAT_800cfc18,&DAT_800cfb40,0xffffffff);\r\n  func_0x0003d7b4(1);\r\n  func_0x00043860();\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 108, "name": "FUN_0000485c", "ea": 18524}, "decompilation": "\r\nvoid FUN_0000485c(void)\r\n\r\n{\r\n  byte *pbVar1;\r\n  byte local_10 [8];\r\n  \r\n  pbVar1 = &DAT_8004cce0;\r\n  do {\r\n    *pbVar1 = *pbVar1 & 1;\r\n    pbVar1 = pbVar1 + 1;\r\n  } while ((int)pbVar1 < -0x7ffb3318);\r\n  func_0x00041b3c(1,local_10);\r\n  (&DAT_8004cce0)[local_10[0]] = (&DAT_8004cce0)[local_10[0]] | 5;\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 424, "name": "FUN_000048c8", "ea": 18632}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000048c8(void)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  undefined4 uVar2;\r\n  undefined4 uVar3;\r\n  undefined4 uVar4;\r\n  int iVar5;\r\n  int *piVar6;\r\n  uint uVar7;\r\n  undefined4 local_28;\r\n  short local_18;\r\n  \r\n  _DAT_800cf8c4 = 4;\r\n  func_0x0003e9cc();\r\n  uVar7 = 0;\r\n  func_0x0003f35c();\r\n  uVar3 = _DAT_800c4138;\r\n  uVar2 = _DAT_800c4134;\r\n  uVar1 = _DAT_800c4130;\r\n  piVar6 = (int *)&DAT_800cf7ac;\r\n  _DAT_800cf7ce = 0;\r\n  _DAT_800cf7d0 = 0;\r\n  _DAT_800cf7d2 = 0;\r\n  _DAT_800cf7d6 = 0;\r\n  _DAT_800cf7d8 = 0;\r\n  _DAT_800cf7da = 0;\r\n  local_28 = _DAT_800c4130;\r\n  _DAT_800cf7dc = 0x1000;\r\n  _DAT_800cf7e8 = 0;\r\n  _DAT_800cf7e4 = 0;\r\n  _DAT_800cf7e0 = 0;\r\n  _DAT_800cf7cc =\r\n       (short)((ulonglong)((longlong)((int)_DAT_80048e80 << 0xc) * 0x66666667) >> 0x28) -\r\n       (short)(((int)_DAT_80048e80 << 0xc) >> 0x1f);\r\n  _DAT_800cf7d4 =\r\n       (short)((ulonglong)((longlong)(_DAT_80048e82 * 0x1000) * 0x88888889) >> 0x28) -\r\n       (_DAT_80048e82 >> 0xf);\r\n  do {\r\n    uVar4 = func_0x000ca138();\r\n    iVar5 = func_0x000c9e34(uVar4);\r\n    *piVar6 = iVar5;\r\n    *(undefined4 *)(iVar5 + 4) = local_28;\r\n    *(undefined4 *)(*piVar6 + 8) = uVar2;\r\n    local_18 = (short)uVar3;\r\n    local_28 = CONCAT22(local_28._2_2_,(short)local_28 + local_18);\r\n    if (uVar7 == 3) {\r\n      local_28 = CONCAT22(local_28._2_2_ + 0x400,(short)uVar1);\r\n    }\r\n    uVar7 = uVar7 + 1;\r\n    piVar6 = piVar6 + 1;\r\n  } while (uVar7 < 8);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 604, "name": "FUN_00004a70", "ea": 19056}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00004a70(void)\r\n\r\n{\r\n  int iVar1;\r\n  byte bVar2;\r\n  int *piVar3;\r\n  int iVar4;\r\n  undefined4 local_38;\r\n  undefined4 local_34;\r\n  uint local_30;\r\n  undefined4 local_2c;\r\n  \r\n  iVar1 = func_0x00041cc8();\r\n  func_0x00023000(&local_30,0,8);\r\n  iVar4 = 7;\r\n  piVar3 = (int *)&DAT_800cf7c8;\r\n  local_30 = CONCAT22((short)_DAT_800cfa58 * 0x32,(undefined2)local_30) & 0xfffffff;\r\n  local_38 = local_30;\r\n  local_34 = local_2c;\r\n  do {\r\n    *(uint *)(*piVar3 + 0xc) = local_38;\r\n    *(undefined4 *)(*piVar3 + 0x10) = local_34;\r\n    iVar4 = iVar4 + -1;\r\n    func_0x000b0e20(&local_38,*piVar3 + 0x14);\r\n    piVar3 = piVar3 + -1;\r\n    local_38 = CONCAT22(0x1000 - local_38._2_2_,(undefined2)local_38);\r\n  } while (iVar4 != -1);\r\n  iVar4 = 0;\r\n  if (iVar1 != 0) {\r\n    do {\r\n      bVar2 = *(byte *)(iVar4 + -0x7ffb3318) & 0xf;\r\n      if ((((bVar2 == 4) || (bVar2 == 7)) && (((&DAT_8004cce0)[iVar4] & 6) != 0)) &&\r\n         ((*(uint *)(&DAT_8004cc58 + iVar4 * 0x10) & 0x80000) != 0)) {\r\n        iVar1 = 7;\r\n        func_0x000c88bc();\r\n        _DAT_800cf8c4 = 1;\r\n        func_0x0003ea50();\r\n        func_0x0003f3b4();\r\n        piVar3 = (int *)&DAT_800cf7c8;\r\n        do {\r\n          if (*piVar3 != 0) {\r\n            func_0x000c9e44(*piVar3,3);\r\n          }\r\n          iVar1 = iVar1 + -1;\r\n          piVar3 = piVar3 + -1;\r\n        } while (iVar1 != -1);\r\n        setCopControlWord(2,0,_DAT_1f800384);\r\n        setCopControlWord(2,0x800,_DAT_1f800388);\r\n        setCopControlWord(2,0x1000,_DAT_1f80038c);\r\n        setCopControlWord(2,0x1800,_DAT_1f800390);\r\n        setCopControlWord(2,0x2000,_DAT_1f800394);\r\n        setCopControlWord(2,0x2800,_DAT_1f800398);\r\n        setCopControlWord(2,0x3000,_DAT_1f80039c);\r\n        setCopControlWord(2,0x3800,_DAT_1f8003a0);\r\n      }\r\n      iVar4 = iVar4 + 1;\r\n    } while (iVar4 < 8);\r\n  }\r\n  _DAT_800cfa54 = _DAT_800cfa54 + 1;\r\n  _DAT_800cfa58 = _DAT_800cfa58 + 0x28;\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 340, "name": "FUN_00004ccc", "ea": 19660}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00004ccc(void)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  int iVar2;\r\n  int *piVar3;\r\n  int iVar4;\r\n  \r\n  func_0x00041cc8();\r\n  iVar4 = 7;\r\n  func_0x000423ac(_DAT_800cfa68,0x8004cb44,600);\r\n  func_0x00042490(_DAT_800cfa68,0x10,0x72,0x8004cb44,0,0x100,1,0x808080);\r\n  uVar1 = func_0x00096b68(0);\r\n  piVar3 = (int *)&DAT_800cf7c8;\r\n  do {\r\n    setCopControlWord(2,0,_DAT_800cf7cc);\r\n    setCopControlWord(2,0x800,_DAT_800cf7d0);\r\n    setCopControlWord(2,0x1000,_DAT_800cf7d4);\r\n    setCopControlWord(2,0x1800,_DAT_800cf7d8);\r\n    setCopControlWord(2,0x2000,_DAT_800cf7dc);\r\n    setCopControlWord(2,0x2800,_DAT_800cf7e0);\r\n    setCopControlWord(2,0x3000,_DAT_800cf7e4);\r\n    setCopControlWord(2,0x3800,_DAT_800cf7e8);\r\n    setCopControlWord(2,0x4000,_DAT_800be5cc);\r\n    setCopControlWord(2,0x4800,_DAT_800be5d0);\r\n    setCopControlWord(2,0x5000,_DAT_800be5d4);\r\n    setCopControlWord(2,0x5800,_DAT_800be5d8);\r\n    setCopControlWord(2,0x6000,_DAT_800be5dc);\r\n    iVar2 = *piVar3;\r\n    piVar3 = piVar3 + -1;\r\n    iVar4 = iVar4 + -1;\r\n    func_0x0009af10(iVar2 + 4,iVar2 + 0x38,uVar1);\r\n  } while (iVar4 != -1);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 228, "name": "FUN_00004e20", "ea": 20000}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00004e20(int param_1,int param_2)\r\n\r\n{\r\n  bool bVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  \r\n  if (param_2 == 0xffff) {\r\n    if (param_1 != 0) {\r\n      _DAT_800ce75c = 0;\r\n      _DAT_800ce760 = 0;\r\n      func_0x000cb260(0x800ce764);\r\n      func_0x000cc820(0x800ce96c);\r\n      iVar3 = -0x7ff3147c;\r\n      iVar2 = 7;\r\n      do {\r\n        func_0x000c42d8(iVar3);\r\n        iVar2 = iVar2 + -1;\r\n        iVar3 = iVar3 + 0x44;\r\n      } while (iVar2 != -1);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    iVar2 = -0x7ff312a0;\r\n    do {\r\n      func_0x000c42fc(iVar2,0);\r\n      bVar1 = iVar2 != -0x7ff3147c;\r\n      iVar2 = iVar2 + -0x44;\r\n    } while (bVar1);\r\n    func_0x000cc85c(0x800ce96c,2);\r\n    func_0x000cb2b8(0x800ce764,2);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 36, "name": "FUN_00004f04", "ea": 20228}, "decompilation": "\r\nvoid FUN_00004f04(void)\r\n\r\n{\r\n  func_0x000c8e80(1,0xffff);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 36, "name": "FUN_00004f28", "ea": 20264}, "decompilation": "\r\nvoid FUN_00004f28(void)\r\n\r\n{\r\n  func_0x000c8e80(0,0xffff);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 120, "name": "FUN_00004f54", "ea": 20308}, "decompilation": "\r\nvoid FUN_00004f54(int param_1,uint param_2)\r\n\r\n{\r\n  undefined4 *puVar1;\r\n  \r\n  puVar1 = *(undefined4 **)(param_1 + 4);\r\n  if (puVar1 != (undefined4 *)0x0) {\r\n    *puVar1 = 0;\r\n    if (puVar1[1] != 0) {\r\n      func_0x000ade78();\r\n      puVar1[1] = 0;\r\n    }\r\n    func_0x000ad8d0(puVar1);\r\n  }\r\n  *(undefined4 *)(param_1 + 4) = 0;\r\n  if ((param_2 & 1) != 0) {\r\n    func_0x000c91ec(param_1);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 372, "name": "FUN_00004fcc", "ea": 20428}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nint FUN_00004fcc(int param_1,undefined2 *param_2,undefined4 *param_3)\r\n\r\n{\r\n  undefined2 uVar1;\r\n  undefined4 *puVar2;\r\n  undefined4 uVar3;\r\n  int iVar4;\r\n  uint uVar5;\r\n  \r\n  *(undefined2 **)(param_1 + 0x4c) = param_2;\r\n  puVar2 = (undefined4 *)func_0x000ad888();\r\n  uVar1 = *param_2;\r\n  *puVar2 = 0;\r\n  puVar2[1] = 0;\r\n  func_0x000ad8f8(puVar2,1,uVar1);\r\n  *(undefined4 **)(param_1 + 4) = puVar2;\r\n  *(undefined4 **)(param_1 + 0x48) = param_3;\r\n  uVar5 = 0;\r\n  if (param_2[0x20] != 0) {\r\n    iVar4 = 0;\r\n    do {\r\n      puVar2 = (undefined4 *)func_0x000ad888();\r\n      uVar1 = param_2[uVar5 * 6 + 6];\r\n      *puVar2 = 0;\r\n      puVar2[1] = 0;\r\n      func_0x000ad8f8(puVar2,2,uVar1);\r\n      *(undefined4 **)(param_1 + 8 + iVar4) = puVar2;\r\n      uVar5 = uVar5 + 1 & 0xffff;\r\n      iVar4 = uVar5 << 3;\r\n    } while (uVar5 < (ushort)param_2[0x20]);\r\n  }\r\n  *(undefined4 *)(param_1 + 0x34) = *param_3;\r\n  uVar3 = param_3[1];\r\n  *(undefined4 *)(param_1 + 0x44) = 0;\r\n  *(undefined2 *)(param_1 + 0x3c) = 0;\r\n  *(undefined4 *)(param_1 + 0x38) = uVar3;\r\n  *(short *)(param_1 + 0x36) = *(short *)(param_1 + 0x36) + 0xa00;\r\n  func_0x00040278(5,param_3,0xfff);\r\n  *(undefined4 *)(param_1 + 0x50) = 0;\r\n  iVar4 = *(int *)((uint)**(ushort **)(param_1 + 0x4c) * 4 + -0x7ff30500);\r\n  if (iVar4 != 0) {\r\n    func_0x000adbb0(iVar4,0,_DAT_800cfb24,0xffffffff);\r\n  }\r\n  return param_1;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 76, "name": "FUN_00005140", "ea": 20800}, "decompilation": "\r\nvoid FUN_00005140(void)\r\n\r\n{\r\n  short sVar1;\r\n  \r\n  sVar1 = func_0x000747e4(0x800cede8);\r\n  *(short *)(sVar1 * 0x54 + -0x7ff31200) = sVar1;\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 40, "name": "FUN_0000518c", "ea": 20876}, "decompilation": "\r\nvoid FUN_0000518c(short *param_1)\r\n\r\n{\r\n  func_0x00074854(0x800cede8,(int)*param_1);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 108, "name": "FUN_000051f0", "ea": 20976}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nint FUN_000051f0(short *param_1)\r\n\r\n{\r\n  uint uVar1;\r\n  \r\n  if ((param_1 != (short *)0x0) &&\r\n     (uVar1 = (uint)*(ushort *)(*param_1 * 2 + _DAT_800cedf4), uVar1 != 0xffff)) {\r\n    return uVar1 * 0x54 + -0x7ff31200;\r\n  }\r\n  func_0x000c9214();\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 40, "name": "FUN_00005264", "ea": 21092}, "decompilation": "\r\nvoid FUN_00005264(undefined2 param_1)\r\n\r\n{\r\n  func_0x0007472c(0x800cede8,param_1);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 192, "name": "FUN_0000528c", "ea": 21132}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_0000528c(undefined4 param_1)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  uint uVar3;\r\n  \r\n  uVar3 = _DAT_800cedf0;\r\n  if (_DAT_800cedf0 != 0xffff) {\r\n    do {\r\n      iVar2 = uVar3 * 0x54 + -0x7ff31200;\r\n      uVar3 = (uint)*(ushort *)(uVar3 * 2 + _DAT_800cedf4);\r\n      iVar1 = func_0x000c943c(iVar2,param_1);\r\n      if ((iVar1 == 0) && (iVar2 != 0)) {\r\n        func_0x000c8fb4(iVar2,3);\r\n      }\r\n    } while (uVar3 != 0xffff);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 144, "name": "FUN_0000534c", "ea": 21324}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_0000534c(void)\r\n\r\n{\r\n  uint uVar1;\r\n  uint uVar2;\r\n  \r\n  uVar1 = _DAT_800cedf0;\r\n  if (_DAT_800cedf0 != 0xffff) {\r\n    do {\r\n      uVar2 = (uint)*(ushort *)(uVar1 * 2 + _DAT_800cedf4);\r\n      func_0x000c973c(uVar1 * 0x54 + -0x7ff31200);\r\n      uVar1 = uVar2;\r\n    } while (uVar2 != 0xffff);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 156, "name": "FUN_000053dc", "ea": 21468}, "decompilation": "\r\nundefined4 FUN_000053dc(int param_1)\r\n\r\n{\r\n  short sVar1;\r\n  undefined4 uVar2;\r\n  \r\n  *(undefined2 *)(param_1 + 0x34) = **(undefined2 **)(param_1 + 0x48);\r\n  *(undefined2 *)(param_1 + 0x38) = (*(undefined2 **)(param_1 + 0x48))[2];\r\n  if (*(uint *)(param_1 + 0x44) < 5) {\r\n                    /* WARNING: Could not emulate address calculation at 0x0000542c */\r\n                    /* WARNING: Treating indirect jump as call */\r\n    uVar2 = (**(code **)(*(uint *)(param_1 + 0x44) * 4 + -0x7ff3bec0))();\r\n    return uVar2;\r\n  }\r\n  sVar1 = *(short *)(param_1 + 0x32) + *(short *)(param_1 + 0x30);\r\n  *(short *)(param_1 + 0x32) = sVar1;\r\n  *(short *)(param_1 + 0x36) = *(short *)(param_1 + 0x36) + (sVar1 >> 6);\r\n  return 1;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 240, "name": "FUN_000056dc", "ea": 22236}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000056dc(int param_1)\r\n\r\n{\r\n  uint local_10 [2];\r\n  \r\n  func_0x00023000(local_10,0,8);\r\n  local_10[0] = CONCAT22(*(short *)(*(int *)(param_1 + 0x48) + 0x24) +\r\n                         *(short *)(*(int *)(param_1 + 0x4c) + 2),(undefined2)local_10[0]) &\r\n                0xfffffff;\r\n  setCopControlWord(2,0,_DAT_1f800384);\r\n  setCopControlWord(2,0x800,_DAT_1f800388);\r\n  setCopControlWord(2,0x1000,_DAT_1f80038c);\r\n  setCopControlWord(2,0x1800,_DAT_1f800390);\r\n  setCopControlWord(2,0x2000,_DAT_1f800394);\r\n  setCopControlWord(2,0x2800,_DAT_1f800398);\r\n  setCopControlWord(2,0x3000,_DAT_1f80039c);\r\n  setCopControlWord(2,0x3800,_DAT_1f8003a0);\r\n  setCopControlWord(2,0x4000,_DAT_800be5cc);\r\n  setCopControlWord(2,0x4800,_DAT_800be5d0);\r\n  setCopControlWord(2,0x5000,_DAT_800be5d4);\r\n  setCopControlWord(2,0x5800,_DAT_800be5d8);\r\n  setCopControlWord(2,0x6000,_DAT_800be5dc);\r\n  func_0x000c982c(param_1);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 480, "name": "FUN_000057cc", "ea": 22476}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000057cc(int param_1)\r\n\r\n{\r\n  ushort uVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  ushort uVar4;\r\n  int iVar5;\r\n  undefined1 auStack_78 [20];\r\n  int local_64;\r\n  int local_60;\r\n  int local_5c;\r\n  undefined1 auStack_58 [32];\r\n  uint local_38;\r\n  undefined4 local_34;\r\n  uint local_30;\r\n  undefined4 local_2c;\r\n  undefined4 local_28;\r\n  undefined4 local_24;\r\n  \r\n  func_0x00023000(&local_30,0,8);\r\n  local_30 = CONCAT22(*(short *)(*(int *)(param_1 + 0x48) + 0x24) +\r\n                      (*(ushort **)(param_1 + 0x4c))[1],(undefined2)local_30) & 0xfffffff;\r\n  local_38 = local_30;\r\n  local_34 = local_2c;\r\n  iVar5 = 0;\r\n  if ((*(int *)(param_1 + 0x44) == 3) &&\r\n     (*(int *)((uint)**(ushort **)(param_1 + 0x4c) * 4 + -0x7ff30500) != 0)) {\r\n    iVar5 = _DAT_800cfb24;\r\n  }\r\n  func_0x000b0e20(&local_38,auStack_78);\r\n  if (*(short *)(param_1 + 0x3c) != 0) {\r\n    func_0x00023000(&local_28,0,8);\r\n    local_24 = CONCAT22(local_24._2_2_,0x1000);\r\n    local_28 = CONCAT22(*(short *)(param_1 + 0x3c) + 0x1000,0x1000);\r\n    local_30 = local_28;\r\n    local_2c = local_24;\r\n    func_0x000b112c(auStack_78,&local_30);\r\n  }\r\n  local_64 = (int)*(short *)(param_1 + 0x34);\r\n  local_60 = (int)*(short *)(param_1 + 0x36);\r\n  local_5c = (int)*(short *)(param_1 + 0x38);\r\n  uVar4 = 0;\r\n  iVar2 = *(int *)(**(int **)(param_1 + 4) + 0x24);\r\n  iVar3 = *(int *)(iVar2 + 8);\r\n  uVar1 = *(ushort *)(iVar2 + 2);\r\n  func_0x000b145c(auStack_78,auStack_78,auStack_58);\r\n  if (uVar1 != 0) {\r\n    do {\r\n      func_0x00096bb0(*(undefined4 *)(**(int **)(param_1 + 4) + 0x24),iVar3,iVar5,2,auStack_78,\r\n                      auStack_58);\r\n      uVar4 = uVar4 + 1;\r\n      if (iVar5 != 0) {\r\n        iVar5 = iVar5 + 0x20;\r\n      }\r\n      iVar3 = iVar3 + 0x74;\r\n    } while (uVar4 < uVar1);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 176, "name": "FUN_000059f4", "ea": 23028}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nvoid FUN_000059f4(int param_1,int param_2)\r\n\r\n{\r\n  bool bVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  \r\n  if (param_2 == 0xffff) {\r\n    if (param_1 != 0) {\r\n      func_0x00074654(0x800cede8);\r\n      iVar3 = -0x7ff31200;\r\n      iVar2 = 7;\r\n      do {\r\n        func_0x000c8fac(iVar3);\r\n        iVar2 = iVar2 + -1;\r\n        iVar3 = iVar3 + 0x54;\r\n      } while (iVar2 != -1);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    iVar2 = -0x7ff30fb4;\r\n    do {\r\n      func_0x000c8fb4(iVar2,0);\r\n      bVar1 = iVar2 != -0x7ff31200;\r\n      iVar2 = iVar2 + -0x54;\r\n    } while (bVar1);\r\n    func_0x00074668(0x800cede8,2);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 36, "name": "FUN_00005aa4", "ea": 23204}, "decompilation": "\r\nvoid FUN_00005aa4(void)\r\n\r\n{\r\n  func_0x000c9a54(1,0xffff);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 36, "name": "FUN_00005ac8", "ea": 23240}, "decompilation": "\r\nvoid FUN_00005ac8(void)\r\n\r\n{\r\n  func_0x000c9a54(0,0xffff);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 40, "name": "FUN_00005b04", "ea": 23300}, "decompilation": "\r\nvoid FUN_00005b04(undefined4 param_1,uint param_2)\r\n\r\n{\r\n  if ((param_2 & 1) != 0) {\r\n    func_0x00022fdc();\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 368, "name": "FUN_00005b2c", "ea": 23340}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00005b2c(int param_1)\r\n\r\n{\r\n  uint uVar1;\r\n  uint *puVar2;\r\n  uint *puVar3;\r\n  uint uVar4;\r\n  uint *puVar5;\r\n  uint uVar6;\r\n  int iVar7;\r\n  \r\n  uVar6 = (uint)*(ushort *)(param_1 + 2);\r\n  _DAT_800cf0ac = uVar6;\r\n  puVar2 = (uint *)func_0x0003d44c(uVar6 * 0x44 + 8,0,0);\r\n  puVar3 = puVar2 + 2;\r\n  iVar7 = uVar6 - 1;\r\n  *puVar2 = uVar6;\r\n  puVar2 = puVar3;\r\n  if (uVar6 != 0) {\r\n    do {\r\n      func_0x000c9b4c(puVar2);\r\n      iVar7 = iVar7 + -1;\r\n      puVar2 = puVar2 + 0x11;\r\n    } while (iVar7 != -1);\r\n  }\r\n  puVar2 = (uint *)(param_1 + 4);\r\n  uVar6 = 0;\r\n  _DAT_800cfafc = puVar3;\r\n  if (_DAT_800cf0ac != 0) {\r\n    do {\r\n      puVar3 = puVar2 + 2;\r\n      uVar1 = puVar2[1];\r\n      puVar5 = _DAT_800cfafc + uVar6 * 0x11;\r\n      *(short *)(puVar5 + 0x10) = (short)uVar1;\r\n      uVar4 = 0;\r\n      *(short *)puVar5 = (short)*puVar2;\r\n      *(undefined2 *)((int)puVar5 + 2) = *(undefined2 *)((int)puVar2 + 2);\r\n      puVar2 = puVar3;\r\n      if ((short)uVar1 != 0) {\r\n        do {\r\n          iVar7 = uVar4 * 0xc;\r\n          *(short *)(puVar5 + uVar4 * 3 + 3) = (short)puVar3[2];\r\n          puVar5[uVar4 * 3 + 1] = *puVar3;\r\n          puVar5[uVar4 * 3 + 2] = puVar3[1];\r\n          uVar4 = uVar4 + 1 & 0xffff;\r\n          *(undefined2 *)((int)puVar5 + iVar7 + 0xe) = *(undefined2 *)((int)puVar3 + 10);\r\n          puVar2 = puVar3 + 3;\r\n          puVar3 = puVar2;\r\n        } while (uVar4 < (ushort)puVar5[0x10]);\r\n      }\r\n      uVar6 = uVar6 + 1 & 0xffff;\r\n    } while (uVar6 < _DAT_800cf0ac);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 312, "name": "FUN_00005c9c", "ea": 23708}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00005c9c(void)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  undefined4 uVar3;\r\n  uint uVar4;\r\n  uint uVar5;\r\n  int iVar6;\r\n  int iVar7;\r\n  uint uVar8;\r\n  \r\n  func_0x0003d754(1);\r\n  iVar1 = func_0x0003d234(0x4ca,1);\r\n  func_0x0003d084();\r\n  uVar8 = 0;\r\n  uVar4 = 0;\r\n  iVar2 = 0;\r\n  do {\r\n    *(undefined4 *)(iVar2 + -0x7ff30500) = 0;\r\n    uVar4 = uVar4 + 1 & 0xffff;\r\n    iVar2 = uVar4 << 2;\r\n  } while (uVar4 < 9);\r\n  uVar4 = 0;\r\n  iVar2 = 0;\r\n  do {\r\n    iVar7 = (iVar2 + uVar4) * 8 + iVar1 + 8;\r\n    iVar6 = iVar1 + *(int *)(iVar7 + 0x20);\r\n    uVar5 = (uint)*(ushort *)(iVar6 + 4);\r\n    if (uVar8 < uVar5) {\r\n      uVar8 = uVar5;\r\n    }\r\n    uVar3 = func_0x000ada5c(iVar6,*(undefined4 *)(iVar7 + 0x24));\r\n    uVar4 = uVar4 + 1 & 0xffff;\r\n    *(undefined4 *)(*(int *)(iVar2 + -0x7ff30f50) * 4 + -0x7ff30500) = uVar3;\r\n    iVar2 = uVar4 << 2;\r\n  } while (uVar4 < 6);\r\n  _DAT_800cfb24 = func_0x0003d44c(uVar8 << 5,0,0);\r\n  func_0x0003d7b4(1);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 140, "name": "FUN_00005de4", "ea": 24036}, "decompilation": "\r\nvoid FUN_00005de4(int param_1,uint param_2)\r\n\r\n{\r\n  undefined4 *puVar1;\r\n  \r\n  puVar1 = *(undefined4 **)(param_1 + 0x50);\r\n  if (puVar1 != (undefined4 *)0x0) {\r\n    *puVar1 = 0;\r\n    if (puVar1[1] != 0) {\r\n      func_0x000ade78();\r\n      puVar1[1] = 0;\r\n    }\r\n    func_0x000ad8d0(puVar1);\r\n  }\r\n  *(undefined4 *)(param_1 + 0x50) = 0;\r\n  if (*(int *)(param_1 + 0x44) != 0) {\r\n    *(undefined4 *)(*(int *)(param_1 + 0x44) + 0x1c) = 0;\r\n  }\r\n  if ((param_2 & 1) != 0) {\r\n    func_0x000ca184(param_1);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 616, "name": "FUN_00005e70", "ea": 24176}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Removing unreachable block (ram,0x00005f5c) */\r\n/* WARNING: Removing unreachable block (ram,0x00005f74) */\r\n/* WARNING: Removing unreachable block (ram,0x00005f98) */\r\n/* WARNING: Removing unreachable block (ram,0x00005fac) */\r\n/* WARNING: Removing unreachable block (ram,0x00005fb8) */\r\n/* WARNING: Removing unreachable block (ram,0x00005fbc) */\r\n\r\nint FUN_00005e70(int param_1,int param_2,undefined4 *param_3)\r\n\r\n{\r\n  short sVar1;\r\n  short sVar2;\r\n  bool bVar3;\r\n  undefined4 uVar4;\r\n  int iVar5;\r\n  int iVar6;\r\n  \r\n  *(undefined2 *)(param_1 + 0xc) = 0;\r\n  sVar1 = *(short *)((int)param_3 + 10);\r\n  sVar2 = *(short *)(param_2 + 0x24);\r\n  *(undefined2 *)(param_1 + 0x10) = 0;\r\n  *(short *)(param_1 + 0xe) = sVar1 + sVar2;\r\n  *(undefined2 *)(param_1 + 0x12) = *(undefined2 *)(param_2 + 0x24);\r\n  func_0x000b0e20(param_1 + 0xc,param_1 + 0x14);\r\n  *(int *)(param_1 + 0x4c) = param_2;\r\n  *(undefined4 **)(param_1 + 0x44) = param_3;\r\n  param_3[7] = param_1;\r\n  *(undefined2 *)(param_1 + 0x3c) = 0;\r\n  *(undefined2 *)(param_1 + 0x38) = 0;\r\n  *(undefined2 *)(param_1 + 0x3a) = 0x1000;\r\n  *(undefined2 *)(param_1 + 0x42) = 0;\r\n  *(undefined2 *)(param_1 + 0x40) = 0;\r\n  *(undefined2 *)(param_1 + 0x3e) = 0;\r\n  *(undefined4 *)(param_1 + 0x28) = 0;\r\n  *(undefined2 *)(param_1 + 0x2c) = 0;\r\n  *(undefined4 *)(param_1 + 0x48) = 1;\r\n  *(undefined4 *)(param_1 + 0x30) = *param_3;\r\n  *(undefined4 *)(param_1 + 0x34) = param_3[1];\r\n  sVar1 = *(short *)(param_3 + 2);\r\n  *(undefined2 *)(param_1 + 0x36) = 0;\r\n  *(short *)(param_1 + 0x32) = *(short *)(param_1 + 0x32) - sVar1;\r\n  func_0x000431e4();\r\n  if (*(ushort *)(*(int *)(param_1 + 0x44) + 0x10) < 0x20) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  *(undefined4 *)(param_1 + 0x50) = 0;\r\n  iVar6 = *(int *)(param_1 + 0x44);\r\n  iVar5 = *(int *)(iVar6 + 0xc);\r\n  if (iVar5 == 2) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  if (iVar5 == 3) {\r\n    uVar4 = func_0x00096b68(2);\r\n    *(undefined4 *)(param_1 + 0x54) = uVar4;\r\n    *(undefined4 *)(param_1 + 0x48) = 0;\r\n    *(undefined2 *)(param_1 + 0x30) = 0;\r\n    *(undefined2 *)(param_1 + 0x34) = 0;\r\n    *(short *)(param_1 + 0x32) = *(short *)(param_1 + 0x32) * -2;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  bVar3 = false;\r\n  if (iVar5 != 0) {\r\n    bVar3 = false;\r\n    if (-1 < *(short *)(iVar6 + 0x12)) {\r\n      iVar5 = func_0x000431e4();\r\n      if (0x1f < (uint)(int)*(short *)(iVar6 + 0x12)) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n      if ((*(uint *)(iVar5 + 0xc) & 1 << ((int)*(short *)(iVar6 + 0x12) & 0x1fU)) == 0)\r\n      goto LAB_000060b0;\r\n    }\r\n    bVar3 = true;\r\n  }\r\nLAB_000060b0:\r\n  uVar4 = func_0x00096b68(!bVar3);\r\n  *(undefined4 *)(param_1 + 0x54) = uVar4;\r\n  return param_1;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 76, "name": "FUN_000060d8", "ea": 24792}, "decompilation": "\r\nvoid FUN_000060d8(void)\r\n\r\n{\r\n  short sVar1;\r\n  \r\n  sVar1 = func_0x000747e4(0x800cf0c8);\r\n  *(int *)(sVar1 * 0x58 + -0x7ff30f20) = (int)sVar1;\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 40, "name": "FUN_00006124", "ea": 24868}, "decompilation": "\r\nvoid FUN_00006124(undefined4 *param_1)\r\n\r\n{\r\n  func_0x00074854(0x800cf0c8,*param_1);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 108, "name": "FUN_00006188", "ea": 24968}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nint FUN_00006188(int *param_1)\r\n\r\n{\r\n  uint uVar1;\r\n  \r\n  if ((param_1 != (int *)0x0) &&\r\n     (uVar1 = (uint)*(ushort *)(*param_1 * 2 + _DAT_800cf0d4), uVar1 != 0xffff)) {\r\n    return uVar1 * 0x58 + -0x7ff30f20;\r\n  }\r\n  func_0x000ca1ac();\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 40, "name": "FUN_000061fc", "ea": 25084}, "decompilation": "\r\nvoid FUN_000061fc(undefined2 param_1)\r\n\r\n{\r\n  func_0x0007472c(0x800cf0c8,param_1);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 192, "name": "FUN_00006224", "ea": 25124}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00006224(undefined4 param_1)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  uint uVar3;\r\n  \r\n  uVar3 = _DAT_800cf0d0;\r\n  if (_DAT_800cf0d0 != 0xffff) {\r\n    do {\r\n      iVar2 = uVar3 * 0x58 + -0x7ff30f20;\r\n      uVar3 = (uint)*(ushort *)(uVar3 * 2 + _DAT_800cf0d4);\r\n      iVar1 = func_0x000ca58c(iVar2,param_1);\r\n      if ((iVar1 == 0) && (iVar2 != 0)) {\r\n        func_0x000c9e44(iVar2,3);\r\n      }\r\n    } while (uVar3 != 0xffff);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 224, "name": "FUN_000062e4", "ea": 25316}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000062e4(void)\r\n\r\n{\r\n  uint uVar1;\r\n  uint uVar2;\r\n  uint uVar3;\r\n  \r\n  uVar3 = _DAT_800cf0d0;\r\n  if (_DAT_800cf0d0 != 0xffff) {\r\n    do {\r\n      uVar2 = *(uint *)((*(ushort *)(*(int *)(uVar3 * 0x58 + -0x7ff30ed4) + 0x24) & 0xfff) * 4 +\r\n                       -0x7ffeb164);\r\n      uVar3 = (uint)*(ushort *)(uVar3 * 2 + _DAT_800cf0d4);\r\n      uVar1 = uVar2 >> 0x10;\r\n      setCopControlWord(2,0,uVar1);\r\n      uVar2 = uVar2 & 0xffff;\r\n      setCopControlWord(2,0x2000,uVar1);\r\n      setCopControlWord(2,0x800,uVar2);\r\n      setCopControlWord(2,0x1000,0x1000);\r\n      setCopControlWord(2,0x1800,-uVar2 & 0xffff);\r\n      func_0x000ca424();\r\n    } while (uVar3 != 0xffff);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 360, "name": "FUN_000063c4", "ea": 25540}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000063c4(int param_1)\r\n\r\n{\r\n  short *psVar1;\r\n  int iVar2;\r\n  undefined2 *puVar3;\r\n  undefined4 uVar4;\r\n  undefined4 uVar5;\r\n  undefined4 uVar6;\r\n  \r\n  iVar2 = *(int *)(param_1 + 0x48);\r\n  if ((iVar2 != 4) && (((iVar2 < 4 || (7 < iVar2)) || (iVar2 < 6)))) {\r\n    psVar1 = *(short **)(param_1 + 0x4c);\r\n    setCopControlWord(2,0x2800,(int)*psVar1);\r\n    setCopControlWord(2,0x3000,(int)psVar1[1]);\r\n    setCopControlWord(2,0x3800,(int)psVar1[2]);\r\n    setCopReg(2,0x4800,(uint)*(ushort *)(param_1 + 0x30));\r\n    setCopReg(2,0x5000,(uint)*(ushort *)(param_1 + 0x32));\r\n    setCopReg(2,0x5800,(uint)*(ushort *)(param_1 + 0x34));\r\n    copFunction(2,0x498012);\r\n    puVar3 = (undefined2 *)(param_1 + 4);\r\n    uVar4 = getCopReg(2,0x4800);\r\n    uVar5 = getCopReg(2,0x5000);\r\n    uVar6 = getCopReg(2,0x5800);\r\n    *puVar3 = (short)uVar4;\r\n    *(short *)(param_1 + 6) = (short)uVar5;\r\n    *(short *)(param_1 + 8) = (short)uVar6;\r\n    setCopControlWord(2,0,_DAT_1f800384);\r\n    setCopControlWord(2,0x800,_DAT_1f800388);\r\n    setCopControlWord(2,0x1000,_DAT_1f80038c);\r\n    setCopControlWord(2,0x1800,_DAT_1f800390);\r\n    setCopControlWord(2,0x2000,_DAT_1f800394);\r\n    setCopControlWord(2,0x2800,_DAT_1f800398);\r\n    setCopControlWord(2,0x3000,_DAT_1f80039c);\r\n    setCopControlWord(2,0x3800,_DAT_1f8003a0);\r\n    setCopControlWord(2,0x4000,_DAT_800be5cc);\r\n    setCopControlWord(2,0x4800,_DAT_800be5d0);\r\n    setCopControlWord(2,0x5000,_DAT_800be5d4);\r\n    setCopControlWord(2,0x5800,_DAT_800be5d8);\r\n    setCopControlWord(2,0x6000,_DAT_800be5dc);\r\n    if (*(int **)(param_1 + 0x50) != (int *)0x0) {\r\n      func_0x00098a7c(*(undefined4 *)(**(int **)(param_1 + 0x50) + 0x24),puVar3,0,2,\r\n                      (int)*(short *)(param_1 + 0x38),(int)*(short *)(param_1 + 0x3c));\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    func_0x0009af10(puVar3,param_1 + 0x38,*(undefined4 *)(param_1 + 0x54));\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 396, "name": "FUN_0000652c", "ea": 25900}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nuint FUN_0000652c(int param_1,int param_2)\r\n\r\n{\r\n  ushort uVar1;\r\n  bool bVar2;\r\n  int iVar3;\r\n  uint uVar4;\r\n  int iVar5;\r\n  \r\n  iVar5 = *(int *)(param_1 + 0x44);\r\n  if (*(int *)(iVar5 + 0xc) == 3) {\r\n    bVar2 = false;\r\n    if (*(short *)(iVar5 + 0x12) < 0) {\r\nLAB_000065c4:\r\n      bVar2 = true;\r\n    }\r\n    else {\r\n      iVar3 = func_0x000431e4();\r\n      if (0x1f < (uint)(int)*(short *)(iVar5 + 0x12)) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n      if ((*(uint *)(iVar3 + 0xc) & 1 << ((int)*(short *)(iVar5 + 0x12) & 0x1fU)) != 0)\r\n      goto LAB_000065c4;\r\n    }\r\n    if (!bVar2) {\r\n      *(undefined4 *)(*(int *)(param_1 + 0x44) + 0x1c) = 0;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n  }\r\n  if (param_2 == 6) {\r\n    uVar4 = *(uint *)(param_1 + 0x48);\r\n    bVar2 = uVar4 < 8;\r\n    if ((uVar4 == 5) || (uVar4 == 6)) goto LAB_00006618;\r\n    func_0x000cad0c(param_1);\r\n  }\r\n  uVar4 = *(uint *)(param_1 + 0x48);\r\n  bVar2 = uVar4 < 8;\r\nLAB_00006618:\r\n  if (bVar2) {\r\n                    /* WARNING: Could not recover jumptable at 0x00006634. Too many branches */\r\n                    /* WARNING: Treating indirect jump as call */\r\n    uVar4 = (**(code **)(uVar4 * 4 + -0x7ff3beac))();\r\n    return uVar4;\r\n  }\r\n  iVar5 = *(int *)(*(int *)(param_1 + 0x44) + 0xc);\r\n  uVar1 = *(ushort *)(*(int *)(param_1 + 0x4c) + 0x24);\r\n  if ((int)*(short *)(param_1 + 0x12) != (uint)uVar1) {\r\n    *(ushort *)(param_1 + 0x12) = uVar1;\r\n    *(short *)(param_1 + 0xe) =\r\n         *(short *)(*(int *)(param_1 + 0x44) + 10) + *(short *)(*(int *)(param_1 + 0x4c) + 0x24);\r\n    func_0x000b0e20(param_1 + 0xc,param_1 + 0x14);\r\n  }\r\n  return (uint)(iVar5 != 0);\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 112, "name": "FUN_00006cac", "ea": 27820}, "decompilation": "\r\nvoid FUN_00006cac(int param_1)\r\n\r\n{\r\n  short sVar1;\r\n  uint uVar2;\r\n  int *piVar3;\r\n  int iVar4;\r\n  \r\n  uVar2 = func_0x00022e5c((int)*(short *)(param_1 + 0x30),(int)*(short *)(param_1 + 0x34));\r\n  piVar3 = (int *)((uVar2 & 0xfff) * 4 + -0x7ffeb164);\r\n  iVar4 = *piVar3;\r\n  sVar1 = *(short *)piVar3;\r\n  *(undefined2 *)(param_1 + 0x2a) = 0xe600;\r\n  *(undefined4 *)(param_1 + 0x48) = 5;\r\n  *(short *)(param_1 + 0x28) = sVar1 << 1;\r\n  *(short *)(param_1 + 0x2c) = (short)((iVar4 >> 0x10) << 1);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 136, "name": "FUN_00006d1c", "ea": 27932}, "decompilation": "\r\nvoid FUN_00006d1c(int param_1)\r\n\r\n{\r\n  int iVar1;\r\n  \r\n  func_0x000b0e20(param_1 + 0xc,param_1 + 0x14);\r\n  iVar1 = (uint)*(ushort *)(param_1 + 0x32) +\r\n          ((int)((uint)*(ushort *)(param_1 + 0x2a) << 0x10) >> 0x16);\r\n  *(short *)(param_1 + 0x32) = (short)iVar1;\r\n  iVar1 = iVar1 * 0x10000 >> 0x10;\r\n  if (iVar1 < 0) {\r\n    iVar1 = -iVar1;\r\n  }\r\n  *(ushort *)(param_1 + 0xc) = *(short *)(param_1 + 0xc) + 0x7fU & 0xfff;\r\n  *(ushort *)(param_1 + 0xe) = *(short *)(param_1 + 0xe) + 0x7fU & 0xfff;\r\n  if (0x600 < iVar1) {\r\n    *(undefined4 *)(param_1 + 0x48) = 6;\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 176, "name": "FUN_00006ec4", "ea": 28356}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nvoid FUN_00006ec4(int param_1,int param_2)\r\n\r\n{\r\n  bool bVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  \r\n  if (param_2 == 0xffff) {\r\n    if (param_1 != 0) {\r\n      func_0x00074654(0x800cf0c8);\r\n      iVar3 = -0x7ff30f20;\r\n      iVar2 = 0x11;\r\n      do {\r\n        func_0x000c9e34(iVar3);\r\n        iVar2 = iVar2 + -1;\r\n        iVar3 = iVar3 + 0x58;\r\n      } while (iVar2 != -1);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    iVar2 = -0x7ff30948;\r\n    do {\r\n      func_0x000c9e44(iVar2,0);\r\n      bVar1 = iVar2 != -0x7ff30f20;\r\n      iVar2 = iVar2 + -0x58;\r\n    } while (bVar1);\r\n    func_0x00074668(0x800cf0c8,2);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 36, "name": "FUN_00006f74", "ea": 28532}, "decompilation": "\r\nvoid FUN_00006f74(void)\r\n\r\n{\r\n  func_0x000caf24(1,0xffff);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 36, "name": "FUN_00006f98", "ea": 28568}, "decompilation": "\r\nvoid FUN_00006f98(void)\r\n\r\n{\r\n  func_0x000caf24(0,0xffff);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 120, "name": "FUN_00006fbc", "ea": 28604}, "decompilation": "\r\nundefined4 * FUN_00006fbc(undefined4 *param_1)\r\n\r\n{\r\n  ushort uVar1;\r\n  int iVar2;\r\n  \r\n  *(undefined2 *)((int)param_1 + 10) = 0;\r\n  iVar2 = func_0x000209dc();\r\n  uVar1 = 0;\r\n  *(short *)(param_1 + 2) = (short)((iVar2 + 0x1000U & 0x7ff) * 5 >> 3);\r\n  *(undefined2 *)((int)param_1 + 0x12) = 0xffff;\r\n  *(undefined2 *)(param_1 + 4) = 0;\r\n  param_1[3] = 0;\r\n  param_1[7] = 0;\r\n  *param_1 = 0;\r\n  *(undefined2 *)(param_1 + 1) = 0;\r\n  do {\r\n    uVar1 = uVar1 + 1;\r\n    *(undefined2 *)(param_1 + 5) = 0;\r\n  } while (uVar1 < 4);\r\n  return param_1;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 412, "name": "FUN_00007034", "ea": 28724}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00007034(int param_1)\r\n\r\n{\r\n  undefined2 *puVar1;\r\n  uint *puVar2;\r\n  uint uVar3;\r\n  undefined2 *puVar4;\r\n  uint uVar5;\r\n  int iVar6;\r\n  uint *puVar7;\r\n  \r\n  _DAT_800cfb34 = *(ushort *)(param_1 + 2);\r\n  uVar5 = (uint)_DAT_800cfb34;\r\n  puVar2 = (uint *)func_0x0003d44c(uVar5 << 5 | 8,0,0);\r\n  puVar7 = puVar2 + 2;\r\n  iVar6 = uVar5 - 1;\r\n  *puVar2 = uVar5;\r\n  puVar2 = puVar7;\r\n  if (uVar5 != 0) {\r\n    do {\r\n      func_0x000cb01c(puVar2);\r\n      iVar6 = iVar6 + -1;\r\n      puVar2 = puVar2 + 8;\r\n    } while (iVar6 != -1);\r\n  }\r\n  puVar4 = (undefined2 *)(param_1 + 4);\r\n  uVar5 = 0;\r\n  _DAT_800cfb30 = puVar7;\r\n  if (_DAT_800cfb34 != 0) {\r\n    do {\r\n      puVar2 = _DAT_800cfb30 + uVar5 * 8;\r\n      *(undefined2 *)(puVar2 + 2) = *puVar4;\r\n      *(undefined2 *)((int)puVar2 + 0x12) = puVar4[1];\r\n      *(undefined2 *)(puVar2 + 4) = puVar4[2];\r\n      uVar3 = (int)(((ushort)puVar4[2] - 4) * 0x10000) >> 0x10;\r\n      if (uVar3 < 0x1b) {\r\n                    /* WARNING: Could not emulate address calculation at 0x00007128 */\r\n                    /* WARNING: Treating indirect jump as call */\r\n        (**(code **)(uVar3 * 4 + -0x7ff3be8c))();\r\n        return;\r\n      }\r\n      *(undefined2 *)(puVar2 + 5) = 0;\r\n      *(undefined2 *)((int)puVar2 + 0x16) = 1;\r\n      *(undefined2 *)((int)puVar2 + 10) = puVar4[8];\r\n      puVar2[3] = (int)(short)puVar4[10];\r\n      *(undefined2 *)puVar2 = puVar4[0xb];\r\n      uVar5 = uVar5 + 1 & 0xffff;\r\n      *(undefined2 *)((int)puVar2 + 2) = puVar4[0xc];\r\n      puVar1 = puVar4 + 0xd;\r\n      uVar3 = (uint)_DAT_800cfb34;\r\n      puVar4 = puVar4 + 0x10;\r\n      *(undefined2 *)(puVar2 + 1) = *puVar1;\r\n    } while (uVar5 < uVar3);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 92, "name": "FUN_00007258", "ea": 29272}, "decompilation": "\r\nvoid FUN_00007258(int param_1,uint param_2)\r\n\r\n{\r\n  bool bVar1;\r\n  int iVar2;\r\n  \r\n  *(undefined4 *)(param_1 + 0x204) = 0x800c4208;\r\n  if ((param_1 != -0x44) && (param_1 + 0x44 != param_1 + 0x1fc)) {\r\n    iVar2 = param_1 + 0x1d0;\r\n    do {\r\n      bVar1 = param_1 + 0x44 != iVar2;\r\n      iVar2 = iVar2 + -0x2c;\r\n    } while (bVar1);\r\n  }\r\n  if ((param_2 & 1) != 0) {\r\n    func_0x00022fdc();\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 424, "name": "FUN_000072b4", "ea": 29364}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Removing unreachable block (ram,0x0000739c) */\r\n/* WARNING: Removing unreachable block (ram,0x000073c8) */\r\n/* WARNING: Removing unreachable block (ram,0x00007428) */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000072b4(int param_1,int param_2)\r\n\r\n{\r\n  ushort uVar1;\r\n  \r\n  if (param_2 == 0) {\r\n    *(undefined2 *)(param_1 + 0x22) = 3;\r\n    func_0x00040278(7,_DAT_800cedb0,0xfff);\r\n    return;\r\n  }\r\n  *(undefined2 *)(param_1 + 0x16) = 0;\r\n  *(undefined2 *)(param_1 + 0x22) = 2;\r\n  *(undefined4 *)(param_1 + 0x10) = *(undefined4 *)(param_1 + 8);\r\n  *(undefined2 *)(param_1 + 0x14) = *(undefined2 *)(param_1 + 0xc);\r\n  uVar1 = 0;\r\n  if (*(ushort *)(param_1 + 0x1fe) <= *(ushort *)(param_1 + 0x1fc)) {\r\n    uVar1 = *(ushort *)(param_1 + 0x1fe);\r\n  }\r\n  *(ushort *)(param_1 + 0x1fe) = uVar1;\r\n  if (*(int *)(param_1 + 100) != 1) {\r\n    uVar1 = *(ushort *)\r\n             (*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28) + 0x10);\r\n    func_0x000431e4();\r\n    if (uVar1 < 0x20) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    *(undefined4 *)(param_1 + 0xa0) = 1;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  *(undefined2 *)(param_1 + 0x202) =\r\n       *(undefined2 *)((uint)*(ushort *)(param_1 + 0x1fe) * 0x2c + param_1 + 0x5a);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 496, "name": "FUN_0000745c", "ea": 29788}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nvoid FUN_0000745c(int param_1,int param_2)\r\n\r\n{\r\n  ushort uVar1;\r\n  short sVar2;\r\n  uint uVar3;\r\n  short sVar4;\r\n  undefined2 uVar5;\r\n  \r\n  uVar1 = *(ushort *)(param_1 + 0x22);\r\n  if (uVar1 == 1) {\r\n    if (param_2 == 8) {\r\n      func_0x000cb314(param_1,0);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    if (param_2 == 2) {\r\n      if (*(short *)(param_1 + 0x202) != 0) {\r\n        *(short *)(param_1 + 0x202) = *(short *)(param_1 + 0x202) + -1;\r\n        halt_baddata();\r\n      }\r\n    }\r\n    else if (param_2 == 1) {\r\n      uVar1 = *(short *)(param_1 + 0x202) + 1;\r\n      *(ushort *)(param_1 + 0x202) = uVar1;\r\n      uVar3 = *(ushort *)(param_1 + 0x200) - 1;\r\n      if ((int)(uint)uVar1 < (int)uVar3) {\r\n        uVar3 = (uint)uVar1;\r\n      }\r\n      *(short *)(param_1 + 0x202) = (short)uVar3;\r\n    }\r\n    (**(code **)(*(int *)(param_1 + 0x204) + 0xc))\r\n              (param_1 + *(short *)(*(int *)(param_1 + 0x204) + 8));\r\n  }\r\n  else if (uVar1 < 2) {\r\n    if (uVar1 == 0) {\r\n      if (param_2 != 8) {\r\n        return;\r\n      }\r\n      func_0x000cb314(param_1,1);\r\n    }\r\n  }\r\n  else if (uVar1 == 2) {\r\n    if (param_2 == 8) {\r\n      *(undefined2 *)(param_1 + 0x22) = 3;\r\n    }\r\n    sVar2 = *(short *)(param_1 + 0x14) + 0x24;\r\n    sVar4 = *(short *)(param_1 + 0x16) + 0x24;\r\n    *(short *)(param_1 + 0x14) = sVar2;\r\n    *(short *)(param_1 + 0x16) = sVar4;\r\n    if (*(short *)(param_1 + 0xc) < sVar2) {\r\n      sVar2 = *(short *)(param_1 + 0xc);\r\n    }\r\n    *(short *)(param_1 + 0x14) = sVar2;\r\n    if (*(short *)(param_1 + 0xe) < sVar4) {\r\n      sVar4 = *(short *)(param_1 + 0xe);\r\n    }\r\n    *(short *)(param_1 + 0x16) = sVar4;\r\n    if (*(int *)(param_1 + 0x14) != *(int *)(param_1 + 0xc)) {\r\n      return;\r\n    }\r\n    *(undefined2 *)(param_1 + 0x22) = 1;\r\n  }\r\n  else if (uVar1 == 3) {\r\n    if (param_2 == 8) {\r\n      *(undefined2 *)(param_1 + 0x22) = 2;\r\n    }\r\n    uVar5 = *(undefined2 *)(param_1 + 0x14);\r\n    uVar1 = *(short *)(param_1 + 0x16) - 0x24;\r\n    *(ushort *)(param_1 + 0x16) = uVar1;\r\n    if (*(short *)(param_1 + 0x14) < 0) {\r\n      uVar5 = 0;\r\n    }\r\n    *(undefined2 *)(param_1 + 0x14) = uVar5;\r\n    if ((int)((uint)uVar1 << 0x10) < 0) {\r\n      uVar1 = 0;\r\n    }\r\n    *(ushort *)(param_1 + 0x16) = uVar1;\r\n    if (uVar1 == 0) {\r\n      *(undefined2 *)(param_1 + 0x22) = 0;\r\n    }\r\n    return;\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 240, "name": "FUN_0000764c", "ea": 30284}, "decompilation": "\r\nvoid FUN_0000764c(int param_1)\r\n\r\n{\r\n  int iVar1;\r\n  uint uVar2;\r\n  \r\n  if (*(short *)(param_1 + 0x22) != 0) {\r\n    uVar2 = 0;\r\n    func_0x000431e4();\r\n    iVar1 = 0;\r\n    if (*(short *)(param_1 + 0x1fc) != 0) {\r\n      do {\r\n        func_0x000cce50(param_1 + iVar1 * 0x10 + uVar2 * 0xc + 0x44,0x808080,0);\r\n        uVar2 = uVar2 + 1 & 0xffff;\r\n        iVar1 = uVar2 << 1;\r\n      } while (uVar2 < *(ushort *)(param_1 + 0x1fc));\r\n    }\r\n    func_0x000cbc18(param_1);\r\n    if (*(short *)(param_1 + 0x22) == 1) {\r\n      func_0x000c63c0(1);\r\n      if (*(short *)(param_1 + 0x1fe) == 2) {\r\n        func_0x000c63c0(2);\r\n      }\r\n      func_0x000cc6dc(param_1);\r\n    }\r\n    func_0x000cb79c(param_1,0,1);\r\n    func_0x000cb79c(param_1,0,1);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 220, "name": "FUN_0000773c", "ea": 30524}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_0000773c(uint *param_1,uint *param_2,int param_3)\r\n\r\n{\r\n  int *piVar1;\r\n  undefined4 *puVar2;\r\n  uint uVar3;\r\n  uint uVar4;\r\n  uint *puVar5;\r\n  short local_8;\r\n  short local_4;\r\n  \r\n  puVar2 = _DAT_80043cfc;\r\n  if (param_2 == (uint *)0x0) {\r\n    param_2 = param_1 + 4;\r\n  }\r\n  uVar3 = *param_2;\r\n  uVar4 = param_2[1];\r\n  puVar5 = (uint *)*_DAT_80043cfc;\r\n  piVar1 = _DAT_80043cfc + 1;\r\n  *_DAT_80043cfc = puVar5 + 5;\r\n  puVar2[1] = *piVar1 + 1;\r\n  puVar5[1] = 0xe1000200;\r\n  if (param_3 != 0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  puVar5[2] = *param_1 | 0x60000000;\r\n  local_8 = (short)uVar3;\r\n  puVar5[3] = (int)local_8 | uVar3 & 0xffff0000;\r\n  local_4 = (short)uVar4;\r\n  puVar5[4] = (int)local_4 | uVar4 & 0xffff0000;\r\n  if (_DAT_8004d780 == (uint *)0x0) {\r\n    _DAT_8004d77c = puVar5;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  *puVar5 = (uint)_DAT_8004d780 | 0x4000000;\r\n  _DAT_8004d780 = puVar5;\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 668, "name": "FUN_00007818", "ea": 30744}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00007818(uint *param_1)\r\n\r\n{\r\n  int *piVar1;\r\n  undefined4 *puVar2;\r\n  uint uVar3;\r\n  uint uVar4;\r\n  uint *puVar5;\r\n  uint uVar6;\r\n  short local_8;\r\n  ushort uStack_6;\r\n  short local_4;\r\n  ushort uStack_2;\r\n  \r\n  uVar6 = 0;\r\n  uVar3 = param_1[4];\r\n  uVar4 = param_1[5];\r\n  do {\r\n    puVar2 = _DAT_80043cfc;\r\n    puVar5 = (uint *)*_DAT_80043cfc;\r\n    piVar1 = _DAT_80043cfc + 1;\r\n    *_DAT_80043cfc = puVar5 + 6;\r\n    puVar2[1] = *piVar1 + 1;\r\n    puVar5[1] = *param_1 | 0x28000000;\r\n    uStack_6 = (ushort)(uVar3 >> 0x10);\r\n    local_8 = (short)uVar3;\r\n    if ((int)uVar6 < 2) {\r\n      puVar5[2] = (int)local_8 - 0x10U | (uint)uStack_6 * 0x10000 - 0x80000;\r\n      puVar5[4] = (int)local_8 | (uint)uStack_6 << 0x10;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    local_4 = (short)uVar4;\r\n    uStack_2 = (ushort)(uVar4 >> 0x10);\r\n    puVar5[2] = (int)local_8 + (int)local_4 + 0x10U |\r\n                ((int)(short)uStack_6 + (int)(short)uStack_2 + 8) * 0x10000;\r\n    puVar5[4] = (int)local_8 + (int)local_4 |\r\n                ((int)(short)uStack_6 + (int)(short)uStack_2) * 0x10000;\r\n    if ((uVar6 & 1) != 0) {\r\n      puVar5[3] = (int)local_8 + (int)local_4 + 0x10U | (uint)uStack_6 * 0x10000 - 0x80000;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    puVar5[3] = (int)local_8 - 0x10U | ((int)(short)uStack_6 + (int)(short)uStack_2 + 8) * 0x10000;\r\n    puVar5[5] = (int)local_8 | ((int)(short)uStack_6 + (int)(short)uStack_2) * 0x10000;\r\n    if (_DAT_8004d780 == (uint *)0x0) {\r\n      _DAT_8004d77c = puVar5;\r\n      *puVar5 = 0x5000000;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    *puVar5 = (uint)_DAT_8004d780 | 0x5000000;\r\n    puVar2 = _DAT_80043cfc;\r\n    uVar6 = uVar6 + 1;\r\n    _DAT_8004d780 = puVar5;\r\n  } while ((int)uVar6 < 4);\r\n  puVar5 = (uint *)*_DAT_80043cfc;\r\n  piVar1 = _DAT_80043cfc + 1;\r\n  *_DAT_80043cfc = puVar5 + 5;\r\n  puVar2[1] = *piVar1 + 1;\r\n  puVar5[1] = 0xe1000200;\r\n  puVar5[2] = 0x60000000;\r\n  puVar5[3] = (int)local_8 | (uint)uStack_6 << 0x10;\r\n  puVar5[4] = (int)local_4 | (uint)uStack_2 << 0x10;\r\n  if (_DAT_8004d780 == (uint *)0x0) {\r\n    _DAT_8004d77c = puVar5;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  *puVar5 = (uint)_DAT_8004d780 | 0x4000000;\r\n  _DAT_8004d780 = puVar5;\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 260, "name": "FUN_00007ab4", "ea": 31412}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nvoid FUN_00007ab4(int param_1,uint param_2,uint param_3,int param_4,int param_5)\r\n\r\n{\r\n  ushort uVar1;\r\n  int iVar2;\r\n  \r\n  uVar1 = *(ushort *)(param_4 + 8);\r\n  if (param_5 != 0) {\r\n    uVar1 = (ushort)((uint)(((int)((uint)uVar1 << 0x10) >> 0x10) -\r\n                           ((int)((uint)uVar1 << 0x10) >> 0x1f)) >> 1);\r\n  }\r\n  if (param_5 == 0) {\r\n    iVar2 = (uint)*(ushort *)(param_4 + 10) << 0x10;\r\n    iVar2 = (iVar2 >> 0x10) - (iVar2 >> 0x1f) >> 1;\r\n  }\r\n  else {\r\n    iVar2 = (int)*(short *)(param_4 + 10) >> 2;\r\n    if (*(short *)(param_4 + 10) < 0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n  }\r\n  if (((uint)(int)*(short *)(param_1 + 0x12) < param_3) &&\r\n     (param_3 + iVar2 < (uint)((int)*(short *)(param_1 + 0x12) + (int)*(short *)(param_1 + 0x16))))\r\n  {\r\n    if (((uint)(int)*(short *)(param_1 + 0x10) < param_2) &&\r\n       (param_2 + (int)(short)uVar1 <\r\n        (uint)((int)*(short *)(param_1 + 0x10) + (int)*(short *)(param_1 + 0x14)))) {\r\n      func_0x000c52e8(param_4,0,3,(int)(short)param_2,(int)(short)param_3,(int)(short)uVar1,iVar2);\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 984, "name": "FUN_00007bb8", "ea": 31672}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Removing unreachable block (ram,0x00007ef8) */\r\n/* WARNING: Removing unreachable block (ram,0x00007f08) */\r\n/* WARNING: Removing unreachable block (ram,0x00007f18) */\r\n/* WARNING: Removing unreachable block (ram,0x00007d08) */\r\n/* WARNING: Removing unreachable block (ram,0x00007d3c) */\r\n/* WARNING: Removing unreachable block (ram,0x00007d64) */\r\n/* WARNING: Removing unreachable block (ram,0x00007dd4) */\r\n/* WARNING: Removing unreachable block (ram,0x00007e24) */\r\n/* WARNING: Removing unreachable block (ram,0x00007e04) */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00007bb8(int param_1)\r\n\r\n{\r\n  int iVar1;\r\n  undefined1 *puVar2;\r\n  uint uVar3;\r\n  \r\n  if (*(short *)(param_1 + 0x22) == 1) {\r\n    uVar3 = (uint)*(ushort *)\r\n                   (*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28) +\r\n                   0x10);\r\n    iVar1 = func_0x000431e4();\r\n    puVar2 = (undefined1 *)(iVar1 + uVar3 * 0x10 + 0x2c);\r\n    if (*(short *)(param_1 + 0x202) == 0) {\r\n      iVar1 = param_1 + 0x24;\r\n      func_0x000222ec(iVar1,0x800c41e0,puVar2[1]);\r\n      func_0x000cd180(param_1 + 0x44,iVar1);\r\n      func_0x000222ec(iVar1,0x800c41e0,*puVar2);\r\n      func_0x000cd180(param_1 + 0x70,iVar1);\r\n      func_0x000222ec(iVar1,0x800c41e0,(uint)(byte)puVar2[2] + (uint)(byte)puVar2[5]);\r\n      func_0x000cd180(param_1 + 200,iVar1);\r\n      func_0x000222ec(iVar1,0x800c41e0,puVar2[7]);\r\n      func_0x000cd180(param_1 + 0xf4,iVar1);\r\n      func_0x000222ec(iVar1,0x800c41e0,puVar2[3]);\r\n      func_0x000cd180(param_1 + 0x120,iVar1);\r\n      if (uVar3 < 0x20) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n    }\r\n    else {\r\n      if ((_DAT_8004d740 == uVar3) &&\r\n         (((uVar3 == 1 || (uVar3 == 0x1b)) && (func_0x000431e4(), _DAT_8004d740 < 0x20)))) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n      func_0x000cd45c(param_1 + 0x14c);\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 520, "name": "FUN_00007f90", "ea": 32656}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00007f90(undefined4 *param_1)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  undefined4 uVar2;\r\n  undefined4 uVar3;\r\n  short sVar4;\r\n  uint uVar5;\r\n  undefined4 local_20;\r\n  \r\n  *(undefined2 *)(param_1 + 3) = 0x280;\r\n  *(undefined2 *)(param_1 + 2) = 0;\r\n  *(undefined2 *)((int)param_1 + 10) = 0;\r\n  *(undefined2 *)((int)param_1 + 0xe) = 0x104;\r\n  *param_1 = 0;\r\n  uVar3 = _DAT_800cfb40;\r\n  uVar2 = _DAT_800c4200;\r\n  uVar1 = _DAT_800c41fc;\r\n  *(undefined2 *)(param_1 + 0x7f) = 7;\r\n  *(undefined2 *)(param_1 + 0x32) = 0x80;\r\n  *(undefined2 *)(param_1 + 0x11) = 0x80;\r\n  *(undefined2 *)((int)param_1 + 0x9e) = 0x50;\r\n  *(undefined2 *)((int)param_1 + 0x72) = 0x50;\r\n  *(undefined2 *)((int)param_1 + 0x46) = 0x50;\r\n  param_1[1] = uVar3;\r\n  func_0x000cd3c4(param_1 + 0x11,0xd);\r\n  sVar4 = *(short *)((int)param_1 + 0x46) + 0x30;\r\n  *(short *)((int)param_1 + 0x122) = sVar4;\r\n  *(short *)((int)param_1 + 0xf6) = sVar4;\r\n  *(short *)((int)param_1 + 0xca) = sVar4;\r\n  func_0x000cd3c4(param_1 + 0x32,0xb);\r\n  *(short *)(param_1 + 0x3d) = *(short *)(param_1 + 0x11) + 0xc0;\r\n  *(short *)(param_1 + 0x1c) = *(short *)(param_1 + 0x11) + 0xc0;\r\n  func_0x000cd3c4(param_1 + 0x1c,0xe);\r\n  func_0x000cd3c4(param_1 + 0x3d,9);\r\n  *(short *)(param_1 + 0x48) = *(short *)(param_1 + 0x1c) + 0xc0;\r\n  *(short *)(param_1 + 0x27) = *(short *)(param_1 + 0x1c) + 0xc0;\r\n  func_0x000cd3c4(param_1 + 0x48,0xf);\r\n  func_0x000cd3c4(param_1 + 0x27,10);\r\n  param_1[0x2f] = 0;\r\n  uVar5 = (uint)*(ushort *)(param_1 + 0x7f);\r\n  while (uVar5 = uVar5 - 1 & 0xffff, uVar5 != 0xffff) {\r\n    param_1[uVar5 * 0xb + 0x18] = param_1;\r\n    param_1[uVar5 * 0xb + 0x1a] = uVar1;\r\n    param_1[uVar5 * 0xb + 0x1b] = uVar2;\r\n    if (uVar5 < 6) {\r\n      func_0x000cd26c(param_1 + uVar5 * 0xb + 0x11,uVar5 + 1);\r\n    }\r\n  }\r\n  *(undefined2 *)((int)param_1 + 0x14e) = 0x34;\r\n  *(undefined2 *)(param_1 + 0x53) = 0x140;\r\n  local_20._0_2_ = (short)uVar1;\r\n  local_20 = CONCAT22(0x5a,(short)local_20 + -0x10);\r\n  param_1[0x5b] = 2;\r\n  *(undefined2 *)((int)param_1 + 0x162) = 1;\r\n  param_1[0x5c] = local_20;\r\n  param_1[0x5d] = uVar2;\r\n  *(undefined2 *)(param_1 + 0x80) = 2;\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 1040, "name": "FUN_00008198", "ea": 33176}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Removing unreachable block (ram,0x00008310) */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00008198(int param_1)\r\n\r\n{\r\n  int iVar1;\r\n  uint uVar2;\r\n  ushort uVar3;\r\n  ushort uVar4;\r\n  uint uVar5;\r\n  undefined4 local_28;\r\n  undefined4 local_20;\r\n  \r\n  uVar5 = _DAT_8004cc58;\r\n  if ((_DAT_8004cc58 & 0xf00000) != 0) {\r\n    func_0x00040278(10,_DAT_800cedb0,0xfff);\r\n    func_0x00023000(&local_20,0,4);\r\n    uVar4 = *(ushort *)(param_1 + 0x1fe) % 3;\r\n    uVar3 = *(ushort *)(param_1 + 0x1fe) / 3;\r\n    local_20 = CONCAT22(uVar3,uVar4);\r\n    local_28 = local_20;\r\n    if ((uVar5 & 0x800000) != 0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    if ((uVar5 & 0x200000) != 0) {\r\n      local_28 = CONCAT22(uVar3,uVar4 + 1);\r\n    }\r\n    if ((uVar5 & 0x100000) != 0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    if ((uVar5 & 0x400000) != 0) {\r\n      local_28 = CONCAT22(local_28._2_2_ + 1,(ushort)local_28);\r\n    }\r\n    uVar5 = (uint)local_28._2_2_;\r\n    uVar3 = local_28._2_2_;\r\n    if (2 < (short)local_28._2_2_) {\r\n      uVar3 = 2;\r\n      uVar5 = 2;\r\n    }\r\n    if ((int)(uVar5 << 0x10) < 0) {\r\n      uVar3 = 0;\r\n    }\r\n    if (2 < (ushort)local_28) {\r\n      local_28._0_2_ = 2;\r\n    }\r\n    uVar5 = (short)uVar3 * 3 + (int)(short)(ushort)local_28;\r\n    if (*(ushort *)(param_1 + 0x1fc) <= uVar5) {\r\n      uVar5 = (uint)*(ushort *)(param_1 + 0x1fe);\r\n    }\r\n    iVar1 = uVar5 << 1;\r\n    if (*(int *)(uVar5 * 0x2c + param_1 + 100) == 2) {\r\n      uVar3 = *(ushort *)\r\n               (*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28) + 0x10)\r\n      ;\r\n      func_0x000431e4();\r\n      iVar1 = uVar5 << 1;\r\n      if (uVar5 == 6) {\r\n        if (uVar3 < 0x20) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n          halt_baddata();\r\n        }\r\n        uVar5 = (uint)*(ushort *)(param_1 + 0x1fe);\r\n        iVar1 = uVar5 << 1;\r\n      }\r\n    }\r\n    if (*(short *)(iVar1 * 0x10 + uVar5 * 0xc + param_1 + 0x5a) != *(short *)(param_1 + 0x202)) {\r\n      uVar5 = (uint)*(ushort *)(param_1 + 0x1fe);\r\n    }\r\n    uVar2 = (uint)*(ushort *)(param_1 + 0x1fe);\r\n    if (uVar5 == uVar2) goto LAB_00008478;\r\n    *(undefined4 *)(uVar2 * 0x2c + param_1 + 0x48) = 0;\r\n    *(short *)(param_1 + 0x1fe) = (short)uVar5;\r\n    *(undefined4 *)(uVar5 * 0x2c + param_1 + 0x48) = 1;\r\n    _DAT_800cf758 = 0x20;\r\n  }\r\n  uVar2 = (uint)*(ushort *)(param_1 + 0x1fe);\r\nLAB_00008478:\r\n  if (*(short *)(uVar2 * 0x2c + param_1 + 0x5a) != *(short *)(param_1 + 0x202)) {\r\n    do {\r\n      uVar3 = *(ushort *)(param_1 + 0x1fe);\r\n      *(ushort *)(param_1 + 0x1fe) = uVar3 + 1;\r\n      *(undefined4 *)((uint)uVar3 * 0x2c + param_1 + 0x48) = 0;\r\n      if (*(ushort *)(param_1 + 0x1fc) <= *(ushort *)(param_1 + 0x1fe)) {\r\n        *(undefined2 *)(param_1 + 0x1fe) = 0;\r\n      }\r\n      uVar2 = (uint)*(ushort *)(param_1 + 0x1fe);\r\n    } while (*(short *)(uVar2 * 0x2c + param_1 + 0x5a) != *(short *)(param_1 + 0x202));\r\n  }\r\n  *(undefined4 *)(uVar2 * 0x2c + param_1 + 0x48) = 1;\r\n  if ((*(int *)((uint)*(ushort *)(param_1 + 0x1fe) * 0x2c + param_1 + 100) == 0) &&\r\n     ((_DAT_8004cc58 & 0x40000000) != 0)) {\r\n    func_0x0003b978();\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 212, "name": "FUN_000085a8", "ea": 34216}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Removing unreachable block (ram,0x00008654) */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000085a8(int param_1)\r\n\r\n{\r\n  ushort uVar1;\r\n  \r\n  uVar1 = *(ushort *)\r\n           (*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28) + 0x10);\r\n  func_0x000431e4();\r\n  *(undefined4 *)((uint)*(ushort *)(param_1 + 0x1fe) * 0x2c + param_1 + 0x48) = 0;\r\n  _DAT_800cf758 = 0x20;\r\n  if (0x1f < uVar1) {\r\n    *(undefined4 *)(param_1 + 0xa0) = 1;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 324, "name": "FUN_0000867c", "ea": 34428}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_0000867c(int param_1)\r\n\r\n{\r\n  if (*(short *)(param_1 + 0x200) != 1) {\r\n    if (*(short *)(param_1 + 0x202) != 0) {\r\n      func_0x00042490(_DAT_800cfa68,(int)((*(ushort *)(param_1 + 8) + 8) * 0x10000) >> 0x10,0x18,\r\n                      *(undefined4 *)(_DAT_80048e68 + 0x1c),0,300,0,0x808080);\r\n      func_0x000c7e08(0,8,0x30,0x12,0x1e,_DAT_800cfa58 * 4 + 0x800 & 0xffc);\r\n    }\r\n    if ((int)(uint)*(ushort *)(param_1 + 0x202) < (int)(*(ushort *)(param_1 + 0x200) - 1)) {\r\n      func_0x00042490(_DAT_800cfa68,(int)((*(ushort *)(param_1 + 8) + 0xb4) * 0x10000) >> 0x10,0x18,\r\n                      *(undefined4 *)(_DAT_80048e68 + 0x18),0,300,0,0x808080);\r\n      func_0x000c7e08(0,0x10,0x230,0x12,0x1e,(_DAT_800cfa58 & 0x3ff) << 2);\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 60, "name": "FUN_000087c0", "ea": 34752}, "decompilation": "\r\nundefined4 * FUN_000087c0(undefined4 *param_1)\r\n\r\n{\r\n  func_0x000cb260();\r\n  param_1[0x81] = 0x800c4238;\r\n  *param_1 = 0x330000;\r\n  return param_1;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 40, "name": "FUN_000087fc", "ea": 34812}, "decompilation": "\r\nvoid FUN_000087fc(int param_1)\r\n\r\n{\r\n  *(undefined4 *)(param_1 + 0x204) = 0x800c4238;\r\n  func_0x000cb2b8();\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 744, "name": "FUN_00008824", "ea": 34852}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00008824(int param_1)\r\n\r\n{\r\n  short sVar1;\r\n  short sVar2;\r\n  undefined4 uVar3;\r\n  undefined4 uVar4;\r\n  undefined4 uVar5;\r\n  undefined4 uVar6;\r\n  short sVar7;\r\n  int iVar8;\r\n  uint uVar9;\r\n  int iVar10;\r\n  short local_40;\r\n  short sStack_3e;\r\n  short local_30;\r\n  short sStack_2e;\r\n  \r\n  *(undefined2 *)(param_1 + 0xc) = 0x280;\r\n  *(undefined2 *)(param_1 + 8) = 0;\r\n  *(undefined2 *)(param_1 + 10) = 0;\r\n  *(undefined2 *)(param_1 + 0xe) = 0x104;\r\n  uVar6 = _DAT_800cfa6c;\r\n  uVar4 = _DAT_800c422c;\r\n  uVar3 = _DAT_800c4228;\r\n  *(undefined2 *)(param_1 + 0x1fc) = 9;\r\n  uVar5 = _DAT_800c4230;\r\n  *(undefined4 *)(param_1 + 4) = uVar6;\r\n  func_0x00023000(&local_30,0,4);\r\n  local_40 = (short)uVar5;\r\n  iVar10 = 0x29;\r\n  uVar9 = 8;\r\n  sVar7 = (short)((ulonglong)((longlong)(0x280 - local_40) * 0x55555556) >> 0x20) -\r\n          (short)(0x280 - local_40 >> 0x1f);\r\n  _local_30 = CONCAT22(0x28,sVar7);\r\n  while( true ) {\r\n    func_0x00023000(&local_30,0,4);\r\n    sVar1 = (short)(uVar9 % 3);\r\n    sStack_3e = (short)((uint)uVar5 >> 0x10);\r\n    sVar2 = (short)(uVar9 / 3);\r\n    _local_30 = CONCAT22(sVar2,sVar1);\r\n    iVar8 = param_1 + uVar9 * 0x2c;\r\n    *(short *)(iVar8 + 0x44) = local_40 + sVar1 * sVar7;\r\n    *(short *)(iVar8 + 0x46) = sStack_3e + sVar2 * 0x28;\r\n    *(int *)(iVar8 + 0x60) = param_1;\r\n    *(undefined4 *)(iVar8 + 100) = 1;\r\n    *(undefined4 *)(iVar8 + 0x68) = uVar3;\r\n    *(undefined4 *)(iVar8 + 0x6c) = uVar4;\r\n    func_0x000431e4();\r\n    iVar8 = uVar9 * 4;\r\n    if (*(uint *)(iVar8 + -0x7ff308f0) < 0x20) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    if ((*(int *)(iVar8 + -0x7ff308f0) == 0) && (uVar9 < 4)) break;\r\n    iVar8 = param_1 + uVar9 * 0x2c + 0x44;\r\n    func_0x000cd3c4(iVar8,0x18);\r\n    func_0x000cd26c(iVar8,1);\r\n    iVar10 = iVar10 + -1;\r\n    uVar9 = uVar9 - 1 & 0xffff;\r\n    if (uVar9 == 0xffff) {\r\n      *(undefined4 *)(param_1 + 0x48) = 1;\r\n      _DAT_800cf758 = 0x20;\r\n      *(undefined2 *)(param_1 + 0x1fe) = 0;\r\n      return;\r\n    }\r\n  }\r\n  param_1 = param_1 + uVar9 * 0x2c + 0x44;\r\n  func_0x000cd3c4(param_1,iVar10);\r\n  func_0x000cd26c(param_1,*(int *)(iVar8 + -0x7ff308cc) + 2);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 312, "name": "FUN_00008b0c", "ea": 35596}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00008b0c(int param_1,int param_2)\r\n\r\n{\r\n  ushort uVar1;\r\n  int iVar2;\r\n  \r\n  func_0x000cb4bc();\r\n  if (*(short *)(param_1 + 0x22) != 0) {\r\n    if (_DAT_800cf8c4 != 5) {\r\n      _DAT_800cf8c4 = 5;\r\n    }\r\n    if (param_2 == 6) {\r\n      _DAT_800cf8c4 = 1;\r\n      func_0x000cb314(param_1,0);\r\n      _DAT_8004d6fc = 0;\r\n    }\r\n    if (((_DAT_8004cc58 & 0x40000000) != 0) && (uVar1 = *(ushort *)(param_1 + 0x22), uVar1 == 1)) {\r\n      iVar2 = func_0x000ccdac(param_1);\r\n      if (iVar2 != 0) {\r\n        func_0x000c7764(_DAT_800cedb0,5);\r\n        *(undefined4 *)(_DAT_800cedb0 + 0x10) = 0;\r\n        _DAT_800bd68c = *(undefined4 *)((uint)*(ushort *)(param_1 + 0x1fe) * 4 + -0x7ff308cc);\r\n        _DAT_8004d6fc = (uint)uVar1;\r\n        func_0x000cb314(param_1,0);\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n        halt_baddata();\r\n      }\r\n      if (_DAT_800cedb4 == 0) {\r\n        func_0x00040278(2,_DAT_800cedb0,0xfff);\r\n        _DAT_800cedb4 = 0xc;\r\n      }\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 120, "name": "FUN_00008c44", "ea": 35908}, "decompilation": "\r\nvoid FUN_00008c44(int param_1)\r\n\r\n{\r\n  if (*(short *)(param_1 + 0x22) != 0) {\r\n    func_0x000ccd1c();\r\n    if (*(short *)(param_1 + 0x22) == 1) {\r\n      func_0x000c63c0(2);\r\n      func_0x000c63c0(1);\r\n    }\r\n    func_0x000cb79c(param_1,0,1);\r\n    func_0x000cb79c(param_1,0,1);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 144, "name": "FUN_00008cbc", "ea": 36028}, "decompilation": "\r\nvoid FUN_00008cbc(int param_1)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  uint uVar2;\r\n  \r\n  uVar2 = 0;\r\n  if (*(short *)(param_1 + 0x1fc) != 0) {\r\n    do {\r\n      uVar1 = 0x808080;\r\n      if (*(ushort *)(param_1 + 0x1fe) != uVar2) {\r\n        uVar1 = 0x404040;\r\n      }\r\n      func_0x000cce50(param_1 + uVar2 * 0x2c + 0x44,uVar1,1);\r\n      uVar2 = uVar2 + 1 & 0xffff;\r\n    } while (uVar2 < *(ushort *)(param_1 + 0x1fc));\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 164, "name": "FUN_00008d4c", "ea": 36172}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nundefined4 FUN_00008d4c(int param_1)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  \r\n  if ((*(int *)((uint)*(ushort *)(param_1 + 0x1fe) * 4 + -0x7ff308f0) != 0) ||\r\n     (uVar1 = 1, 3 < *(ushort *)(param_1 + 0x1fe))) {\r\n    func_0x000431e4();\r\n    if (*(uint *)((uint)*(ushort *)(param_1 + 0x1fe) * 4 + -0x7ff308f0) < 0x20) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    uVar1 = 0;\r\n  }\r\n  return uVar1;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 228, "name": "FUN_00008df0", "ea": 36336}, "decompilation": "\r\nvoid FUN_00008df0(short *param_1,undefined4 param_2,undefined4 param_3)\r\n\r\n{\r\n  int iVar1;\r\n  \r\n  if (*(short *)(*(int *)(param_1 + 0xe) + 0x202) == param_1[0xb]) {\r\n    if ((*(int *)(param_1 + 2) != 0) && (*(short *)(*(int *)(param_1 + 0xe) + 0x22) == 1)) {\r\n      func_0x000ccf34(param_1);\r\n      func_0x000cd1d8(param_1,param_3);\r\n    }\r\n    iVar1 = *(int *)(param_1 + 0xe);\r\n    if ((*param_1 + 0x20 < (int)*(short *)(iVar1 + 0x10) + (int)*(short *)(iVar1 + 0x14)) &&\r\n       (param_1[1] + 0x10 < (int)*(short *)(iVar1 + 0x12) + (int)*(short *)(iVar1 + 0x16))) {\r\n      func_0x0008ed68((int)*param_1,(int)param_1[1],0x20,param_1[10],0xffffffff,param_2);\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 588, "name": "FUN_00008ed4", "ea": 36564}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00008ed4(ushort *param_1)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  int iVar3;\r\n  int iVar4;\r\n  short sVar5;\r\n  uint uVar6;\r\n  uint uVar7;\r\n  uint uVar8;\r\n  uint uVar9;\r\n  \r\n  if (*(short *)(*(int *)(param_1 + 0xe) + 0x202) != 1) {\r\n    _DAT_800cf758 = _DAT_800cf758 + 1 & 0x3f;\r\n    if (0x20 < _DAT_800cf758) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    uVar9 = 0;\r\n    iVar1 = _DAT_800cf758 * 0x40404;\r\n    uVar7 = *param_1 - 0x30 & 0xffff;\r\n    sVar5 = (short)(*param_1 - 0x30);\r\n    uVar8 = param_1[1] - 0x14 & 0xffff;\r\n    iVar4 = (int)(short)(param_1[1] - 0x14);\r\n    func_0x0008ed68((int)sVar5,iVar4,4,0x19,0xffffffff,iVar1);\r\n    iVar3 = (int)((uVar7 + 100) * 0x10000) >> 0x10;\r\n    func_0x0008ed68(iVar3,iVar4,4,0x1b,0xffffffff,iVar1);\r\n    iVar2 = (int)((uVar8 + 0x28) * 0x10000) >> 0x10;\r\n    func_0x0008ed68(iVar3,iVar2,4,0x1d,0xffffffff,iVar1);\r\n    func_0x0008ed68((int)sVar5,(int)((param_1[1] + 0x14) * 0x10000) >> 0x10,4,0x1f,0xffffffff,iVar1)\r\n    ;\r\n    uVar6 = uVar7;\r\n    do {\r\n      uVar6 = uVar6 + 4;\r\n      func_0x0008ed68((int)(short)uVar6,iVar4,4,0x1a,0xffffffff,iVar1);\r\n      func_0x0008ed68((int)(short)uVar6,iVar2,4,0x1e,0xffffffff,iVar1);\r\n      uVar9 = uVar9 + 1;\r\n    } while (uVar9 < 0x19);\r\n    uVar6 = 0;\r\n    iVar2 = (uVar8 + 4) * 0x10000;\r\n    do {\r\n      func_0x0008ed68((int)sVar5,iVar2 >> 0x10,4,0x20,0xffffffff,iVar1);\r\n      func_0x0008ed68((int)((uVar7 + 100) * 0x10000) >> 0x10,iVar2 >> 0x10,4,0x1c,0xffffffff,iVar1);\r\n      uVar6 = uVar6 + 1;\r\n      iVar2 = iVar2 + 0x40000;\r\n    } while (uVar6 < 9);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 88, "name": "FUN_00009120", "ea": 37152}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00009120(ushort *param_1,undefined4 param_2)\r\n\r\n{\r\n  func_0x00042490(_DAT_800cfa64,(int)((*param_1 + 2) * 0x10000) >> 0x10,(int)(short)param_1[1],\r\n                  param_2,0,300,0,0x808080);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 148, "name": "FUN_00009178", "ea": 37240}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00009178(int param_1)\r\n\r\n{\r\n  int iVar1;\r\n  \r\n  iVar1 = *(int *)(param_1 + 0x1c);\r\n  if ((*(short *)(iVar1 + 0x22) == 1) && (*(int *)(param_1 + 0x18) != 0)) {\r\n    func_0x00042490(_DAT_800cfadc,\r\n                    (int)(((uint)*(ushort *)(iVar1 + 8) + (uint)*(ushort *)(param_1 + 0x24)) *\r\n                         0x10000) >> 0x10,\r\n                    (int)(((uint)*(ushort *)(iVar1 + 10) + (uint)*(ushort *)(param_1 + 0x26)) *\r\n                         0x10000) >> 0x10,*(int *)(param_1 + 0x18),0,300,0,0x808080);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 124, "name": "FUN_0000920c", "ea": 37388}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_0000920c(int param_1,int param_2)\r\n\r\n{\r\n  if ((*(int *)(param_1 + 0x20) != 1) && (*(int *)(param_1 + 0x20) != 2)) {\r\n    *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(&DAT_800cfb40 + param_2 * 4);\r\n    func_0x000423ac(_DAT_800cfadc,*(undefined4 *)(param_1 + 0x18),(int)*(short *)(param_1 + 0x28));\r\n    return;\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 220, "name": "FUN_00009288", "ea": 37512}, "decompilation": "\r\nvoid FUN_00009288(void)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  short *psVar2;\r\n  int iVar3;\r\n  int iVar4;\r\n  uint uVar5;\r\n  undefined2 local_28;\r\n  undefined2 local_26;\r\n  undefined4 local_24;\r\n  \r\n  uVar5 = 0x19;\r\n  do {\r\n    iVar3 = uVar5 * 0x18;\r\n    iVar4 = iVar3 + -0x7ffb4348;\r\n    uVar1 = func_0x000413a4(iVar4);\r\n    func_0x0009f30c(&local_28,iVar4,uVar1);\r\n    iVar4 = uVar5 * 0xc;\r\n    *(undefined2 *)(iVar4 + -0x7ff30448) = local_28;\r\n    *(undefined2 *)(iVar4 + -0x7ff30446) = local_26;\r\n    psVar2 = (short *)(iVar4 + -0x7ff30440);\r\n    *(undefined4 *)(iVar4 + -0x7ff30444) = local_24;\r\n    uVar5 = uVar5 + 1 & 0xffff;\r\n    *(undefined4 *)psVar2 = *(undefined4 *)(iVar3 + -0x7ffb433c);\r\n    *psVar2 = *psVar2 << 2;\r\n  } while (uVar5 < 0x21);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 152, "name": "FUN_00009364", "ea": 37732}, "decompilation": "\r\nvoid FUN_00009364(int param_1,ushort param_2)\r\n\r\n{\r\n  undefined4 uVar1;\r\n  int iVar2;\r\n  undefined2 local_18;\r\n  undefined2 local_16;\r\n  undefined4 local_14;\r\n  \r\n  iVar2 = (uint)param_2 * 0x18 + -0x7ffb4348;\r\n  uVar1 = func_0x000413a4(iVar2);\r\n  func_0x0009f30c(&local_18,iVar2,uVar1);\r\n  *(undefined2 *)(param_1 + 8) = local_18;\r\n  *(undefined2 *)(param_1 + 10) = local_16;\r\n  *(undefined4 *)(param_1 + 0xc) = local_14;\r\n  uVar1 = *(undefined4 *)((uint)param_2 * 0x18 + -0x7ffb433c);\r\n  *(ushort *)(param_1 + 0x14) = param_2;\r\n  *(undefined4 *)(param_1 + 0x10) = uVar1;\r\n  *(short *)(param_1 + 0x10) = *(short *)(param_1 + 0x10) << 2;\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 476, "name": "FUN_000093fc", "ea": 37884}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000093fc(int param_1)\r\n\r\n{\r\n  short sVar1;\r\n  int iVar2;\r\n  short sVar3;\r\n  undefined4 local_28;\r\n  \r\n  iVar2 = func_0x000423ac(_DAT_800cfadc,*(undefined4 *)(param_1 + 0x18),\r\n                          (int)*(short *)(param_1 + 0x28));\r\n  local_28 = _DAT_800c4258;\r\n  iVar2 = (iVar2 + 1) * 0x10 + (int)*(short *)(*(int *)(param_1 + 0x1c) + 10) +\r\n          (int)*(short *)(param_1 + 0x26);\r\n  sVar3 = (short)iVar2;\r\n  if (*(short *)(*(int *)(_DAT_800cedb0 + (uint)*(ushort *)(_DAT_800cedb0 + 0x42) * 4 + 0x28) + 0x10\r\n                ) == _DAT_8004d740) {\r\n    local_28 = CONCAT22(_DAT_8004d746,_DAT_8004d744);\r\n  }\r\n  if ((short)local_28 != -1) {\r\n    sVar1 = func_0x000423ac(_DAT_800cfadc,*(undefined4 *)(_DAT_8004d744 * 4 + -0x7ff3067c),\r\n                            (int)*(short *)(param_1 + 0x28));\r\n    func_0x00042490(_DAT_800cfadc,\r\n                    (int)(((uint)*(ushort *)(*(int *)(param_1 + 0x1c) + 8) +\r\n                          (uint)*(ushort *)(param_1 + 0x24)) * 0x10000) >> 0x10,\r\n                    iVar2 * 0x10000 >> 0x10,*(undefined4 *)(_DAT_8004d744 * 4 + -0x7ff3067c),0,300,0\r\n                    ,0x808080);\r\n    sVar3 = sVar3 + (sVar1 + 1) * 0x10;\r\n  }\r\n  if (local_28._2_2_ != -1) {\r\n    func_0x00042490(_DAT_800cfadc,\r\n                    (int)(((uint)*(ushort *)(*(int *)(param_1 + 0x1c) + 8) +\r\n                          (uint)*(ushort *)(param_1 + 0x24)) * 0x10000) >> 0x10,(int)sVar3,\r\n                    *(undefined4 *)(_DAT_8004d746 * 4 + -0x7ff3067c),0,300,0,0x808080);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 544, "name": "FUN_000095d8", "ea": 38360}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nint FUN_000095d8(uint param_1)\r\n\r\n{\r\n  int iVar1;\r\n  int iVar2;\r\n  \r\n  param_1 = param_1 & 0xffff;\r\n  if (param_1 < 0x37) {\r\n    _DAT_800cfcd0 = (uint)*(byte *)(param_1 + 0x800cf774);\r\n    if (_DAT_800cfcd0 != 0) {\r\n      func_0x0003d754(1);\r\n      if (4 < _DAT_800cfcd0 - 0x21) {\r\n        _DAT_800cfcc2 = 0x1ff;\r\n        _DAT_800cfcc4 = 0x100;\r\n        _DAT_800cfcc8 = _DAT_800cfae0;\r\n        _DAT_800cfccc = _DAT_800cfa68;\r\n        func_0x0003ce14(0);\r\n        func_0x000cde5c(param_1);\r\n        DAT_80048e94 = 1;\r\n        _DAT_800cfcc0 = 0;\r\n        func_0x000423ac(_DAT_800cfccc,_DAT_800cfcbc,(int)_DAT_800cf760);\r\n        func_0x0003e7c0(0x800c425c,1);\r\n        func_0x0003e838(0,1);\r\n        do {\r\n          func_0x0003dec4();\r\n          iVar1 = func_0x00041614();\r\n          func_0x00043b60();\r\n          iVar2 = 1;\r\n          if (iVar1 == 0) {\r\n            iVar2 = func_0x000cd858();\r\n          }\r\n          func_0x00043b90(*(int *)(_DAT_80043cfc + 0x78) + 4);\r\n          func_0x0003cc50(3);\r\n        } while (iVar2 == 0);\r\n        func_0x0003cc50(7);\r\n        func_0x0003cc50(7);\r\n        func_0x0003d7b4(1);\r\n        if ((iVar2 == 1) && (4 < _DAT_800cfcd0 - 0x21)) {\r\n          func_0x0003e7c0(0x800c425c,1);\r\n          func_0x0003e838(6,1);\r\n        }\r\n        return iVar2;\r\n      }\r\n      _DAT_800cfcc8 = _DAT_800d16bc;\r\n      _DAT_800cfccc = _DAT_800d16c4;\r\n      _DAT_800cfcc2 = _DAT_800cf6e0;\r\n      _DAT_800cfcc4 = _DAT_800cf6e2;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    _DAT_800cfcd0 = 0;\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 816, "name": "FUN_000097f8", "ea": 38904}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000097f8(void)\r\n\r\n{\r\n  bool bVar1;\r\n  undefined4 uVar2;\r\n  uint uVar3;\r\n  int iVar4;\r\n  ushort uVar5;\r\n  uint uVar6;\r\n  char *pcVar7;\r\n  char *pcVar8;\r\n  char unaff_s4;\r\n  short local_50;\r\n  ushort uStack_4e;\r\n  short local_4c;\r\n  \r\n  uVar3 = _DAT_800cf760;\r\n  uVar2 = _DAT_800cf75c;\r\n  if (0x25 < _DAT_800cfcd0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  pcVar8 = _DAT_800cfcbc;\r\n  if (0xb < _DAT_800cfcc0) {\r\n    iVar4 = 0x18;\r\nLAB_000098c8:\r\n    do {\r\n      unaff_s4 = *pcVar8;\r\n      pcVar8 = pcVar8 + 1;\r\n      if (unaff_s4 != '\\n') {\r\n        if (unaff_s4 != '\\0') goto LAB_000098c8;\r\n      }\r\n      bVar1 = iVar4 <= _DAT_800cfcc0;\r\n      iVar4 = iVar4 + 0xc;\r\n    } while (bVar1);\r\n  }\r\n  uVar5 = (ushort)(_DAT_800cf760 >> 0x10);\r\n  iVar4 = ((int)(short)uVar5 / 0xc) * 0x10000 >> 0x10;\r\n  uVar6 = 0;\r\n  pcVar7 = pcVar8;\r\n  if (iVar4 == -2) {\r\nLAB_0000995c:\r\n    func_0x000ce6e4();\r\n    func_0x000ce528(1,0,0x10,0xb0,0x808080,1);\r\n    local_50 = (short)uVar2;\r\n    uStack_4e = (ushort)((uint)uVar2 >> 0x10);\r\n    local_4c = (short)uVar3;\r\n    func_0x000ce298((int)local_50,\r\n                    (int)(((uint)uStack_4e + (uVar3 >> 0x10) + -0x30) * 0x10000) >> 0x10,\r\n                    (int)local_4c,0x30,0,0,0xffffff);\r\n    func_0x000ce1e4((int)local_50,(int)((uStack_4e - 0xc) * 0x10000) >> 0x10,(int)local_4c,0xc,0,\r\n                    0xffffffff,0);\r\n    func_0x000ce1e4((int)local_50,(int)(((uint)uStack_4e + (uint)uVar5) * 0x10000) >> 0x10,\r\n                    (int)local_4c,0x18,0,0xffffffff,0);\r\n    pcVar7[-1] = '\\0';\r\n    func_0x00042490(_DAT_800cfccc,(int)local_50,\r\n                    (int)(((uint)uStack_4e - (int)_DAT_800cfcc0 % 0xc) * 0x10000) >> 0x10,pcVar8,0,\r\n                    0xff,0,0x808080);\r\n    pcVar7[-1] = unaff_s4;\r\n    func_0x000ce1e4((int)local_50,(int)((uStack_4e - 0xc) * 0x10000) >> 0x10,(int)local_4c,\r\n                    (int)((uVar5 + 0x24) * 0x10000) >> 0x10,0,0xffffffff,0);\r\n    if (0x25 < _DAT_800cfcd0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\nLAB_0000992c:\r\n  do {\r\n    unaff_s4 = *pcVar7;\r\n    pcVar7 = pcVar7 + 1;\r\n    if (unaff_s4 != '\\n') {\r\n      if (unaff_s4 != '\\0') goto LAB_0000992c;\r\n    }\r\n    if ((unaff_s4 == '\\0') || (uVar6 = uVar6 + 1, iVar4 + 2U <= uVar6)) goto LAB_0000995c;\r\n  } while( true );\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 632, "name": "FUN_00009dfc", "ea": 40444}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00009dfc(uint param_1)\r\n\r\n{\r\n  int iVar1;\r\n  char *pcVar2;\r\n  int iVar3;\r\n  char *pcVar4;\r\n  undefined1 auStack_28 [12];\r\n  int local_1c;\r\n  undefined4 local_18;\r\n  \r\n  iVar1 = func_0x0003d234((int)((*(byte *)((param_1 & 0xffff) + 0x800cf774) + 0x30a +\r\n                                _DAT_8004cd18 * 0x2d) * 0x10000) >> 0x10,1);\r\n  func_0x0003d084();\r\n  pcVar2 = (char *)func_0x0003d44c(*(int *)(iVar1 + 0x2c) + 0x14,1,0);\r\n  _DAT_800cfcbc = pcVar2;\r\n  func_0x0003d900(pcVar2,iVar1 + *(int *)(iVar1 + 0x28),(*(uint *)(iVar1 + 0x2c) >> 1) + 2);\r\n  do {\r\n    pcVar4 = pcVar2;\r\n    pcVar2 = pcVar4 + 1;\r\n  } while (*pcVar4 != '\\0');\r\n  *pcVar4 = '\\n';\r\n  pcVar4[1] = '\\n';\r\n  pcVar4[2] = '\\0';\r\n  func_0x0002080c(iVar1 + *(int *)(iVar1 + 0x50));\r\n  func_0x0002081c(auStack_28);\r\n  *(undefined2 *)(local_1c + 2) = 0x10;\r\n  func_0x0001beb4(local_1c,local_18);\r\n  *(undefined2 *)(local_1c + 2) = 0x110;\r\n  func_0x0001beb4(local_1c,local_18);\r\n  _DAT_800cfc40 = iVar1 + *(int *)(iVar1 + 0x78);\r\n  func_0x000ce360(1);\r\n  iVar1 = func_0x0003d234(0x30a,1);\r\n  func_0x0003d084();\r\n  iVar3 = func_0x0003d000(iVar1,0x800c426c);\r\n  if (iVar3 != 0) {\r\n    _DAT_800cfc54 = iVar1 + *(int *)(iVar3 + 0x20);\r\n    func_0x000ce360(2);\r\n  }\r\n  iVar3 = func_0x0003d000(iVar1,0x800c4278);\r\n  if (iVar3 != 0) {\r\n    _DAT_800cfc68 = iVar1 + *(int *)(iVar3 + 0x20);\r\n    func_0x000ce360(3);\r\n  }\r\n  iVar3 = func_0x0003d000(iVar1,0x800c4284);\r\n  if (iVar3 != 0) {\r\n    _DAT_800cfc7c = iVar1 + *(int *)(iVar3 + 0x20);\r\n    func_0x000ce360(4);\r\n  }\r\n  iVar3 = func_0x0003d000(iVar1,0x800c4294);\r\n  if (iVar3 != 0) {\r\n    _DAT_800cfc90 = iVar1 + *(int *)(iVar3 + 0x20);\r\n    func_0x000ce360(5);\r\n  }\r\n  iVar3 = func_0x0003d000(iVar1,0x800c42a4);\r\n  if (iVar3 != 0) {\r\n    _DAT_800cfca4 = iVar1 + *(int *)(iVar3 + 0x20);\r\n    func_0x000ce360(6);\r\n  }\r\n  iVar3 = func_0x0003d000(iVar1,0x800c42b0);\r\n  if (iVar3 != 0) {\r\n    _DAT_800cfcb8 = iVar1 + *(int *)(iVar3 + 0x20);\r\n    func_0x000ce360(7);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 272, "name": "FUN_0000a074", "ea": 41076}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_0000a074(void)\r\n\r\n{\r\n  uint uVar1;\r\n  undefined2 local_10;\r\n  undefined2 uStack_e;\r\n  undefined2 local_c;\r\n  \r\n  uVar1 = _DAT_800cf760;\r\n  if (0x25 < _DAT_800cfcd0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  local_10 = (short)_DAT_800cf75c;\r\n  uStack_e = (ushort)((uint)_DAT_800cf75c >> 0x10);\r\n  local_c = (short)_DAT_800cf760;\r\n  func_0x000ce1e4((int)local_10,(int)((uStack_e - 0xc) * 0x10000) >> 0x10,(int)local_c,0xc,0,\r\n                  0xffffffff,0);\r\n  func_0x000ce1e4((int)local_10,(int)(((uint)uStack_e + (uVar1 >> 0x10)) * 0x10000) >> 0x10,\r\n                  (int)local_c,0x18,0,0xffffffff,0);\r\n  func_0x000ce1e4((int)local_10,(int)((uStack_e - 0xc) * 0x10000) >> 0x10,(int)local_c,0x24,0,\r\n                  0xffffffff,0);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 456, "name": "FUN_0000a300", "ea": 41728}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_0000a300(uint param_1)\r\n\r\n{\r\n  ushort uVar1;\r\n  int iVar2;\r\n  short sVar3;\r\n  short sVar4;\r\n  uint uVar5;\r\n  uint local_30 [2];\r\n  undefined4 local_28;\r\n  ushort *local_24;\r\n  undefined4 local_20;\r\n  \r\n  iVar2 = param_1 * 0x14;\r\n  func_0x0002080c(*(undefined4 *)(iVar2 + -0x7ff303d4));\r\n  func_0x0002081c(local_30);\r\n  if ((param_1 & 0xffff) == 1) {\r\n    local_24[1] = local_24[1] + 0x20;\r\n  }\r\n  func_0x0001beb4(local_24,local_20);\r\n  uVar5 = local_30[0] & 3;\r\n  *(ushort *)(iVar2 + -0x7ff303e2) =\r\n       ((ushort)local_30[0] & 3) << 7 | (short)(local_24[1] & 0x100) >> 4 |\r\n       (ushort)((*local_24 & 0x3ff) >> 6) | (local_24[1] & 0x200) << 2;\r\n  sVar4 = _DAT_800cfcc4;\r\n  sVar3 = _DAT_800cfcc2;\r\n  if (uVar5 == 1) {\r\n    *(ushort *)(iVar2 + -0x7ff303e4) = _DAT_800cfcc2 << 6 | 0x28;\r\n    func_0x00023030(local_28,0x280,sVar3);\r\n    _DAT_800cfcc2 = _DAT_800cfcc2 + -1;\r\n  }\r\n  else if (uVar5 == 0) {\r\n    *(ushort *)(iVar2 + -0x7ff303e4) = _DAT_800cfcc4 << 6 | 0x3f;\r\n    func_0x000230a0(local_28,0x3f0,sVar4);\r\n    _DAT_800cfcc4 = _DAT_800cfcc4 + 1;\r\n  }\r\n  else if (uVar5 == 2) {\r\n    *(ushort *)(iVar2 + -0x7ff303de) = *local_24 & 0x3f;\r\n    *(ushort *)(iVar2 + -0x7ff303dc) = (ushort)(byte)local_24[1];\r\n    *(ushort *)(iVar2 + -0x7ff303da) = local_24[2];\r\n    uVar1 = local_24[3];\r\n    *(ushort *)(iVar2 + -0x7ff303e0) = (ushort)local_30[0] & 3;\r\n    *(ushort *)(iVar2 + -0x7ff303d8) = uVar1;\r\n    return;\r\n  }\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "ROT.BIN", "function": {"size": 444, "name": "FUN_0000a4c8", "ea": 42184}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_0000a4c8(int param_1,undefined4 param_2,uint param_3,undefined2 param_4,uint param_5,\r\n                 int param_6)\r\n\r\n{\r\n  undefined2 uVar1;\r\n  ushort uVar2;\r\n  undefined2 uVar3;\r\n  undefined2 uVar4;\r\n  uint *puVar5;\r\n  int iVar6;\r\n  int iVar7;\r\n  uint *puVar8;\r\n  uint *puVar9;\r\n  int iVar10;\r\n  short sVar11;\r\n  uint uVar12;\r\n  uint *puVar13;\r\n  \r\n  param_1 = param_1 * 0x14;\r\n  param_3 = param_3 & 0xffff;\r\n  uVar1 = *(undefined2 *)(param_1 + -0x7ff303d8);\r\n  iVar6 = (uint)*(ushort *)(param_1 + -0x7ff303da) << 0x10;\r\n  iVar10 = iVar6 >> 0x10;\r\n  if (param_6 != 0) {\r\n    param_3 = 0x140U - (iVar10 - (iVar6 >> 0x1f) >> 1) & 0xffff;\r\n  }\r\n  uVar2 = *(ushort *)(param_1 + -0x7ff303e0);\r\n  if (uVar2 == 1) {\r\n    iVar6 = 0x80;\r\n  }\r\n  else if (uVar2 < 2) {\r\n    iVar6 = 0x100;\r\n    if (uVar2 != 0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n  }\r\n  else {\r\n    iVar6 = 0x40;\r\n    if (uVar2 != 2) {\r\n      halt_baddata();\r\n    }\r\n  }\r\n  sVar11 = *(short *)(param_1 + -0x7ff303de);\r\n  uVar3 = *(undefined2 *)(param_1 + -0x7ff303dc);\r\n  puVar13 = (uint *)_DAT_80043cfc[0x1e];\r\n  uVar12 = (uint)*(ushort *)(param_1 + -0x7ff303e2);\r\n  puVar8 = (uint *)(*puVar13 & 0xffffff);\r\n  puVar5 = (uint *)*_DAT_80043cfc;\r\n  while( true ) {\r\n    puVar9 = puVar5;\r\n    if (sVar11 != 0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n      halt_baddata();\r\n    }\r\n    iVar7 = iVar10;\r\n    if (iVar6 <= iVar10) {\r\n      iVar7 = (int)(short)iVar6;\r\n    }\r\n    *puVar9 = (uint)puVar8 | 0x5000000;\r\n    puVar9[2] = param_5 | 0x64000000;\r\n    *(short *)(puVar9 + 3) = (short)param_3;\r\n    *(undefined2 *)((int)puVar9 + 0xe) = param_4;\r\n    puVar9[1] = uVar12 | 0xe1000200;\r\n    uVar4 = *(undefined2 *)(param_1 + -0x7ff303e4);\r\n    *(undefined1 *)(puVar9 + 4) = 0;\r\n    *(char *)((int)puVar9 + 0x11) = (char)uVar3;\r\n    *(undefined2 *)((int)puVar9 + 0x12) = uVar4;\r\n    if (iVar10 < iVar7) break;\r\n    *(short *)(puVar9 + 5) = (short)iVar7;\r\n    *(undefined2 *)((int)puVar9 + 0x16) = uVar1;\r\n    sVar11 = 0;\r\n    iVar10 = (iVar10 - iVar7) * 0x10000 >> 0x10;\r\n    param_3 = param_3 + iVar7 & 0xffff;\r\n    uVar12 = uVar12 + 1 & 0xffff;\r\n    puVar8 = puVar9;\r\n    puVar5 = puVar9 + 6;\r\n    if (iVar10 < 1) {\r\n      *puVar13 = *puVar13 & 0xff000000 | (uint)puVar9;\r\n      *_DAT_80043cfc = puVar9 + 6;\r\n      return;\r\n    }\r\n  }\r\n  *(short *)(puVar9 + 5) = (short)iVar10;\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
