{"callees": [], "tool": "ghidra", "binary": "MPLR.BIN", "function": {"size": 928, "name": "FUN_00000574", "ea": 1396}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00000574(int param_1)\r\n\r\n{\r\n  short sVar1;\r\n  undefined2 uVar2;\r\n  short sVar3;\r\n  undefined2 uVar4;\r\n  int iVar5;\r\n  \r\n  uVar4 = *(undefined2 *)(param_1 + 10);\r\n  sVar1 = *(short *)(param_1 + 0xc);\r\n  uVar2 = *(undefined2 *)(param_1 + 0xe);\r\n  sVar3 = *(short *)(param_1 + 0x10);\r\n  _DAT_800c5022 = *(short *)(param_1 + 8);\r\n  iVar5 = (int)_DAT_800c5022;\r\n  _DAT_800c5020 = *(short *)(param_1 + 4);\r\n  _DAT_800c502c = *(undefined4 *)(param_1 + 0x14);\r\n  _DAT_800c5030 = *(short *)(param_1 + 0x1c);\r\n  _DAT_800c5034 = 0;\r\n  _DAT_800c5050 = 0;\r\n  _DAT_800c5052 = 0;\r\n  _DAT_800c5054 = 0;\r\n  _DAT_800c5056 = 0;\r\n  _DAT_800c5058 = 0;\r\n  _DAT_800c5024 = uVar4;\r\n  _DAT_800c5026 = sVar1;\r\n  _DAT_800c5028 = uVar2;\r\n  _DAT_800c502a = sVar3;\r\n  func_0x000207bc(0x800c506c,0,0x100,iVar5,0x100);\r\n  func_0x000207bc(0x800c5080,0,0,iVar5,0x100);\r\n  _DAT_800c5074 = 8;\r\n  _DAT_800c5076 = 0x18;\r\n  _DAT_800c5078 = 0;\r\n  _DAT_800c507a = 0x100;\r\n  _DAT_800c5088 = 8;\r\n  _DAT_800c508a = 0x18;\r\n  _DAT_800c508c = 0;\r\n  _DAT_800c508e = 0x100;\r\n  DAT_800c507d = *(short *)(param_1 + 4) == 1;\r\n  DAT_800c5091 = DAT_800c507d;\r\n  if ((*(short *)(param_1 + 6) != 0) || (_DAT_800c5020 != 0)) {\r\n    func_0x000c4a30();\r\n  }\r\n  func_0x000205ac(0);\r\n  func_0x0001c438((short)_DAT_800c5054 * 0x14 + -0x7ff3af94);\r\n  _DAT_800c5038 = func_0x000c4dc8(uVar4);\r\n  _DAT_800c503a = sVar1;\r\n  _DAT_800c503c = func_0x000c4dc8(uVar2);\r\n  _DAT_800c503e = sVar3;\r\n  _DAT_800c5040 = func_0x000c4dc8(uVar4);\r\n  _DAT_800c5042 = sVar1 + 0x100;\r\n  _DAT_800c5044 = func_0x000c4dc8(uVar2);\r\n  iVar5 = (int)((uint)_DAT_800c5054 << 0x10) >> 0xd;\r\n  _DAT_800c5048 = *(undefined4 *)(&DAT_800c5038 + iVar5);\r\n  _DAT_800c504c = *(undefined4 *)(&DAT_800c503c + iVar5);\r\n  _DAT_800c5046 = sVar3;\r\n  uVar4 = func_0x000c4dc8(0x10);\r\n  _DAT_800c504c = CONCAT22(DAT_800c504c_2,uVar4);\r\n  iVar5 = 0x20400;\r\n  if (*(int *)(param_1 + 0x18) != 0) {\r\n    iVar5 = *(int *)(param_1 + 0x18);\r\n  }\r\n  func_0x0003d754(1);\r\n  _DAT_800c505c = func_0x0003d44c(iVar5,1,0x800c41bc);\r\n  _DAT_800c5060 = func_0x0003d44c(iVar5,1,0x800c41c8);\r\n  _DAT_800c501c = func_0x0003d44c(0x11000,1,0x800c41d4);\r\n  func_0x0001b79c(_DAT_800c501c);\r\n  if (_DAT_800c5020 != 0) {\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n    halt_baddata();\r\n  }\r\n  _DAT_800c5064 = func_0x0003d44c((int)sVar3 << 5,1,0x800c41e0);\r\n  _DAT_800c5068 = func_0x0003d44c((int)sVar3 << 5,1,0x800c41f0);\r\n  func_0x0001f27c(0);\r\n  func_0x0001fa3c(0);\r\n  func_0x0001f518(0x800c44bc);\r\n  _DAT_800c5018 = func_0x0003d44c(0x20000,1,0x800c4200);\r\n  func_0x0001ff2c(_DAT_800c5018,0x40);\r\n  func_0x0001fdbc((int)_DAT_800c5020,0,0xffffffff,0,0);\r\n  func_0x0001fe4c(0,&DAT_800c5094);\r\n  func_0x0001ff5c(0,(int)_DAT_800c5030,(int)_DAT_800c5030);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "MPLR.BIN", "function": {"size": 188, "name": "FUN_00000914", "ea": 2324}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00000914(void)\r\n\r\n{\r\n  func_0x000207fc();\r\n  func_0x0001f4f4(0);\r\n  func_0x0001f518(0);\r\n  func_0x000204ec();\r\n  func_0x0001f470(0);\r\n  func_0x0001f4ac(0);\r\n  func_0x0002039c(9,0,0);\r\n  func_0x0001f90c();\r\n  if (_DAT_800c5020 != 0) {\r\n    func_0x000c4a30();\r\n  }\r\n  func_0x0003d7b4(1);\r\n  _DAT_800c505c = 0;\r\n  _DAT_800c5060 = 0;\r\n  _DAT_800c5064 = 0;\r\n  _DAT_800c5068 = 0;\r\n  _DAT_800c5018 = 0;\r\n  _DAT_800c501c = 0;\r\n  func_0x0001ff5c(0,(int)_DAT_800c5094,(int)_DAT_800c5096);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "MPLR.BIN", "function": {"size": 108, "name": "FUN_000009d0", "ea": 2512}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_000009d0(void)\r\n\r\n{\r\n  undefined2 local_10;\r\n  undefined2 local_e;\r\n  undefined2 local_c;\r\n  undefined2 local_a;\r\n  \r\n  local_10 = 0;\r\n  local_e = 0;\r\n  local_c = func_0x000c4dc8(_DAT_800c5022);\r\n  local_a = 0x100;\r\n  func_0x0001bd8c(&local_10,0,0,0);\r\n  local_e = 0x100;\r\n  func_0x0001bd8c(&local_10,0,0,0);\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "MPLR.BIN", "function": {"size": 64, "name": "FUN_00000a3c", "ea": 2620}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nvoid FUN_00000a3c(void)\r\n\r\n{\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "MPLR.BIN", "function": {"size": 36, "name": "FUN_00000af8", "ea": 2808}, "decompilation": "\r\n/* WARNING: Control flow encountered bad instruction data */\r\n\r\nvoid FUN_00000af8(void)\r\n\r\n{\r\n                    /* WARNING: Bad instruction - Truncating control flow here */\r\n  halt_baddata();\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "MPLR.BIN", "function": {"size": 104, "name": "FUN_00000bd4", "ea": 3028}, "decompilation": "\r\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\r\n\r\nvoid FUN_00000bd4(int param_1)\r\n\r\n{\r\n  if (param_1 != 0) {\r\n    _DAT_800c5056 = _DAT_800c5056 ^ 1;\r\n    func_0x0001fa6c(param_1,*(undefined4 *)\r\n                             (&DAT_800c505c + ((int)((uint)_DAT_800c5056 << 0x10) >> 0xe)),\r\n                    _DAT_800c501c);\r\n    func_0x000204fc(param_1);\r\n  }\r\n  return;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
{"callees": [], "tool": "ghidra", "binary": "MPLR.BIN", "function": {"size": 92, "name": "FUN_00000ca8", "ea": 3240}, "decompilation": "\r\nint FUN_00000ca8(ushort *param_1)\r\n\r\n{\r\n  ushort uVar1;\r\n  \r\n  uVar1 = *param_1;\r\n  *param_1 = uVar1 - 8;\r\n  if ((int)((uint)(ushort)(uVar1 - 8) << 0x10) < 0) {\r\n    *param_1 = 0;\r\n  }\r\n  func_0x0001ff5c(0,(int)(short)*param_1,(int)(short)*param_1);\r\n  return (uint)(*param_1 == 0) << 1;\r\n}\r\n\r\n", "callers": [], "strings_used": []}
