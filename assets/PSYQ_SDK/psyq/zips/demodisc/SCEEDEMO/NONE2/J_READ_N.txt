このディレクトリには、none2.objの代わりが含まれています。

ご存知の通り、コードをlibsn.libの代わりにnone2.objにリンクすると正しく起動しませんが、別のプログラムがnone2.objにリンクされたプログラムをロード・実行し、それが完了したときに制御を取り戻すことができます。 違いは、none2が新しいスタック・ポインタをセットアップせず、bssをクリアせず、ヒープの再初期化も行わないこと。そしてプログラムの終わり(メイン()から出るとき)に、libsnがbreak $1を行い、none2がnopを実行することです。

しかし、これは問題です! libsnの新しいバージョンには、可変値_ramsize、_stacksize(これらのサイズを人工的に設定します)と、プログラムの様々なセグメントがある位置を識別(Cでのプログラミング用　-　私もその一人です)する__heapbase, __heapsizeなどがあります。 しかし、none2.objにはこれらの可変値が全くありません。

そこで、2つを混ぜたnone2.libを作りました。これは、none2.objが持たない機能(スタック、ヒープ、bss)を持たず、libsnの良い機能の一部(__heapbaseなど)を持っています。 

子プログラムをリンクすると同時に、すべての要素の状態も伝えられるようになりました。 非常に便利です。
